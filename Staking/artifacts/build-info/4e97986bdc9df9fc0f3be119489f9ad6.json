{
	"id": "4e97986bdc9df9fc0f3be119489f9ad6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"Staking/staking.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\ncontract Staking is ReentrancyGuard {\n\n    IERC20 public stakingToken;\n    IERC20 public rewardToken;\n\n    using SafeMath for uint256;\n    uint256 public constant Reward_Rate = 1e18;  \n    uint256 private  totalStakedTokens;\n    uint256 public  rewardperTokenStored;\n    uint256 public lastUpdateTime;\n\n    mapping(address=>uint) public stakedBalance;\n    mapping(address=>uint) public rewards;\n    mapping(address=>uint) public userRewardPerTokenPaid;\n\n    event Staked(address indexed user, uint indexed  amount);\n    event Withdrawn(address indexed user, uint indexed  amount);\n    event RewardsClaimed(address indexed user, uint indexed  amount);\n\n    constructor(address _stakingToken, address _rewardToken){\n        stakingToken = IERC20(_stakingToken);\n        rewardToken = IERC20(_rewardToken);\n    }\n\n    modifier updateReward(address user){\n        rewardperTokenStored = rewardPerToken();\n        lastUpdateTime = block.timestamp;\n        rewards[user]= rewardsEarned(user);\n        userRewardPerTokenPaid[user] = rewardperTokenStored;\n        _;\n\n    }\n\n    function rewardPerToken()public view  returns(uint) {\n        if(totalStakedTokens == 0){\n            return rewardperTokenStored;\n        }\n        uint totalTime= block.timestamp.sub(lastUpdateTime);\n        uint totalReward = Reward_Rate.mul(totalTime);\n        return rewardperTokenStored.add(totalReward.mul(1e18)).div(totalStakedTokens);\n    }\n\n    function rewardsEarned(address user) public view returns(uint){\n        return (stakedBalance[user].mul(rewardPerToken().sub(userRewardPerTokenPaid[user])));\n    }\n\n    function stake(uint amount) external nonReentrant updateReward(msg.sender){\n        require(amount > 0,\"Amount must be greater than 0\");\n        totalStakedTokens+=amount;\n        stakedBalance[msg.sender]+=amount;\n        emit Staked(msg.sender, amount);\n        bool success = stakingToken.transferFrom(msg.sender, address(this), amount);\n        require(success,\"Transfer Failed\");\n    }\n\n    function withdraw(uint amount) external nonReentrant updateReward(msg.sender){\n        require(amount > 0,\"Amount must be greater than 0\");\n        require(stakedBalance[msg.sender]>=amount,\"Stakend amount is not enough\");\n        totalStakedTokens-=amount;\n        stakedBalance[msg.sender]-=amount;\n        emit Withdrawn(msg.sender, amount);\n        bool success = stakingToken.transfer(msg.sender,amount); \n        require(success,\"Transfer Failed\");\n    }\n\n    function claimReward() external nonReentrant updateReward(msg.sender){\n        uint reward = rewards[msg.sender];\n        require(reward > 0, \" Not having any rewards\");\n        rewards[msg.sender] = 0;\n        emit RewardsClaimed(msg.sender, reward);\n        bool success = rewardToken.transfer(msg.sender,reward); \n        require(success,\"Transfer Failed\");\n    }\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207a75c6e61286328d0a5cdbf6c6ad56ee63168071d2fa45b4b028b8a36408462e64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212207a75c6e61286328d0a5cdbf6c6ad56ee63168071d2fa45b4b028b8a36408462e64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0x75C6E61286328D0A5CDBF6C6AD56EE63168071D2FA45B4B028B8A3 PUSH5 0x8462E6473 PUSH16 0x6C634300081400330000000000000000 ",
							"sourceMap": "482:6210:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212207a75c6e61286328d0a5cdbf6c6ad56ee63168071d2fa45b4b028b8a36408462e64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0x75C6E61286328D0A5CDBF6C6AD56EE63168071D2FA45B4B028B8A3 PUSH5 0x8462E6473 PUSH16 0x6C634300081400330000000000000000 ",
							"sourceMap": "482:6210:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207a75c6e61286328d0a5cdbf6c6ad56ee63168071d2fa45b4b028b8a36408462e64736f6c63430008140033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Staking/staking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Staking/staking.sol": {
				"Staking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_stakingToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_rewardToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardsClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "Reward_Rate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastUpdateTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPerToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardperTokenStored",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "rewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "rewardsEarned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakedBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userRewardPerTokenPaid",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Staking/staking.sol\":236:3061  contract Staking is ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"Staking/staking.sol\":892:1045  constructor(address _stakingToken, address _rewardToken){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Staking/staking.sol\":980:993  _stakingToken */\n  dup2\n    /* \"Staking/staking.sol\":958:970  stakingToken */\n  0x01\n  0x00\n    /* \"Staking/staking.sol\":958:994  stakingToken = IERC20(_stakingToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Staking/staking.sol\":1025:1037  _rewardToken */\n  dup1\n    /* \"Staking/staking.sol\":1004:1015  rewardToken */\n  0x02\n  0x00\n    /* \"Staking/staking.sol\":1004:1038  rewardToken = IERC20(_rewardToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Staking/staking.sol\":892:1045  constructor(address _stakingToken, address _rewardToken){... */\n  pop\n  pop\n    /* \"Staking/staking.sol\":236:3061  contract Staking is ReentrancyGuard {... */\n  jump(tag_8)\n    /* \"#utility.yul\":88:205   */\ntag_10:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_12:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_13:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_22\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_12\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_14:\n    /* \"#utility.yul\":641:665   */\n  tag_24\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_13\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_25\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_25:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_15:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_27\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_14\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_30\n  tag_10\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":949:1068   */\ntag_29:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_31\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_15\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_32\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_15\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"Staking/staking.sol\":236:3061  contract Staking is ReentrancyGuard {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Staking/staking.sol\":236:3061  contract Staking is ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8bfea439\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xc8f33c91\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xc8f33c91\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xcd3daf9d\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xe6103637\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf7c618c1\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x8bfea439\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xb88a802f\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x0700037d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x60217267\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x69ef6ee7\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x72f702f3\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8b876347\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Staking/staking.sol\":592:629  mapping(address=>uint) public rewards */\n    tag_3:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking/staking.sol\":2227:2687  function withdraw(uint amount) external nonReentrant updateReward(msg.sender){... */\n    tag_4:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      stop\n        /* \"Staking/staking.sol\":543:586  mapping(address=>uint) public stakedBalance */\n    tag_5:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_29:\n      tag_30\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking/staking.sol\":375:417  uint256 public constant Reward_Rate = 1e18 */\n    tag_6:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking/staking.sol\":279:305  IERC20 public stakingToken */\n    tag_7:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking/staking.sol\":635:687  mapping(address=>uint) public userRewardPerTokenPaid */\n    tag_8:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_40:\n      tag_41\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking/staking.sol\":1662:1825  function rewardsEarned(address user) public view returns(uint){... */\n    tag_9:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking/staking.sol\":1831:2221  function stake(uint amount) external nonReentrant updateReward(msg.sender){... */\n    tag_10:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_48:\n      tag_49\n      jump\t// in\n    tag_47:\n      stop\n        /* \"Staking/staking.sol\":2693:3059  function claimReward() external nonReentrant updateReward(msg.sender){... */\n    tag_11:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      stop\n        /* \"Staking/staking.sol\":507:536  uint256 public lastUpdateTime */\n    tag_12:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking/staking.sol\":1307:1656  function rewardPerToken()public view  returns(uint) {... */\n    tag_13:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking/staking.sol\":465:501  uint256 public  rewardperTokenStored */\n    tag_14:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking/staking.sol\":311:336  IERC20 public rewardToken */\n    tag_15:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking/staking.sol\":592:629  mapping(address=>uint) public rewards */\n    tag_21:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"Staking/staking.sol\":2227:2687  function withdraw(uint amount) external nonReentrant updateReward(msg.sender){... */\n    tag_27:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_65\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_66\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_65:\n        /* \"Staking/staking.sol\":2293:2303  msg.sender */\n      caller\n        /* \"Staking/staking.sol\":1119:1135  rewardPerToken() */\n      tag_68\n        /* \"Staking/staking.sol\":1119:1133  rewardPerToken */\n      tag_56\n        /* \"Staking/staking.sol\":1119:1135  rewardPerToken() */\n      jump\t// in\n    tag_68:\n        /* \"Staking/staking.sol\":1096:1116  rewardperTokenStored */\n      0x04\n        /* \"Staking/staking.sol\":1096:1135  rewardperTokenStored = rewardPerToken() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking/staking.sol\":1162:1177  block.timestamp */\n      timestamp\n        /* \"Staking/staking.sol\":1145:1159  lastUpdateTime */\n      0x05\n        /* \"Staking/staking.sol\":1145:1177  lastUpdateTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking/staking.sol\":1202:1221  rewardsEarned(user) */\n      tag_69\n        /* \"Staking/staking.sol\":1216:1220  user */\n      dup2\n        /* \"Staking/staking.sol\":1202:1215  rewardsEarned */\n      tag_45\n        /* \"Staking/staking.sol\":1202:1221  rewardsEarned(user) */\n      jump\t// in\n    tag_69:\n        /* \"Staking/staking.sol\":1187:1194  rewards */\n      0x07\n        /* \"Staking/staking.sol\":1187:1200  rewards[user] */\n      0x00\n        /* \"Staking/staking.sol\":1195:1199  user */\n      dup4\n        /* \"Staking/staking.sol\":1187:1200  rewards[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking/staking.sol\":1187:1221  rewards[user]= rewardsEarned(user) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking/staking.sol\":1262:1282  rewardperTokenStored */\n      sload(0x04)\n        /* \"Staking/staking.sol\":1231:1253  userRewardPerTokenPaid */\n      0x08\n        /* \"Staking/staking.sol\":1231:1259  userRewardPerTokenPaid[user] */\n      0x00\n        /* \"Staking/staking.sol\":1254:1258  user */\n      dup4\n        /* \"Staking/staking.sol\":1231:1259  userRewardPerTokenPaid[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking/staking.sol\":1231:1282  userRewardPerTokenPaid[user] = rewardperTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking/staking.sol\":2331:2332  0 */\n      0x00\n        /* \"Staking/staking.sol\":2322:2328  amount */\n      dup3\n        /* \"Staking/staking.sol\":2322:2332  amount > 0 */\n      gt\n        /* \"Staking/staking.sol\":2314:2365  require(amount > 0,\"Amount must be greater than 0\") */\n      tag_71\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_72\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_71:\n        /* \"Staking/staking.sol\":2410:2416  amount */\n      dup2\n        /* \"Staking/staking.sol\":2383:2396  stakedBalance */\n      0x06\n        /* \"Staking/staking.sol\":2383:2408  stakedBalance[msg.sender] */\n      0x00\n        /* \"Staking/staking.sol\":2397:2407  msg.sender */\n      caller\n        /* \"Staking/staking.sol\":2383:2408  stakedBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Staking/staking.sol\":2383:2416  stakedBalance[msg.sender]>=amount */\n      lt\n      iszero\n        /* \"Staking/staking.sol\":2375:2448  require(stakedBalance[msg.sender]>=amount,\"Stakend amount is not enough\") */\n      tag_74\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_75\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_74:\n        /* \"Staking/staking.sol\":2477:2483  amount */\n      dup2\n        /* \"Staking/staking.sol\":2458:2475  totalStakedTokens */\n      0x03\n      0x00\n        /* \"Staking/staking.sol\":2458:2483  totalStakedTokens-=amount */\n      dup3\n      dup3\n      sload\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking/staking.sol\":2520:2526  amount */\n      dup2\n        /* \"Staking/staking.sol\":2493:2506  stakedBalance */\n      0x06\n        /* \"Staking/staking.sol\":2493:2518  stakedBalance[msg.sender] */\n      0x00\n        /* \"Staking/staking.sol\":2507:2517  msg.sender */\n      caller\n        /* \"Staking/staking.sol\":2493:2518  stakedBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Staking/staking.sol\":2493:2526  stakedBalance[msg.sender]-=amount */\n      dup3\n      dup3\n      sload\n      tag_79\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_79:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking/staking.sol\":2563:2569  amount */\n      dup2\n        /* \"Staking/staking.sol\":2551:2561  msg.sender */\n      caller\n        /* \"Staking/staking.sol\":2541:2570  Withdrawn(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Staking/staking.sol\":2580:2592  bool success */\n      0x00\n        /* \"Staking/staking.sol\":2595:2607  stakingToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking/staking.sol\":2595:2616  stakingToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"Staking/staking.sol\":2617:2627  msg.sender */\n      caller\n        /* \"Staking/staking.sol\":2628:2634  amount */\n      dup6\n        /* \"Staking/staking.sol\":2595:2635  stakingToken.transfer(msg.sender,amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_80\n      swap3\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_83\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_83:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n        /* \"Staking/staking.sol\":2580:2635  bool success = stakingToken.transfer(msg.sender,amount) */\n      swap1\n      pop\n        /* \"Staking/staking.sol\":2654:2661  success */\n      dup1\n        /* \"Staking/staking.sol\":2646:2680  require(success,\"Transfer Failed\") */\n      tag_86\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_87\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_86:\n        /* \"Staking/staking.sol\":2304:2687  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2292:2293  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_89\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_90\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_89:\n        /* \"Staking/staking.sol\":2227:2687  function withdraw(uint amount) external nonReentrant updateReward(msg.sender){... */\n      pop\n      jump\t// out\n        /* \"Staking/staking.sol\":543:586  mapping(address=>uint) public stakedBalance */\n    tag_30:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"Staking/staking.sol\":375:417  uint256 public constant Reward_Rate = 1e18 */\n    tag_33:\n        /* \"Staking/staking.sol\":413:417  1e18 */\n      0x0de0b6b3a7640000\n        /* \"Staking/staking.sol\":375:417  uint256 public constant Reward_Rate = 1e18 */\n      dup2\n      jump\t// out\n        /* \"Staking/staking.sol\":279:305  IERC20 public stakingToken */\n    tag_36:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Staking/staking.sol\":635:687  mapping(address=>uint) public userRewardPerTokenPaid */\n    tag_41:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"Staking/staking.sol\":1662:1825  function rewardsEarned(address user) public view returns(uint){... */\n    tag_45:\n        /* \"Staking/staking.sol\":1719:1723  uint */\n      0x00\n        /* \"Staking/staking.sol\":1742:1817  stakedBalance[user].mul(rewardPerToken().sub(userRewardPerTokenPaid[user])) */\n      tag_92\n        /* \"Staking/staking.sol\":1766:1816  rewardPerToken().sub(userRewardPerTokenPaid[user]) */\n      tag_93\n        /* \"Staking/staking.sol\":1787:1809  userRewardPerTokenPaid */\n      0x08\n        /* \"Staking/staking.sol\":1787:1815  userRewardPerTokenPaid[user] */\n      0x00\n        /* \"Staking/staking.sol\":1810:1814  user */\n      dup6\n        /* \"Staking/staking.sol\":1787:1815  userRewardPerTokenPaid[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Staking/staking.sol\":1766:1782  rewardPerToken() */\n      tag_94\n        /* \"Staking/staking.sol\":1766:1780  rewardPerToken */\n      tag_56\n        /* \"Staking/staking.sol\":1766:1782  rewardPerToken() */\n      jump\t// in\n    tag_94:\n        /* \"Staking/staking.sol\":1766:1786  rewardPerToken().sub */\n      tag_95\n      swap1\n        /* \"Staking/staking.sol\":1766:1816  rewardPerToken().sub(userRewardPerTokenPaid[user]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_93:\n        /* \"Staking/staking.sol\":1742:1755  stakedBalance */\n      0x06\n        /* \"Staking/staking.sol\":1742:1761  stakedBalance[user] */\n      0x00\n        /* \"Staking/staking.sol\":1756:1760  user */\n      dup6\n        /* \"Staking/staking.sol\":1742:1761  stakedBalance[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Staking/staking.sol\":1742:1765  stakedBalance[user].mul */\n      tag_96\n      swap1\n        /* \"Staking/staking.sol\":1742:1817  stakedBalance[user].mul(rewardPerToken().sub(userRewardPerTokenPaid[user])) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_92:\n        /* \"Staking/staking.sol\":1734:1818  return (stakedBalance[user].mul(rewardPerToken().sub(userRewardPerTokenPaid[user]))) */\n      swap1\n      pop\n        /* \"Staking/staking.sol\":1662:1825  function rewardsEarned(address user) public view returns(uint){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Staking/staking.sol\":1831:2221  function stake(uint amount) external nonReentrant updateReward(msg.sender){... */\n    tag_49:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_98\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_66\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_98:\n        /* \"Staking/staking.sol\":1894:1904  msg.sender */\n      caller\n        /* \"Staking/staking.sol\":1119:1135  rewardPerToken() */\n      tag_100\n        /* \"Staking/staking.sol\":1119:1133  rewardPerToken */\n      tag_56\n        /* \"Staking/staking.sol\":1119:1135  rewardPerToken() */\n      jump\t// in\n    tag_100:\n        /* \"Staking/staking.sol\":1096:1116  rewardperTokenStored */\n      0x04\n        /* \"Staking/staking.sol\":1096:1135  rewardperTokenStored = rewardPerToken() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking/staking.sol\":1162:1177  block.timestamp */\n      timestamp\n        /* \"Staking/staking.sol\":1145:1159  lastUpdateTime */\n      0x05\n        /* \"Staking/staking.sol\":1145:1177  lastUpdateTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking/staking.sol\":1202:1221  rewardsEarned(user) */\n      tag_101\n        /* \"Staking/staking.sol\":1216:1220  user */\n      dup2\n        /* \"Staking/staking.sol\":1202:1215  rewardsEarned */\n      tag_45\n        /* \"Staking/staking.sol\":1202:1221  rewardsEarned(user) */\n      jump\t// in\n    tag_101:\n        /* \"Staking/staking.sol\":1187:1194  rewards */\n      0x07\n        /* \"Staking/staking.sol\":1187:1200  rewards[user] */\n      0x00\n        /* \"Staking/staking.sol\":1195:1199  user */\n      dup4\n        /* \"Staking/staking.sol\":1187:1200  rewards[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking/staking.sol\":1187:1221  rewards[user]= rewardsEarned(user) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking/staking.sol\":1262:1282  rewardperTokenStored */\n      sload(0x04)\n        /* \"Staking/staking.sol\":1231:1253  userRewardPerTokenPaid */\n      0x08\n        /* \"Staking/staking.sol\":1231:1259  userRewardPerTokenPaid[user] */\n      0x00\n        /* \"Staking/staking.sol\":1254:1258  user */\n      dup4\n        /* \"Staking/staking.sol\":1231:1259  userRewardPerTokenPaid[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking/staking.sol\":1231:1282  userRewardPerTokenPaid[user] = rewardperTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking/staking.sol\":1932:1933  0 */\n      0x00\n        /* \"Staking/staking.sol\":1923:1929  amount */\n      dup3\n        /* \"Staking/staking.sol\":1923:1933  amount > 0 */\n      gt\n        /* \"Staking/staking.sol\":1915:1966  require(amount > 0,\"Amount must be greater than 0\") */\n      tag_103\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap1\n      tag_73\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n        /* \"Staking/staking.sol\":1995:2001  amount */\n      dup2\n        /* \"Staking/staking.sol\":1976:1993  totalStakedTokens */\n      0x03\n      0x00\n        /* \"Staking/staking.sol\":1976:2001  totalStakedTokens+=amount */\n      dup3\n      dup3\n      sload\n      tag_105\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking/staking.sol\":2038:2044  amount */\n      dup2\n        /* \"Staking/staking.sol\":2011:2024  stakedBalance */\n      0x06\n        /* \"Staking/staking.sol\":2011:2036  stakedBalance[msg.sender] */\n      0x00\n        /* \"Staking/staking.sol\":2025:2035  msg.sender */\n      caller\n        /* \"Staking/staking.sol\":2011:2036  stakedBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Staking/staking.sol\":2011:2044  stakedBalance[msg.sender]+=amount */\n      dup3\n      dup3\n      sload\n      tag_107\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_107:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking/staking.sol\":2078:2084  amount */\n      dup2\n        /* \"Staking/staking.sol\":2066:2076  msg.sender */\n      caller\n        /* \"Staking/staking.sol\":2059:2085  Staked(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Staking/staking.sol\":2095:2107  bool success */\n      0x00\n        /* \"Staking/staking.sol\":2110:2122  stakingToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking/staking.sol\":2110:2135  stakingToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"Staking/staking.sol\":2136:2146  msg.sender */\n      caller\n        /* \"Staking/staking.sol\":2156:2160  this */\n      address\n        /* \"Staking/staking.sol\":2163:2169  amount */\n      dup7\n        /* \"Staking/staking.sol\":2110:2170  stakingToken.transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_111\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_111:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_112:\n        /* \"Staking/staking.sol\":2095:2170  bool success = stakingToken.transferFrom(msg.sender, address(this), amount) */\n      swap1\n      pop\n        /* \"Staking/staking.sol\":2188:2195  success */\n      dup1\n        /* \"Staking/staking.sol\":2180:2214  require(success,\"Transfer Failed\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap1\n      tag_88\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_113:\n        /* \"Staking/staking.sol\":1905:2221  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2292:2293  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_115\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_90\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_115:\n        /* \"Staking/staking.sol\":1831:2221  function stake(uint amount) external nonReentrant updateReward(msg.sender){... */\n      pop\n      jump\t// out\n        /* \"Staking/staking.sol\":2693:3059  function claimReward() external nonReentrant updateReward(msg.sender){... */\n    tag_51:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_117\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_66\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_117:\n        /* \"Staking/staking.sol\":2751:2761  msg.sender */\n      caller\n        /* \"Staking/staking.sol\":1119:1135  rewardPerToken() */\n      tag_119\n        /* \"Staking/staking.sol\":1119:1133  rewardPerToken */\n      tag_56\n        /* \"Staking/staking.sol\":1119:1135  rewardPerToken() */\n      jump\t// in\n    tag_119:\n        /* \"Staking/staking.sol\":1096:1116  rewardperTokenStored */\n      0x04\n        /* \"Staking/staking.sol\":1096:1135  rewardperTokenStored = rewardPerToken() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking/staking.sol\":1162:1177  block.timestamp */\n      timestamp\n        /* \"Staking/staking.sol\":1145:1159  lastUpdateTime */\n      0x05\n        /* \"Staking/staking.sol\":1145:1177  lastUpdateTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking/staking.sol\":1202:1221  rewardsEarned(user) */\n      tag_120\n        /* \"Staking/staking.sol\":1216:1220  user */\n      dup2\n        /* \"Staking/staking.sol\":1202:1215  rewardsEarned */\n      tag_45\n        /* \"Staking/staking.sol\":1202:1221  rewardsEarned(user) */\n      jump\t// in\n    tag_120:\n        /* \"Staking/staking.sol\":1187:1194  rewards */\n      0x07\n        /* \"Staking/staking.sol\":1187:1200  rewards[user] */\n      0x00\n        /* \"Staking/staking.sol\":1195:1199  user */\n      dup4\n        /* \"Staking/staking.sol\":1187:1200  rewards[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking/staking.sol\":1187:1221  rewards[user]= rewardsEarned(user) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking/staking.sol\":1262:1282  rewardperTokenStored */\n      sload(0x04)\n        /* \"Staking/staking.sol\":1231:1253  userRewardPerTokenPaid */\n      0x08\n        /* \"Staking/staking.sol\":1231:1259  userRewardPerTokenPaid[user] */\n      0x00\n        /* \"Staking/staking.sol\":1254:1258  user */\n      dup4\n        /* \"Staking/staking.sol\":1231:1259  userRewardPerTokenPaid[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking/staking.sol\":1231:1282  userRewardPerTokenPaid[user] = rewardperTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking/staking.sol\":2772:2783  uint reward */\n      0x00\n        /* \"Staking/staking.sol\":2786:2793  rewards */\n      0x07\n        /* \"Staking/staking.sol\":2786:2805  rewards[msg.sender] */\n      0x00\n        /* \"Staking/staking.sol\":2794:2804  msg.sender */\n      caller\n        /* \"Staking/staking.sol\":2786:2805  rewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Staking/staking.sol\":2772:2805  uint reward = rewards[msg.sender] */\n      swap1\n      pop\n        /* \"Staking/staking.sol\":2832:2833  0 */\n      0x00\n        /* \"Staking/staking.sol\":2823:2829  reward */\n      dup2\n        /* \"Staking/staking.sol\":2823:2833  reward > 0 */\n      gt\n        /* \"Staking/staking.sol\":2815:2861  require(reward > 0, \" Not having any rewards\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_122:\n        /* \"Staking/staking.sol\":2893:2894  0 */\n      0x00\n        /* \"Staking/staking.sol\":2871:2878  rewards */\n      0x07\n        /* \"Staking/staking.sol\":2871:2890  rewards[msg.sender] */\n      0x00\n        /* \"Staking/staking.sol\":2879:2889  msg.sender */\n      caller\n        /* \"Staking/staking.sol\":2871:2890  rewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking/staking.sol\":2871:2894  rewards[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking/staking.sol\":2936:2942  reward */\n      dup1\n        /* \"Staking/staking.sol\":2924:2934  msg.sender */\n      caller\n        /* \"Staking/staking.sol\":2909:2943  RewardsClaimed(msg.sender, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Staking/staking.sol\":2953:2965  bool success */\n      0x00\n        /* \"Staking/staking.sol\":2968:2979  rewardToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking/staking.sol\":2968:2988  rewardToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"Staking/staking.sol\":2989:2999  msg.sender */\n      caller\n        /* \"Staking/staking.sol\":3000:3006  reward */\n      dup5\n        /* \"Staking/staking.sol\":2968:3007  rewardToken.transfer(msg.sender,reward) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap3\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_125:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_127\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_127:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_128\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_128:\n        /* \"Staking/staking.sol\":2953:3007  bool success = rewardToken.transfer(msg.sender,reward) */\n      swap1\n      pop\n        /* \"Staking/staking.sol\":3026:3033  success */\n      dup1\n        /* \"Staking/staking.sol\":3018:3052  require(success,\"Transfer Failed\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap1\n      tag_88\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_129:\n        /* \"Staking/staking.sol\":2762:3059  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2292:2293  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_131\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_90\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_131:\n        /* \"Staking/staking.sol\":2693:3059  function claimReward() external nonReentrant updateReward(msg.sender){... */\n      jump\t// out\n        /* \"Staking/staking.sol\":507:536  uint256 public lastUpdateTime */\n    tag_53:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"Staking/staking.sol\":1307:1656  function rewardPerToken()public view  returns(uint) {... */\n    tag_56:\n        /* \"Staking/staking.sol\":1353:1357  uint */\n      0x00\n        /* \"Staking/staking.sol\":1393:1394  0 */\n      dup1\n        /* \"Staking/staking.sol\":1372:1389  totalStakedTokens */\n      sload(0x03)\n        /* \"Staking/staking.sol\":1372:1394  totalStakedTokens == 0 */\n      sub\n        /* \"Staking/staking.sol\":1369:1447  if(totalStakedTokens == 0){... */\n      tag_133\n      jumpi\n        /* \"Staking/staking.sol\":1416:1436  rewardperTokenStored */\n      sload(0x04)\n        /* \"Staking/staking.sol\":1409:1436  return rewardperTokenStored */\n      swap1\n      pop\n      jump(tag_132)\n        /* \"Staking/staking.sol\":1369:1447  if(totalStakedTokens == 0){... */\n    tag_133:\n        /* \"Staking/staking.sol\":1456:1470  uint totalTime */\n      0x00\n        /* \"Staking/staking.sol\":1472:1507  block.timestamp.sub(lastUpdateTime) */\n      tag_134\n        /* \"Staking/staking.sol\":1492:1506  lastUpdateTime */\n      sload(0x05)\n        /* \"Staking/staking.sol\":1472:1487  block.timestamp */\n      timestamp\n        /* \"Staking/staking.sol\":1472:1491  block.timestamp.sub */\n      tag_95\n      swap1\n        /* \"Staking/staking.sol\":1472:1507  block.timestamp.sub(lastUpdateTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_134:\n        /* \"Staking/staking.sol\":1456:1507  uint totalTime= block.timestamp.sub(lastUpdateTime) */\n      swap1\n      pop\n        /* \"Staking/staking.sol\":1517:1533  uint totalReward */\n      0x00\n        /* \"Staking/staking.sol\":1536:1562  Reward_Rate.mul(totalTime) */\n      tag_135\n        /* \"Staking/staking.sol\":1552:1561  totalTime */\n      dup3\n        /* \"Staking/staking.sol\":413:417  1e18 */\n      0x0de0b6b3a7640000\n        /* \"Staking/staking.sol\":1536:1551  Reward_Rate.mul */\n      tag_96\n      swap1\n        /* \"Staking/staking.sol\":1536:1562  Reward_Rate.mul(totalTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_135:\n        /* \"Staking/staking.sol\":1517:1562  uint totalReward = Reward_Rate.mul(totalTime) */\n      swap1\n      pop\n        /* \"Staking/staking.sol\":1579:1649  rewardperTokenStored.add(totalReward.mul(1e18)).div(totalStakedTokens) */\n      tag_136\n        /* \"Staking/staking.sol\":1631:1648  totalStakedTokens */\n      sload(0x03)\n        /* \"Staking/staking.sol\":1579:1626  rewardperTokenStored.add(totalReward.mul(1e18)) */\n      tag_137\n        /* \"Staking/staking.sol\":1604:1625  totalReward.mul(1e18) */\n      tag_138\n        /* \"Staking/staking.sol\":1620:1624  1e18 */\n      0x0de0b6b3a7640000\n        /* \"Staking/staking.sol\":1604:1615  totalReward */\n      dup6\n        /* \"Staking/staking.sol\":1604:1619  totalReward.mul */\n      tag_96\n      swap1\n        /* \"Staking/staking.sol\":1604:1625  totalReward.mul(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_138:\n        /* \"Staking/staking.sol\":1579:1599  rewardperTokenStored */\n      sload(0x04)\n        /* \"Staking/staking.sol\":1579:1603  rewardperTokenStored.add */\n      tag_139\n      swap1\n        /* \"Staking/staking.sol\":1579:1626  rewardperTokenStored.add(totalReward.mul(1e18)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_137:\n        /* \"Staking/staking.sol\":1579:1630  rewardperTokenStored.add(totalReward.mul(1e18)).div */\n      tag_140\n      swap1\n        /* \"Staking/staking.sol\":1579:1649  rewardperTokenStored.add(totalReward.mul(1e18)).div(totalStakedTokens) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_136:\n        /* \"Staking/staking.sol\":1572:1649  return rewardperTokenStored.add(totalReward.mul(1e18)).div(totalStakedTokens) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"Staking/staking.sol\":1307:1656  function rewardPerToken()public view  returns(uint) {... */\n    tag_132:\n      swap1\n      jump\t// out\n        /* \"Staking/staking.sol\":465:501  uint256 public  rewardperTokenStored */\n    tag_59:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"Staking/staking.sol\":311:336  IERC20 public rewardToken */\n    tag_62:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_143\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_142:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_147\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_147:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_149\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_139:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_152\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_152:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_154\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_157:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_159:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_160:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_195\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_159\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_161:\n        /* \"#utility.yul\":641:665   */\n      tag_197\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_160\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_198\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_198:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_162:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_200\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_161\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_20:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_202\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_203\n      tag_157\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":917:1036   */\n    tag_202:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_204\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_162\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_163:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_164:\n        /* \"#utility.yul\":1346:1370   */\n      tag_207\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_163\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_23:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_209\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_164\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_165:\n        /* \"#utility.yul\":1684:1708   */\n      tag_211\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_163\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_212\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      dup1\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_212:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1878   */\n    tag_166:\n        /* \"#utility.yul\":1785:1790   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup2\n        /* \"#utility.yul\":1810:1830   */\n      calldataload\n        /* \"#utility.yul\":1801:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1839:1872   */\n      tag_214\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1839:1872   */\n      tag_165\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":1739:1878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2213   */\n    tag_26:\n        /* \"#utility.yul\":1943:1949   */\n      0x00\n        /* \"#utility.yul\":1992:1994   */\n      0x20\n        /* \"#utility.yul\":1980:1989   */\n      dup3\n        /* \"#utility.yul\":1971:1978   */\n      dup5\n        /* \"#utility.yul\":1967:1990   */\n      sub\n        /* \"#utility.yul\":1963:1995   */\n      slt\n        /* \"#utility.yul\":1960:2079   */\n      iszero\n      tag_216\n      jumpi\n        /* \"#utility.yul\":1998:2077   */\n      tag_217\n      tag_157\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":1960:2079   */\n    tag_216:\n        /* \"#utility.yul\":2118:2119   */\n      0x00\n        /* \"#utility.yul\":2143:2196   */\n      tag_218\n        /* \"#utility.yul\":2188:2195   */\n      dup5\n        /* \"#utility.yul\":2179:2185   */\n      dup3\n        /* \"#utility.yul\":2168:2177   */\n      dup6\n        /* \"#utility.yul\":2164:2186   */\n      add\n        /* \"#utility.yul\":2143:2196   */\n      tag_166\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":2133:2196   */\n      swap2\n      pop\n        /* \"#utility.yul\":2089:2206   */\n      pop\n        /* \"#utility.yul\":1884:2213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2279   */\n    tag_167:\n        /* \"#utility.yul\":2247:2250   */\n      0x00\n        /* \"#utility.yul\":2268:2273   */\n      dup2\n        /* \"#utility.yul\":2261:2273   */\n      swap1\n      pop\n        /* \"#utility.yul\":2219:2279   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2285:2427   */\n    tag_168:\n        /* \"#utility.yul\":2335:2344   */\n      0x00\n        /* \"#utility.yul\":2368:2421   */\n      tag_221\n        /* \"#utility.yul\":2386:2420   */\n      tag_222\n        /* \"#utility.yul\":2395:2419   */\n      tag_223\n        /* \"#utility.yul\":2413:2418   */\n      dup5\n        /* \"#utility.yul\":2395:2419   */\n      tag_159\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":2386:2420   */\n      tag_167\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":2368:2421   */\n      tag_159\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":2355:2421   */\n      swap1\n      pop\n        /* \"#utility.yul\":2285:2427   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2433:2559   */\n    tag_169:\n        /* \"#utility.yul\":2483:2492   */\n      0x00\n        /* \"#utility.yul\":2516:2553   */\n      tag_225\n        /* \"#utility.yul\":2547:2552   */\n      dup3\n        /* \"#utility.yul\":2516:2553   */\n      tag_168\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":2503:2553   */\n      swap1\n      pop\n        /* \"#utility.yul\":2433:2559   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2565:2705   */\n    tag_170:\n        /* \"#utility.yul\":2629:2638   */\n      0x00\n        /* \"#utility.yul\":2662:2699   */\n      tag_227\n        /* \"#utility.yul\":2693:2698   */\n      dup3\n        /* \"#utility.yul\":2662:2699   */\n      tag_169\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":2649:2699   */\n      swap1\n      pop\n        /* \"#utility.yul\":2565:2705   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2711:2870   */\n    tag_171:\n        /* \"#utility.yul\":2812:2863   */\n      tag_229\n        /* \"#utility.yul\":2857:2862   */\n      dup2\n        /* \"#utility.yul\":2812:2863   */\n      tag_170\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":2807:2810   */\n      dup3\n        /* \"#utility.yul\":2800:2864   */\n      mstore\n        /* \"#utility.yul\":2711:2870   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2876:3126   */\n    tag_38:\n        /* \"#utility.yul\":2983:2987   */\n      0x00\n        /* \"#utility.yul\":3021:3023   */\n      0x20\n        /* \"#utility.yul\":3010:3019   */\n      dup3\n        /* \"#utility.yul\":3006:3024   */\n      add\n        /* \"#utility.yul\":2998:3024   */\n      swap1\n      pop\n        /* \"#utility.yul\":3034:3119   */\n      tag_231\n        /* \"#utility.yul\":3116:3117   */\n      0x00\n        /* \"#utility.yul\":3105:3114   */\n      dup4\n        /* \"#utility.yul\":3101:3118   */\n      add\n        /* \"#utility.yul\":3092:3098   */\n      dup5\n        /* \"#utility.yul\":3034:3119   */\n      tag_171\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":2876:3126   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3132:3301   */\n    tag_172:\n        /* \"#utility.yul\":3216:3227   */\n      0x00\n        /* \"#utility.yul\":3250:3256   */\n      dup3\n        /* \"#utility.yul\":3245:3248   */\n      dup3\n        /* \"#utility.yul\":3238:3257   */\n      mstore\n        /* \"#utility.yul\":3290:3294   */\n      0x20\n        /* \"#utility.yul\":3285:3288   */\n      dup3\n        /* \"#utility.yul\":3281:3295   */\n      add\n        /* \"#utility.yul\":3266:3295   */\n      swap1\n      pop\n        /* \"#utility.yul\":3132:3301   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3307:3486   */\n    tag_173:\n        /* \"#utility.yul\":3447:3478   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e2030000000\n        /* \"#utility.yul\":3443:3444   */\n      0x00\n        /* \"#utility.yul\":3435:3441   */\n      dup3\n        /* \"#utility.yul\":3431:3445   */\n      add\n        /* \"#utility.yul\":3424:3479   */\n      mstore\n        /* \"#utility.yul\":3307:3486   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3492:3858   */\n    tag_174:\n        /* \"#utility.yul\":3634:3637   */\n      0x00\n        /* \"#utility.yul\":3655:3722   */\n      tag_235\n        /* \"#utility.yul\":3719:3721   */\n      0x1d\n        /* \"#utility.yul\":3714:3717   */\n      dup4\n        /* \"#utility.yul\":3655:3722   */\n      tag_172\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":3648:3722   */\n      swap2\n      pop\n        /* \"#utility.yul\":3731:3824   */\n      tag_236\n        /* \"#utility.yul\":3820:3823   */\n      dup3\n        /* \"#utility.yul\":3731:3824   */\n      tag_173\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":3849:3851   */\n      0x20\n        /* \"#utility.yul\":3844:3847   */\n      dup3\n        /* \"#utility.yul\":3840:3852   */\n      add\n        /* \"#utility.yul\":3833:3852   */\n      swap1\n      pop\n        /* \"#utility.yul\":3492:3858   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3864:4283   */\n    tag_73:\n        /* \"#utility.yul\":4030:4034   */\n      0x00\n        /* \"#utility.yul\":4068:4070   */\n      0x20\n        /* \"#utility.yul\":4057:4066   */\n      dup3\n        /* \"#utility.yul\":4053:4071   */\n      add\n        /* \"#utility.yul\":4045:4071   */\n      swap1\n      pop\n        /* \"#utility.yul\":4117:4126   */\n      dup2\n        /* \"#utility.yul\":4111:4115   */\n      dup2\n        /* \"#utility.yul\":4107:4127   */\n      sub\n        /* \"#utility.yul\":4103:4104   */\n      0x00\n        /* \"#utility.yul\":4092:4101   */\n      dup4\n        /* \"#utility.yul\":4088:4105   */\n      add\n        /* \"#utility.yul\":4081:4128   */\n      mstore\n        /* \"#utility.yul\":4145:4276   */\n      tag_238\n        /* \"#utility.yul\":4271:4275   */\n      dup2\n        /* \"#utility.yul\":4145:4276   */\n      tag_174\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":4137:4276   */\n      swap1\n      pop\n        /* \"#utility.yul\":3864:4283   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4289:4467   */\n    tag_175:\n        /* \"#utility.yul\":4429:4459   */\n      0x5374616b656e6420616d6f756e74206973206e6f7420656e6f75676800000000\n        /* \"#utility.yul\":4425:4426   */\n      0x00\n        /* \"#utility.yul\":4417:4423   */\n      dup3\n        /* \"#utility.yul\":4413:4427   */\n      add\n        /* \"#utility.yul\":4406:4460   */\n      mstore\n        /* \"#utility.yul\":4289:4467   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4473:4839   */\n    tag_176:\n        /* \"#utility.yul\":4615:4618   */\n      0x00\n        /* \"#utility.yul\":4636:4703   */\n      tag_241\n        /* \"#utility.yul\":4700:4702   */\n      0x1c\n        /* \"#utility.yul\":4695:4698   */\n      dup4\n        /* \"#utility.yul\":4636:4703   */\n      tag_172\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":4629:4703   */\n      swap2\n      pop\n        /* \"#utility.yul\":4712:4805   */\n      tag_242\n        /* \"#utility.yul\":4801:4804   */\n      dup3\n        /* \"#utility.yul\":4712:4805   */\n      tag_175\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":4830:4832   */\n      0x20\n        /* \"#utility.yul\":4825:4828   */\n      dup3\n        /* \"#utility.yul\":4821:4833   */\n      add\n        /* \"#utility.yul\":4814:4833   */\n      swap1\n      pop\n        /* \"#utility.yul\":4473:4839   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4845:5264   */\n    tag_76:\n        /* \"#utility.yul\":5011:5015   */\n      0x00\n        /* \"#utility.yul\":5049:5051   */\n      0x20\n        /* \"#utility.yul\":5038:5047   */\n      dup3\n        /* \"#utility.yul\":5034:5052   */\n      add\n        /* \"#utility.yul\":5026:5052   */\n      swap1\n      pop\n        /* \"#utility.yul\":5098:5107   */\n      dup2\n        /* \"#utility.yul\":5092:5096   */\n      dup2\n        /* \"#utility.yul\":5088:5108   */\n      sub\n        /* \"#utility.yul\":5084:5085   */\n      0x00\n        /* \"#utility.yul\":5073:5082   */\n      dup4\n        /* \"#utility.yul\":5069:5086   */\n      add\n        /* \"#utility.yul\":5062:5109   */\n      mstore\n        /* \"#utility.yul\":5126:5257   */\n      tag_244\n        /* \"#utility.yul\":5252:5256   */\n      dup2\n        /* \"#utility.yul\":5126:5257   */\n      tag_176\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":5118:5257   */\n      swap1\n      pop\n        /* \"#utility.yul\":4845:5264   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5270:5450   */\n    tag_177:\n        /* \"#utility.yul\":5318:5395   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5315:5316   */\n      0x00\n        /* \"#utility.yul\":5308:5396   */\n      mstore\n        /* \"#utility.yul\":5415:5419   */\n      0x11\n        /* \"#utility.yul\":5412:5413   */\n      0x04\n        /* \"#utility.yul\":5405:5420   */\n      mstore\n        /* \"#utility.yul\":5439:5443   */\n      0x24\n        /* \"#utility.yul\":5436:5437   */\n      0x00\n        /* \"#utility.yul\":5429:5444   */\n      revert\n        /* \"#utility.yul\":5456:5650   */\n    tag_78:\n        /* \"#utility.yul\":5496:5500   */\n      0x00\n        /* \"#utility.yul\":5516:5536   */\n      tag_247\n        /* \"#utility.yul\":5534:5535   */\n      dup3\n        /* \"#utility.yul\":5516:5536   */\n      tag_163\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":5511:5536   */\n      swap2\n      pop\n        /* \"#utility.yul\":5550:5570   */\n      tag_248\n        /* \"#utility.yul\":5568:5569   */\n      dup4\n        /* \"#utility.yul\":5550:5570   */\n      tag_163\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":5545:5570   */\n      swap3\n      pop\n        /* \"#utility.yul\":5594:5595   */\n      dup3\n        /* \"#utility.yul\":5591:5592   */\n      dup3\n        /* \"#utility.yul\":5587:5596   */\n      sub\n        /* \"#utility.yul\":5579:5596   */\n      swap1\n      pop\n        /* \"#utility.yul\":5618:5619   */\n      dup2\n        /* \"#utility.yul\":5612:5616   */\n      dup2\n        /* \"#utility.yul\":5609:5620   */\n      gt\n        /* \"#utility.yul\":5606:5643   */\n      iszero\n      tag_249\n      jumpi\n        /* \"#utility.yul\":5623:5641   */\n      tag_250\n      tag_177\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":5606:5643   */\n    tag_249:\n        /* \"#utility.yul\":5456:5650   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5656:5774   */\n    tag_178:\n        /* \"#utility.yul\":5743:5767   */\n      tag_252\n        /* \"#utility.yul\":5761:5766   */\n      dup2\n        /* \"#utility.yul\":5743:5767   */\n      tag_160\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":5738:5741   */\n      dup3\n        /* \"#utility.yul\":5731:5768   */\n      mstore\n        /* \"#utility.yul\":5656:5774   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5780:6112   */\n    tag_81:\n        /* \"#utility.yul\":5901:5905   */\n      0x00\n        /* \"#utility.yul\":5939:5941   */\n      0x40\n        /* \"#utility.yul\":5928:5937   */\n      dup3\n        /* \"#utility.yul\":5924:5942   */\n      add\n        /* \"#utility.yul\":5916:5942   */\n      swap1\n      pop\n        /* \"#utility.yul\":5952:6023   */\n      tag_254\n        /* \"#utility.yul\":6020:6021   */\n      0x00\n        /* \"#utility.yul\":6009:6018   */\n      dup4\n        /* \"#utility.yul\":6005:6022   */\n      add\n        /* \"#utility.yul\":5996:6002   */\n      dup6\n        /* \"#utility.yul\":5952:6023   */\n      tag_178\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":6033:6105   */\n      tag_255\n        /* \"#utility.yul\":6101:6103   */\n      0x20\n        /* \"#utility.yul\":6090:6099   */\n      dup4\n        /* \"#utility.yul\":6086:6104   */\n      add\n        /* \"#utility.yul\":6077:6083   */\n      dup5\n        /* \"#utility.yul\":6033:6105   */\n      tag_164\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":5780:6112   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6118:6208   */\n    tag_179:\n        /* \"#utility.yul\":6152:6159   */\n      0x00\n        /* \"#utility.yul\":6195:6200   */\n      dup2\n        /* \"#utility.yul\":6188:6201   */\n      iszero\n        /* \"#utility.yul\":6181:6202   */\n      iszero\n        /* \"#utility.yul\":6170:6202   */\n      swap1\n      pop\n        /* \"#utility.yul\":6118:6208   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6214:6330   */\n    tag_180:\n        /* \"#utility.yul\":6284:6305   */\n      tag_258\n        /* \"#utility.yul\":6299:6304   */\n      dup2\n        /* \"#utility.yul\":6284:6305   */\n      tag_179\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":6277:6282   */\n      dup2\n        /* \"#utility.yul\":6274:6306   */\n      eq\n        /* \"#utility.yul\":6264:6324   */\n      tag_259\n      jumpi\n        /* \"#utility.yul\":6320:6321   */\n      0x00\n        /* \"#utility.yul\":6317:6318   */\n      dup1\n        /* \"#utility.yul\":6310:6322   */\n      revert\n        /* \"#utility.yul\":6264:6324   */\n    tag_259:\n        /* \"#utility.yul\":6214:6330   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6336:6473   */\n    tag_181:\n        /* \"#utility.yul\":6390:6395   */\n      0x00\n        /* \"#utility.yul\":6421:6427   */\n      dup2\n        /* \"#utility.yul\":6415:6428   */\n      mload\n        /* \"#utility.yul\":6406:6428   */\n      swap1\n      pop\n        /* \"#utility.yul\":6437:6467   */\n      tag_261\n        /* \"#utility.yul\":6461:6466   */\n      dup2\n        /* \"#utility.yul\":6437:6467   */\n      tag_180\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":6336:6473   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6479:6824   */\n    tag_85:\n        /* \"#utility.yul\":6546:6552   */\n      0x00\n        /* \"#utility.yul\":6595:6597   */\n      0x20\n        /* \"#utility.yul\":6583:6592   */\n      dup3\n        /* \"#utility.yul\":6574:6581   */\n      dup5\n        /* \"#utility.yul\":6570:6593   */\n      sub\n        /* \"#utility.yul\":6566:6598   */\n      slt\n        /* \"#utility.yul\":6563:6682   */\n      iszero\n      tag_263\n      jumpi\n        /* \"#utility.yul\":6601:6680   */\n      tag_264\n      tag_157\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":6563:6682   */\n    tag_263:\n        /* \"#utility.yul\":6721:6722   */\n      0x00\n        /* \"#utility.yul\":6746:6807   */\n      tag_265\n        /* \"#utility.yul\":6799:6806   */\n      dup5\n        /* \"#utility.yul\":6790:6796   */\n      dup3\n        /* \"#utility.yul\":6779:6788   */\n      dup6\n        /* \"#utility.yul\":6775:6797   */\n      add\n        /* \"#utility.yul\":6746:6807   */\n      tag_181\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":6736:6807   */\n      swap2\n      pop\n        /* \"#utility.yul\":6692:6817   */\n      pop\n        /* \"#utility.yul\":6479:6824   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6830:6995   */\n    tag_182:\n        /* \"#utility.yul\":6970:6987   */\n      0x5472616e73666572204661696c65640000000000000000000000000000000000\n        /* \"#utility.yul\":6966:6967   */\n      0x00\n        /* \"#utility.yul\":6958:6964   */\n      dup3\n        /* \"#utility.yul\":6954:6968   */\n      add\n        /* \"#utility.yul\":6947:6988   */\n      mstore\n        /* \"#utility.yul\":6830:6995   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7001:7367   */\n    tag_183:\n        /* \"#utility.yul\":7143:7146   */\n      0x00\n        /* \"#utility.yul\":7164:7231   */\n      tag_268\n        /* \"#utility.yul\":7228:7230   */\n      0x0f\n        /* \"#utility.yul\":7223:7226   */\n      dup4\n        /* \"#utility.yul\":7164:7231   */\n      tag_172\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":7157:7231   */\n      swap2\n      pop\n        /* \"#utility.yul\":7240:7333   */\n      tag_269\n        /* \"#utility.yul\":7329:7332   */\n      dup3\n        /* \"#utility.yul\":7240:7333   */\n      tag_182\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":7358:7360   */\n      0x20\n        /* \"#utility.yul\":7353:7356   */\n      dup3\n        /* \"#utility.yul\":7349:7361   */\n      add\n        /* \"#utility.yul\":7342:7361   */\n      swap1\n      pop\n        /* \"#utility.yul\":7001:7367   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7373:7792   */\n    tag_88:\n        /* \"#utility.yul\":7539:7543   */\n      0x00\n        /* \"#utility.yul\":7577:7579   */\n      0x20\n        /* \"#utility.yul\":7566:7575   */\n      dup3\n        /* \"#utility.yul\":7562:7580   */\n      add\n        /* \"#utility.yul\":7554:7580   */\n      swap1\n      pop\n        /* \"#utility.yul\":7626:7635   */\n      dup2\n        /* \"#utility.yul\":7620:7624   */\n      dup2\n        /* \"#utility.yul\":7616:7636   */\n      sub\n        /* \"#utility.yul\":7612:7613   */\n      0x00\n        /* \"#utility.yul\":7601:7610   */\n      dup4\n        /* \"#utility.yul\":7597:7614   */\n      add\n        /* \"#utility.yul\":7590:7637   */\n      mstore\n        /* \"#utility.yul\":7654:7785   */\n      tag_271\n        /* \"#utility.yul\":7780:7784   */\n      dup2\n        /* \"#utility.yul\":7654:7785   */\n      tag_183\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":7646:7785   */\n      swap1\n      pop\n        /* \"#utility.yul\":7373:7792   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7798:7989   */\n    tag_106:\n        /* \"#utility.yul\":7838:7841   */\n      0x00\n        /* \"#utility.yul\":7857:7877   */\n      tag_273\n        /* \"#utility.yul\":7875:7876   */\n      dup3\n        /* \"#utility.yul\":7857:7877   */\n      tag_163\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":7852:7877   */\n      swap2\n      pop\n        /* \"#utility.yul\":7891:7911   */\n      tag_274\n        /* \"#utility.yul\":7909:7910   */\n      dup4\n        /* \"#utility.yul\":7891:7911   */\n      tag_163\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":7886:7911   */\n      swap3\n      pop\n        /* \"#utility.yul\":7934:7935   */\n      dup3\n        /* \"#utility.yul\":7931:7932   */\n      dup3\n        /* \"#utility.yul\":7927:7936   */\n      add\n        /* \"#utility.yul\":7920:7936   */\n      swap1\n      pop\n        /* \"#utility.yul\":7955:7958   */\n      dup1\n        /* \"#utility.yul\":7952:7953   */\n      dup3\n        /* \"#utility.yul\":7949:7959   */\n      gt\n        /* \"#utility.yul\":7946:7982   */\n      iszero\n      tag_275\n      jumpi\n        /* \"#utility.yul\":7962:7980   */\n      tag_276\n      tag_177\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":7946:7982   */\n    tag_275:\n        /* \"#utility.yul\":7798:7989   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7995:8437   */\n    tag_109:\n        /* \"#utility.yul\":8144:8148   */\n      0x00\n        /* \"#utility.yul\":8182:8184   */\n      0x60\n        /* \"#utility.yul\":8171:8180   */\n      dup3\n        /* \"#utility.yul\":8167:8185   */\n      add\n        /* \"#utility.yul\":8159:8185   */\n      swap1\n      pop\n        /* \"#utility.yul\":8195:8266   */\n      tag_278\n        /* \"#utility.yul\":8263:8264   */\n      0x00\n        /* \"#utility.yul\":8252:8261   */\n      dup4\n        /* \"#utility.yul\":8248:8265   */\n      add\n        /* \"#utility.yul\":8239:8245   */\n      dup7\n        /* \"#utility.yul\":8195:8266   */\n      tag_178\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":8276:8348   */\n      tag_279\n        /* \"#utility.yul\":8344:8346   */\n      0x20\n        /* \"#utility.yul\":8333:8342   */\n      dup4\n        /* \"#utility.yul\":8329:8347   */\n      add\n        /* \"#utility.yul\":8320:8326   */\n      dup6\n        /* \"#utility.yul\":8276:8348   */\n      tag_178\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":8358:8430   */\n      tag_280\n        /* \"#utility.yul\":8426:8428   */\n      0x40\n        /* \"#utility.yul\":8415:8424   */\n      dup4\n        /* \"#utility.yul\":8411:8429   */\n      add\n        /* \"#utility.yul\":8402:8408   */\n      dup5\n        /* \"#utility.yul\":8358:8430   */\n      tag_164\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":7995:8437   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8443:8616   */\n    tag_184:\n        /* \"#utility.yul\":8583:8608   */\n      0x204e6f7420686176696e6720616e792072657761726473000000000000000000\n        /* \"#utility.yul\":8579:8580   */\n      0x00\n        /* \"#utility.yul\":8571:8577   */\n      dup3\n        /* \"#utility.yul\":8567:8581   */\n      add\n        /* \"#utility.yul\":8560:8609   */\n      mstore\n        /* \"#utility.yul\":8443:8616   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8622:8988   */\n    tag_185:\n        /* \"#utility.yul\":8764:8767   */\n      0x00\n        /* \"#utility.yul\":8785:8852   */\n      tag_283\n        /* \"#utility.yul\":8849:8851   */\n      0x17\n        /* \"#utility.yul\":8844:8847   */\n      dup4\n        /* \"#utility.yul\":8785:8852   */\n      tag_172\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":8778:8852   */\n      swap2\n      pop\n        /* \"#utility.yul\":8861:8954   */\n      tag_284\n        /* \"#utility.yul\":8950:8953   */\n      dup3\n        /* \"#utility.yul\":8861:8954   */\n      tag_184\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":8979:8981   */\n      0x20\n        /* \"#utility.yul\":8974:8977   */\n      dup3\n        /* \"#utility.yul\":8970:8982   */\n      add\n        /* \"#utility.yul\":8963:8982   */\n      swap1\n      pop\n        /* \"#utility.yul\":8622:8988   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8994:9413   */\n    tag_124:\n        /* \"#utility.yul\":9160:9164   */\n      0x00\n        /* \"#utility.yul\":9198:9200   */\n      0x20\n        /* \"#utility.yul\":9187:9196   */\n      dup3\n        /* \"#utility.yul\":9183:9201   */\n      add\n        /* \"#utility.yul\":9175:9201   */\n      swap1\n      pop\n        /* \"#utility.yul\":9247:9256   */\n      dup2\n        /* \"#utility.yul\":9241:9245   */\n      dup2\n        /* \"#utility.yul\":9237:9257   */\n      sub\n        /* \"#utility.yul\":9233:9234   */\n      0x00\n        /* \"#utility.yul\":9222:9231   */\n      dup4\n        /* \"#utility.yul\":9218:9235   */\n      add\n        /* \"#utility.yul\":9211:9258   */\n      mstore\n        /* \"#utility.yul\":9275:9406   */\n      tag_286\n        /* \"#utility.yul\":9401:9405   */\n      dup2\n        /* \"#utility.yul\":9275:9406   */\n      tag_185\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":9267:9406   */\n      swap1\n      pop\n        /* \"#utility.yul\":8994:9413   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9419:9600   */\n    tag_186:\n        /* \"#utility.yul\":9559:9592   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":9555:9556   */\n      0x00\n        /* \"#utility.yul\":9547:9553   */\n      dup3\n        /* \"#utility.yul\":9543:9557   */\n      add\n        /* \"#utility.yul\":9536:9593   */\n      mstore\n        /* \"#utility.yul\":9419:9600   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9606:9972   */\n    tag_187:\n        /* \"#utility.yul\":9748:9751   */\n      0x00\n        /* \"#utility.yul\":9769:9836   */\n      tag_289\n        /* \"#utility.yul\":9833:9835   */\n      0x1f\n        /* \"#utility.yul\":9828:9831   */\n      dup4\n        /* \"#utility.yul\":9769:9836   */\n      tag_172\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":9762:9836   */\n      swap2\n      pop\n        /* \"#utility.yul\":9845:9938   */\n      tag_290\n        /* \"#utility.yul\":9934:9937   */\n      dup3\n        /* \"#utility.yul\":9845:9938   */\n      tag_186\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":9963:9965   */\n      0x20\n        /* \"#utility.yul\":9958:9961   */\n      dup3\n        /* \"#utility.yul\":9954:9966   */\n      add\n        /* \"#utility.yul\":9947:9966   */\n      swap1\n      pop\n        /* \"#utility.yul\":9606:9972   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9978:10397   */\n    tag_144:\n        /* \"#utility.yul\":10144:10148   */\n      0x00\n        /* \"#utility.yul\":10182:10184   */\n      0x20\n        /* \"#utility.yul\":10171:10180   */\n      dup3\n        /* \"#utility.yul\":10167:10185   */\n      add\n        /* \"#utility.yul\":10159:10185   */\n      swap1\n      pop\n        /* \"#utility.yul\":10231:10240   */\n      dup2\n        /* \"#utility.yul\":10225:10229   */\n      dup2\n        /* \"#utility.yul\":10221:10241   */\n      sub\n        /* \"#utility.yul\":10217:10218   */\n      0x00\n        /* \"#utility.yul\":10206:10215   */\n      dup4\n        /* \"#utility.yul\":10202:10219   */\n      add\n        /* \"#utility.yul\":10195:10242   */\n      mstore\n        /* \"#utility.yul\":10259:10390   */\n      tag_292\n        /* \"#utility.yul\":10385:10389   */\n      dup2\n        /* \"#utility.yul\":10259:10390   */\n      tag_187\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":10251:10390   */\n      swap1\n      pop\n        /* \"#utility.yul\":9978:10397   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10403:10813   */\n    tag_150:\n        /* \"#utility.yul\":10443:10450   */\n      0x00\n        /* \"#utility.yul\":10466:10486   */\n      tag_294\n        /* \"#utility.yul\":10484:10485   */\n      dup3\n        /* \"#utility.yul\":10466:10486   */\n      tag_163\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":10461:10486   */\n      swap2\n      pop\n        /* \"#utility.yul\":10500:10520   */\n      tag_295\n        /* \"#utility.yul\":10518:10519   */\n      dup4\n        /* \"#utility.yul\":10500:10520   */\n      tag_163\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":10495:10520   */\n      swap3\n      pop\n        /* \"#utility.yul\":10555:10556   */\n      dup3\n        /* \"#utility.yul\":10552:10553   */\n      dup3\n        /* \"#utility.yul\":10548:10557   */\n      mul\n        /* \"#utility.yul\":10577:10607   */\n      tag_296\n        /* \"#utility.yul\":10595:10606   */\n      dup2\n        /* \"#utility.yul\":10577:10607   */\n      tag_163\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":10566:10607   */\n      swap2\n      pop\n        /* \"#utility.yul\":10756:10757   */\n      dup3\n        /* \"#utility.yul\":10747:10754   */\n      dup3\n        /* \"#utility.yul\":10743:10758   */\n      div\n        /* \"#utility.yul\":10740:10741   */\n      dup5\n        /* \"#utility.yul\":10737:10759   */\n      eq\n        /* \"#utility.yul\":10717:10718   */\n      dup4\n        /* \"#utility.yul\":10710:10719   */\n      iszero\n        /* \"#utility.yul\":10690:10773   */\n      or\n        /* \"#utility.yul\":10667:10806   */\n      tag_297\n      jumpi\n        /* \"#utility.yul\":10786:10804   */\n      tag_298\n      tag_177\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":10667:10806   */\n    tag_297:\n        /* \"#utility.yul\":10451:10813   */\n      pop\n        /* \"#utility.yul\":10403:10813   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10819:10999   */\n    tag_188:\n        /* \"#utility.yul\":10867:10944   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10864:10865   */\n      0x00\n        /* \"#utility.yul\":10857:10945   */\n      mstore\n        /* \"#utility.yul\":10964:10968   */\n      0x12\n        /* \"#utility.yul\":10961:10962   */\n      0x04\n        /* \"#utility.yul\":10954:10969   */\n      mstore\n        /* \"#utility.yul\":10988:10992   */\n      0x24\n        /* \"#utility.yul\":10985:10986   */\n      0x00\n        /* \"#utility.yul\":10978:10993   */\n      revert\n        /* \"#utility.yul\":11005:11190   */\n    tag_155:\n        /* \"#utility.yul\":11045:11046   */\n      0x00\n        /* \"#utility.yul\":11062:11082   */\n      tag_301\n        /* \"#utility.yul\":11080:11081   */\n      dup3\n        /* \"#utility.yul\":11062:11082   */\n      tag_163\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":11057:11082   */\n      swap2\n      pop\n        /* \"#utility.yul\":11096:11116   */\n      tag_302\n        /* \"#utility.yul\":11114:11115   */\n      dup4\n        /* \"#utility.yul\":11096:11116   */\n      tag_163\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":11091:11116   */\n      swap3\n      pop\n        /* \"#utility.yul\":11135:11136   */\n      dup3\n        /* \"#utility.yul\":11125:11160   */\n      tag_303\n      jumpi\n        /* \"#utility.yul\":11140:11158   */\n      tag_304\n      tag_188\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":11125:11160   */\n    tag_303:\n        /* \"#utility.yul\":11182:11183   */\n      dup3\n        /* \"#utility.yul\":11179:11180   */\n      dup3\n        /* \"#utility.yul\":11175:11184   */\n      div\n        /* \"#utility.yul\":11170:11184   */\n      swap1\n      pop\n        /* \"#utility.yul\":11005:11190   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122031ded4e8f6c5223a4c50c998401e1e22a0633bdec970ac39de8a04b3a2f9fe9864736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_18": {
									"entryPoint": null,
									"id": 18,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_529": {
									"entryPoint": null,
									"id": 529,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 276,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 298,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 232,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 201,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 197,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1355:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:4"
															},
															"nodeType": "YulIf",
															"src": "621:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:4",
														"type": ""
													}
												],
												"src": "568:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:4"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:4",
														"type": ""
													}
												],
												"src": "696:143:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "939:413:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "985:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "981:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "952:32:4"
															},
															"nodeType": "YulIf",
															"src": "949:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1078:128:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1122:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1216:129:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1261:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "901:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "912:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "924:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "932:6:4",
														"type": ""
													}
												],
												"src": "845:507:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b50604051620014943803806200149483398181016040528101906200003691906200012a565b60015f819055508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200016f565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620000f482620000c9565b9050919050565b6200010681620000e8565b811462000111575f80fd5b50565b5f815190506200012481620000fb565b92915050565b5f8060408385031215620001435762000142620000c5565b5b5f620001528582860162000114565b9250506020620001658582860162000114565b9150509250929050565b611317806200017d5f395ff3fe608060405234801561000f575f80fd5b50600436106100cd575f3560e01c80638bfea4391161008a578063c8f33c9111610064578063c8f33c911461020f578063cd3daf9d1461022d578063e61036371461024b578063f7c618c114610269576100cd565b80638bfea439146101b9578063a694fc3a146101e9578063b88a802f14610205576100cd565b80630700037d146100d15780632e1a7d4d14610101578063602172671461011d57806369ef6ee71461014d57806372f702f31461016b5780638b87634714610189575b5f80fd5b6100eb60048036038101906100e69190610da8565b610287565b6040516100f89190610deb565b60405180910390f35b61011b60048036038101906101169190610e2e565b61029c565b005b61013760048036038101906101329190610da8565b6105a5565b6040516101449190610deb565b60405180910390f35b6101556105ba565b6040516101629190610deb565b60405180910390f35b6101736105c6565b6040516101809190610eb4565b60405180910390f35b6101a3600480360381019061019e9190610da8565b6105eb565b6040516101b09190610deb565b60405180910390f35b6101d360048036038101906101ce9190610da8565b610600565b6040516101e09190610deb565b60405180910390f35b61020360048036038101906101fe9190610e2e565b6106ae565b005b61020d610939565b005b610217610bda565b6040516102249190610deb565b60405180910390f35b610235610be0565b6040516102429190610deb565b60405180910390f35b610253610c75565b6040516102609190610deb565b60405180910390f35b610271610c7b565b60405161027e9190610eb4565b60405180910390f35b6007602052805f5260405f205f915090505481565b6102a4610ca0565b336102ad610be0565b600481905550426005819055506102c381610600565b60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060045460085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f821161038a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038190610f27565b60405180910390fd5b8160065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054101561040a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040190610f8f565b60405180910390fd5b8160035f82825461041b9190610fda565b925050819055508160065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461046e9190610fda565b92505081905550813373ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d560405160405180910390a35f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b815260040161051692919061101c565b6020604051808303815f875af1158015610532573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105569190611078565b905080610598576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058f906110ed565b60405180910390fd5b50506105a2610ced565b50565b6006602052805f5260405f205f915090505481565b670de0b6b3a764000081565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6008602052805f5260405f205f915090505481565b5f6106a761065b60085f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461064d610be0565b610cf690919063ffffffff16565b60065f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610d0b90919063ffffffff16565b9050919050565b6106b6610ca0565b336106bf610be0565b600481905550426005819055506106d581610600565b60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060045460085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f821161079c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079390610f27565b60405180910390fd5b8160035f8282546107ad919061110b565b925050819055508160065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610800919061110b565b92505081905550813373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d60405160405180910390a35f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b81526004016108aa9392919061113e565b6020604051808303815f875af11580156108c6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108ea9190611078565b90508061092c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610923906110ed565b60405180910390fd5b5050610936610ced565b50565b610941610ca0565b3361094a610be0565b6004819055504260058190555061096081610600565b60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060045460085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f8111610a68576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5f906111bd565b60405180910390fd5b5f60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550803373ffffffffffffffffffffffffffffffffffffffff167ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe60405160405180910390a35f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610b4b92919061101c565b6020604051808303815f875af1158015610b67573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b8b9190611078565b905080610bcd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc4906110ed565b60405180910390fd5b505050610bd8610ced565b565b60055481565b5f8060035403610bf4576004549050610c72565b5f610c0a60055442610cf690919063ffffffff16565b90505f610c2882670de0b6b3a7640000610d0b90919063ffffffff16565b9050610c6d600354610c5f610c4e670de0b6b3a764000085610d0b90919063ffffffff16565b600454610d2090919063ffffffff16565b610d3590919063ffffffff16565b925050505b90565b60045481565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025f5403610ce4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cdb90611225565b60405180910390fd5b60025f81905550565b60015f81905550565b5f8183610d039190610fda565b905092915050565b5f8183610d189190611243565b905092915050565b5f8183610d2d919061110b565b905092915050565b5f8183610d4291906112b1565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610d7782610d4e565b9050919050565b610d8781610d6d565b8114610d91575f80fd5b50565b5f81359050610da281610d7e565b92915050565b5f60208284031215610dbd57610dbc610d4a565b5b5f610dca84828501610d94565b91505092915050565b5f819050919050565b610de581610dd3565b82525050565b5f602082019050610dfe5f830184610ddc565b92915050565b610e0d81610dd3565b8114610e17575f80fd5b50565b5f81359050610e2881610e04565b92915050565b5f60208284031215610e4357610e42610d4a565b5b5f610e5084828501610e1a565b91505092915050565b5f819050919050565b5f610e7c610e77610e7284610d4e565b610e59565b610d4e565b9050919050565b5f610e8d82610e62565b9050919050565b5f610e9e82610e83565b9050919050565b610eae81610e94565b82525050565b5f602082019050610ec75f830184610ea5565b92915050565b5f82825260208201905092915050565b7f416d6f756e74206d7573742062652067726561746572207468616e20300000005f82015250565b5f610f11601d83610ecd565b9150610f1c82610edd565b602082019050919050565b5f6020820190508181035f830152610f3e81610f05565b9050919050565b7f5374616b656e6420616d6f756e74206973206e6f7420656e6f756768000000005f82015250565b5f610f79601c83610ecd565b9150610f8482610f45565b602082019050919050565b5f6020820190508181035f830152610fa681610f6d565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610fe482610dd3565b9150610fef83610dd3565b925082820390508181111561100757611006610fad565b5b92915050565b61101681610d6d565b82525050565b5f60408201905061102f5f83018561100d565b61103c6020830184610ddc565b9392505050565b5f8115159050919050565b61105781611043565b8114611061575f80fd5b50565b5f815190506110728161104e565b92915050565b5f6020828403121561108d5761108c610d4a565b5b5f61109a84828501611064565b91505092915050565b7f5472616e73666572204661696c656400000000000000000000000000000000005f82015250565b5f6110d7600f83610ecd565b91506110e2826110a3565b602082019050919050565b5f6020820190508181035f830152611104816110cb565b9050919050565b5f61111582610dd3565b915061112083610dd3565b925082820190508082111561113857611137610fad565b5b92915050565b5f6060820190506111515f83018661100d565b61115e602083018561100d565b61116b6040830184610ddc565b949350505050565b7f204e6f7420686176696e6720616e7920726577617264730000000000000000005f82015250565b5f6111a7601783610ecd565b91506111b282611173565b602082019050919050565b5f6020820190508181035f8301526111d48161119b565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f61120f601f83610ecd565b915061121a826111db565b602082019050919050565b5f6020820190508181035f83015261123c81611203565b9050919050565b5f61124d82610dd3565b915061125883610dd3565b925082820261126681610dd3565b9150828204841483151761127d5761127c610fad565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6112bb82610dd3565b91506112c683610dd3565b9250826112d6576112d5611284565b5b82820490509291505056fea264697066735822122031ded4e8f6c5223a4c50c998401e1e22a0633bdec970ac39de8a04b3a2f9fe9864736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1494 CODESIZE SUB DUP1 PUSH3 0x1494 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x12A JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x16F JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xF4 DUP3 PUSH3 0xC9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x106 DUP2 PUSH3 0xE8 JUMP JUMPDEST DUP2 EQ PUSH3 0x111 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x124 DUP2 PUSH3 0xFB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x143 JUMPI PUSH3 0x142 PUSH3 0xC5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x152 DUP6 DUP3 DUP7 ADD PUSH3 0x114 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x165 DUP6 DUP3 DUP7 ADD PUSH3 0x114 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1317 DUP1 PUSH3 0x17D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8BFEA439 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xC8F33C91 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0xCD3DAF9D EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0xE6103637 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x269 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x8BFEA439 EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x205 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x700037D EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x60217267 EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0x69EF6EE7 EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x8B876347 EQ PUSH2 0x189 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0xDA8 JUMP JUMPDEST PUSH2 0x287 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x116 SWAP2 SWAP1 PUSH2 0xE2E JUMP JUMPDEST PUSH2 0x29C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x137 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x132 SWAP2 SWAP1 PUSH2 0xDA8 JUMP JUMPDEST PUSH2 0x5A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x144 SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x155 PUSH2 0x5BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x162 SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH2 0x5C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x180 SWAP2 SWAP1 PUSH2 0xEB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19E SWAP2 SWAP1 PUSH2 0xDA8 JUMP JUMPDEST PUSH2 0x5EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0xDA8 JUMP JUMPDEST PUSH2 0x600 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x203 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0xE2E JUMP JUMPDEST PUSH2 0x6AE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20D PUSH2 0x939 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x217 PUSH2 0xBDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x224 SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x235 PUSH2 0xBE0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x242 SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x253 PUSH2 0xC75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x260 SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x271 PUSH2 0xC7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27E SWAP2 SWAP1 PUSH2 0xEB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2A4 PUSH2 0xCA0 JUMP JUMPDEST CALLER PUSH2 0x2AD PUSH2 0xBE0 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH2 0x2C3 DUP2 PUSH2 0x600 JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 DUP3 GT PUSH2 0x38A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0xF27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x40A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x401 SWAP1 PUSH2 0xF8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x41B SWAP2 SWAP1 PUSH2 0xFDA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x46E SWAP2 SWAP1 PUSH2 0xFDA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x516 SWAP3 SWAP2 SWAP1 PUSH2 0x101C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x532 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x556 SWAP2 SWAP1 PUSH2 0x1078 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x598 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58F SWAP1 PUSH2 0x10ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH2 0x5A2 PUSH2 0xCED JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x6A7 PUSH2 0x65B PUSH1 0x8 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x64D PUSH2 0xBE0 JUMP JUMPDEST PUSH2 0xCF6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xD0B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6B6 PUSH2 0xCA0 JUMP JUMPDEST CALLER PUSH2 0x6BF PUSH2 0xBE0 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH2 0x6D5 DUP2 PUSH2 0x600 JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 DUP3 GT PUSH2 0x79C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x793 SWAP1 PUSH2 0xF27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7AD SWAP2 SWAP1 PUSH2 0x110B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x800 SWAP2 SWAP1 PUSH2 0x110B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x113E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8C6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8EA SWAP2 SWAP1 PUSH2 0x1078 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x92C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x923 SWAP1 PUSH2 0x10ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH2 0x936 PUSH2 0xCED JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x941 PUSH2 0xCA0 JUMP JUMPDEST CALLER PUSH2 0x94A PUSH2 0xBE0 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH2 0x960 DUP2 PUSH2 0x600 JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0xA68 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA5F SWAP1 PUSH2 0x11BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFC30CDDEA38E2BF4D6EA7D3F9ED3B6AD7F176419F4963BD81318067A4AEE73FE PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4B SWAP3 SWAP2 SWAP1 PUSH2 0x101C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB67 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB8B SWAP2 SWAP1 PUSH2 0x1078 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xBCD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC4 SWAP1 PUSH2 0x10ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP PUSH2 0xBD8 PUSH2 0xCED JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x3 SLOAD SUB PUSH2 0xBF4 JUMPI PUSH1 0x4 SLOAD SWAP1 POP PUSH2 0xC72 JUMP JUMPDEST PUSH0 PUSH2 0xC0A PUSH1 0x5 SLOAD TIMESTAMP PUSH2 0xCF6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xC28 DUP3 PUSH8 0xDE0B6B3A7640000 PUSH2 0xD0B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xC6D PUSH1 0x3 SLOAD PUSH2 0xC5F PUSH2 0xC4E PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0xD0B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xD20 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xD35 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0xCE4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCDB SWAP1 PUSH2 0x1225 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xD03 SWAP2 SWAP1 PUSH2 0xFDA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xD18 SWAP2 SWAP1 PUSH2 0x1243 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xD2D SWAP2 SWAP1 PUSH2 0x110B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xD42 SWAP2 SWAP1 PUSH2 0x12B1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD77 DUP3 PUSH2 0xD4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD87 DUP2 PUSH2 0xD6D JUMP JUMPDEST DUP2 EQ PUSH2 0xD91 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDA2 DUP2 PUSH2 0xD7E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDBD JUMPI PUSH2 0xDBC PUSH2 0xD4A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDCA DUP5 DUP3 DUP6 ADD PUSH2 0xD94 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDE5 DUP2 PUSH2 0xDD3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDFE PUSH0 DUP4 ADD DUP5 PUSH2 0xDDC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE0D DUP2 PUSH2 0xDD3 JUMP JUMPDEST DUP2 EQ PUSH2 0xE17 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE28 DUP2 PUSH2 0xE04 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE43 JUMPI PUSH2 0xE42 PUSH2 0xD4A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE50 DUP5 DUP3 DUP6 ADD PUSH2 0xE1A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE7C PUSH2 0xE77 PUSH2 0xE72 DUP5 PUSH2 0xD4E JUMP JUMPDEST PUSH2 0xE59 JUMP JUMPDEST PUSH2 0xD4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE8D DUP3 PUSH2 0xE62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE9E DUP3 PUSH2 0xE83 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEAE DUP2 PUSH2 0xE94 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEC7 PUSH0 DUP4 ADD DUP5 PUSH2 0xEA5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF11 PUSH1 0x1D DUP4 PUSH2 0xECD JUMP JUMPDEST SWAP2 POP PUSH2 0xF1C DUP3 PUSH2 0xEDD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF3E DUP2 PUSH2 0xF05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374616B656E6420616D6F756E74206973206E6F7420656E6F75676800000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF79 PUSH1 0x1C DUP4 PUSH2 0xECD JUMP JUMPDEST SWAP2 POP PUSH2 0xF84 DUP3 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFA6 DUP2 PUSH2 0xF6D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xFE4 DUP3 PUSH2 0xDD3 JUMP JUMPDEST SWAP2 POP PUSH2 0xFEF DUP4 PUSH2 0xDD3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1007 JUMPI PUSH2 0x1006 PUSH2 0xFAD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1016 DUP2 PUSH2 0xD6D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x102F PUSH0 DUP4 ADD DUP6 PUSH2 0x100D JUMP JUMPDEST PUSH2 0x103C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDDC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1057 DUP2 PUSH2 0x1043 JUMP JUMPDEST DUP2 EQ PUSH2 0x1061 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1072 DUP2 PUSH2 0x104E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x108D JUMPI PUSH2 0x108C PUSH2 0xD4A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x109A DUP5 DUP3 DUP6 ADD PUSH2 0x1064 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572204661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10D7 PUSH1 0xF DUP4 PUSH2 0xECD JUMP JUMPDEST SWAP2 POP PUSH2 0x10E2 DUP3 PUSH2 0x10A3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1104 DUP2 PUSH2 0x10CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1115 DUP3 PUSH2 0xDD3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1120 DUP4 PUSH2 0xDD3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1138 JUMPI PUSH2 0x1137 PUSH2 0xFAD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1151 PUSH0 DUP4 ADD DUP7 PUSH2 0x100D JUMP JUMPDEST PUSH2 0x115E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x100D JUMP JUMPDEST PUSH2 0x116B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xDDC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x204E6F7420686176696E6720616E792072657761726473000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x11A7 PUSH1 0x17 DUP4 PUSH2 0xECD JUMP JUMPDEST SWAP2 POP PUSH2 0x11B2 DUP3 PUSH2 0x1173 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11D4 DUP2 PUSH2 0x119B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x120F PUSH1 0x1F DUP4 PUSH2 0xECD JUMP JUMPDEST SWAP2 POP PUSH2 0x121A DUP3 PUSH2 0x11DB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x123C DUP2 PUSH2 0x1203 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x124D DUP3 PUSH2 0xDD3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1258 DUP4 PUSH2 0xDD3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1266 DUP2 PUSH2 0xDD3 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x127D JUMPI PUSH2 0x127C PUSH2 0xFAD JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x12BB DUP3 PUSH2 0xDD3 JUMP JUMPDEST SWAP2 POP PUSH2 0x12C6 DUP4 PUSH2 0xDD3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x12D6 JUMPI PUSH2 0x12D5 PUSH2 0x1284 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE 0xDE 0xD4 0xE8 0xF6 0xC5 0x22 GASPRICE 0x4C POP 0xC9 SWAP9 BLOCKHASH 0x1E 0x1E 0x22 LOG0 PUSH4 0x3BDEC970 0xAC CODECOPY 0xDE DUP11 DIV 0xB3 LOG2 0xF9 INVALID SWAP9 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "236:2825:3:-:0;;;892:153;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:0;1821:7;:22;;;;980:13:3;958:12;;:36;;;;;;;;;;;;;;;;;;1025:12;1004:11;;:34;;;;;;;;;;;;;;;;;;892:153;;236:2825;;88:117:4;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;236:2825:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@Reward_Rate_473": {
									"entryPoint": 1466,
									"id": 473,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantAfter_52": {
									"entryPoint": 3309,
									"id": 52,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_44": {
									"entryPoint": 3232,
									"id": 44,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@add_318": {
									"entryPoint": 3360,
									"id": 318,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@claimReward_785": {
									"entryPoint": 2361,
									"id": 785,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@div_363": {
									"entryPoint": 3381,
									"id": 363,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@lastUpdateTime_479": {
									"entryPoint": 3034,
									"id": 479,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_348": {
									"entryPoint": 3339,
									"id": 348,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@rewardPerToken_598": {
									"entryPoint": 3040,
									"id": 598,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@rewardToken_467": {
									"entryPoint": 3195,
									"id": 467,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardperTokenStored_477": {
									"entryPoint": 3189,
									"id": 477,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardsEarned_620": {
									"entryPoint": 1536,
									"id": 620,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@rewards_487": {
									"entryPoint": 647,
									"id": 487,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stake_674": {
									"entryPoint": 1710,
									"id": 674,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakedBalance_483": {
									"entryPoint": 1445,
									"id": 483,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakingToken_464": {
									"entryPoint": 1478,
									"id": 464,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_333": {
									"entryPoint": 3318,
									"id": 333,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@userRewardPerTokenPaid_491": {
									"entryPoint": 1515,
									"id": 491,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_734": {
									"entryPoint": 668,
									"id": 734,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3476,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 4196,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3610,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3496,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4216,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3630,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$142_to_t_address_fromStack": {
									"entryPoint": 3749,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0a51e3ccfcb7dff3e4508d9754427a1dcf902a3e7ae0f1e76d424fa84cc979df_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3949,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3845,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_83296a6eed583e0226a90df39d089266d3dfd37319cb2df3db068ad3dd7facf6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4507,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4611,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3548,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4414,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4124,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$142__to_t_address__fromStack_reversed": {
									"entryPoint": 3764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0a51e3ccfcb7dff3e4508d9754427a1dcf902a3e7ae0f1e76d424fa84cc979df__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3983,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3879,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_83296a6eed583e0226a90df39d089266d3dfd37319cb2df3db068ad3dd7facf6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4541,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4333,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4645,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3563,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3789,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4363,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4785,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4675,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4058,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3437,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3406,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3539,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$142_to_t_address": {
									"entryPoint": 3732,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 3715,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 3682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 3673,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4013,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4740,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3402,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0a51e3ccfcb7dff3e4508d9754427a1dcf902a3e7ae0f1e76d424fa84cc979df": {
									"entryPoint": 3909,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296": {
									"entryPoint": 3805,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_83296a6eed583e0226a90df39d089266d3dfd37319cb2df3db068ad3dd7facf6": {
									"entryPoint": 4467,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f": {
									"entryPoint": 4259,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 4571,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3454,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 4174,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3588,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:11193:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:4"
															},
															"nodeType": "YulIf",
															"src": "621:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:4",
														"type": ""
													}
												],
												"src": "568:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:4",
														"type": ""
													}
												],
												"src": "696:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:4"
															},
															"nodeType": "YulIf",
															"src": "917:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:4",
														"type": ""
													}
												],
												"src": "841:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1221:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1231:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1242:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1203:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1213:7:4",
														"type": ""
													}
												],
												"src": "1176:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1324:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1334:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1312:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1319:3:4",
														"type": ""
													}
												],
												"src": "1259:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1481:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1491:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1499:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1527:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1453:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1465:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1476:4:4",
														"type": ""
													}
												],
												"src": "1383:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1654:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1711:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1667:43:4"
															},
															"nodeType": "YulIf",
															"src": "1664:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1647:5:4",
														"type": ""
													}
												],
												"src": "1611:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1791:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1801:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1810:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1810:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1839:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1839:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1839:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1769:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1777:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1785:5:4",
														"type": ""
													}
												],
												"src": "1739:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1950:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1996:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1998:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1998:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1998:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1971:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1980:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1967:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1967:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1992:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1963:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1963:32:4"
															},
															"nodeType": "YulIf",
															"src": "1960:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "2089:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2104:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2118:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2108:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2133:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2168:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2179:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2164:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2164:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2188:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2143:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2143:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2133:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1920:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1931:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1943:6:4",
														"type": ""
													}
												],
												"src": "1884:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2251:28:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2261:12:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2268:5:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2261:3:4"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2237:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2247:3:4",
														"type": ""
													}
												],
												"src": "2219:60:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2345:82:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2355:66:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2413:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "2395:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2395:24:4"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "2386:8:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2386:34:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2368:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2368:53:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2355:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2325:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2335:9:4",
														"type": ""
													}
												],
												"src": "2285:142:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2493:66:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2503:50:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2547:5:4"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2516:30:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2516:37:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2503:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2473:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2483:9:4",
														"type": ""
													}
												],
												"src": "2433:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2639:66:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2649:50:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2693:5:4"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2662:30:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2662:37:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2649:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$142_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2619:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2629:9:4",
														"type": ""
													}
												],
												"src": "2565:140:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2790:80:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2807:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2857:5:4"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$142_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2812:44:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2812:51:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2800:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2800:64:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2800:64:4"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$142_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2778:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2785:3:4",
														"type": ""
													}
												],
												"src": "2711:159:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2988:138:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2998:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3010:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3021:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3006:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3006:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2998:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3092:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3105:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3116:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3101:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3101:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$142_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3034:57:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3034:85:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3034:85:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$142__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2960:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2972:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2983:4:4",
														"type": ""
													}
												],
												"src": "2876:250:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3228:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3245:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3250:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3238:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3238:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3238:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3266:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3285:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3290:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3281:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3281:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3266:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3200:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3205:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3216:11:4",
														"type": ""
													}
												],
												"src": "3132:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3413:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3435:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3443:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3431:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3431:14:4"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3447:31:4",
																		"type": "",
																		"value": "Amount must be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3424:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3424:55:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3424:55:4"
														}
													]
												},
												"name": "store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3405:6:4",
														"type": ""
													}
												],
												"src": "3307:179:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3638:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3648:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3714:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3719:2:4",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3655:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3655:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3648:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3820:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																	"nodeType": "YulIdentifier",
																	"src": "3731:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3731:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3731:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3833:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3844:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3849:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3840:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3840:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3833:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3626:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3634:3:4",
														"type": ""
													}
												],
												"src": "3492:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4035:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4045:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4057:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4068:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4053:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4053:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4045:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4092:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4103:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4088:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4088:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4111:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4117:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4107:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4107:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4081:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4081:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4081:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4137:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4271:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4145:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4145:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4137:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4015:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4030:4:4",
														"type": ""
													}
												],
												"src": "3864:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4395:72:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4417:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4425:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4413:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4413:14:4"
																	},
																	{
																		"hexValue": "5374616b656e6420616d6f756e74206973206e6f7420656e6f756768",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4429:30:4",
																		"type": "",
																		"value": "Stakend amount is not enough"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4406:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4406:54:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4406:54:4"
														}
													]
												},
												"name": "store_literal_in_memory_0a51e3ccfcb7dff3e4508d9754427a1dcf902a3e7ae0f1e76d424fa84cc979df",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4387:6:4",
														"type": ""
													}
												],
												"src": "4289:178:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4619:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4629:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4695:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4700:2:4",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4636:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4636:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4629:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4801:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0a51e3ccfcb7dff3e4508d9754427a1dcf902a3e7ae0f1e76d424fa84cc979df",
																	"nodeType": "YulIdentifier",
																	"src": "4712:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4712:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4712:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4814:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4825:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4830:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4821:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4821:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4814:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0a51e3ccfcb7dff3e4508d9754427a1dcf902a3e7ae0f1e76d424fa84cc979df_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4607:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4615:3:4",
														"type": ""
													}
												],
												"src": "4473:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5016:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5026:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5038:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5049:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5034:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5034:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5026:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5073:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5084:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5069:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5069:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5092:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5098:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5088:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5088:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5062:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5062:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5062:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5118:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5252:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0a51e3ccfcb7dff3e4508d9754427a1dcf902a3e7ae0f1e76d424fa84cc979df_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5126:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5126:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5118:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0a51e3ccfcb7dff3e4508d9754427a1dcf902a3e7ae0f1e76d424fa84cc979df__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4996:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5011:4:4",
														"type": ""
													}
												],
												"src": "4845:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5298:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5315:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5318:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5308:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5308:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5308:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5412:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5415:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5405:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5405:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5405:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5436:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5439:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5429:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5429:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5429:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5270:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5501:149:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5511:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5534:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5516:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5516:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5511:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5545:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5568:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5550:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5550:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5545:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5579:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5591:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5594:1:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5587:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5587:9:4"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "5579:4:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5621:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5623:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5623:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5623:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "5612:4:4"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5618:1:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5609:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5609:11:4"
															},
															"nodeType": "YulIf",
															"src": "5606:37:4"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5487:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5490:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "5496:4:4",
														"type": ""
													}
												],
												"src": "5456:194:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5721:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5738:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5761:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5743:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5743:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5731:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5731:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5731:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5709:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5716:3:4",
														"type": ""
													}
												],
												"src": "5656:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5906:206:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5916:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5928:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5939:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5924:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5924:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5916:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5996:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6009:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6020:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6005:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6005:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5952:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5952:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5952:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6077:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6090:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6101:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6086:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6086:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6033:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6033:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6033:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5870:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5882:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5890:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5901:4:4",
														"type": ""
													}
												],
												"src": "5780:332:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6160:48:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6170:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6195:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6188:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6188:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6181:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6181:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6170:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6142:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6152:7:4",
														"type": ""
													}
												],
												"src": "6118:90:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6254:76:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6308:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6317:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6320:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6310:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6310:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6310:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6277:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6299:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "6284:14:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6284:21:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6274:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6274:32:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6267:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6267:40:4"
															},
															"nodeType": "YulIf",
															"src": "6264:60:4"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6247:5:4",
														"type": ""
													}
												],
												"src": "6214:116:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6396:77:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6406:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6421:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6415:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6415:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6406:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6461:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "6437:23:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6437:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6437:30:4"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6374:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6382:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6390:5:4",
														"type": ""
													}
												],
												"src": "6336:137:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6553:271:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6599:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6601:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6601:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6601:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6574:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6583:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6570:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6570:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6595:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6566:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6566:32:4"
															},
															"nodeType": "YulIf",
															"src": "6563:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "6692:125:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6707:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6721:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6711:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6736:71:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6779:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6790:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6775:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6775:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6799:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "6746:28:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6746:61:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6736:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6523:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6534:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6546:6:4",
														"type": ""
													}
												],
												"src": "6479:345:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6936:59:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6958:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6966:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6954:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6954:14:4"
																	},
																	{
																		"hexValue": "5472616e73666572204661696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6970:17:4",
																		"type": "",
																		"value": "Transfer Failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6947:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6947:41:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6947:41:4"
														}
													]
												},
												"name": "store_literal_in_memory_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6928:6:4",
														"type": ""
													}
												],
												"src": "6830:165:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7147:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7157:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7223:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7228:2:4",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7164:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7164:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7157:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7329:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f",
																	"nodeType": "YulIdentifier",
																	"src": "7240:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7240:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7240:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7342:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7353:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7358:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7349:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7349:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7342:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7135:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7143:3:4",
														"type": ""
													}
												],
												"src": "7001:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7544:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7554:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7566:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7577:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7562:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7562:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7554:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7601:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7612:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7597:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7597:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7620:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7626:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7616:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7616:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7590:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7590:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7590:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7646:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7780:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7654:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7654:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7646:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7524:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7539:4:4",
														"type": ""
													}
												],
												"src": "7373:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7842:147:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7852:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7875:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7857:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7857:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7852:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7886:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7909:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7891:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7891:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7886:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7920:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7931:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7934:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7927:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7927:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "7920:3:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7960:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7962:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7962:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7962:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7952:1:4"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "7955:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7949:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7949:10:4"
															},
															"nodeType": "YulIf",
															"src": "7946:36:4"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7829:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7832:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "7838:3:4",
														"type": ""
													}
												],
												"src": "7798:191:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8149:288:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8159:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8171:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8182:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8167:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8167:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8159:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8239:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8252:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8263:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8248:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8248:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8195:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8195:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8195:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8320:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8333:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8344:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8329:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8329:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8276:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8276:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8276:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8402:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8415:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8426:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8411:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8411:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8358:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8358:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8358:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8105:9:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8117:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8125:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8133:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8144:4:4",
														"type": ""
													}
												],
												"src": "7995:442:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8549:67:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8571:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8579:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8567:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8567:14:4"
																	},
																	{
																		"hexValue": "204e6f7420686176696e6720616e792072657761726473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8583:25:4",
																		"type": "",
																		"value": " Not having any rewards"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8560:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8560:49:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8560:49:4"
														}
													]
												},
												"name": "store_literal_in_memory_83296a6eed583e0226a90df39d089266d3dfd37319cb2df3db068ad3dd7facf6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8541:6:4",
														"type": ""
													}
												],
												"src": "8443:173:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8768:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8778:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8844:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8849:2:4",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8785:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8785:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8778:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8950:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_83296a6eed583e0226a90df39d089266d3dfd37319cb2df3db068ad3dd7facf6",
																	"nodeType": "YulIdentifier",
																	"src": "8861:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8861:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8861:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8963:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8974:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8979:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8970:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8970:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8963:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_83296a6eed583e0226a90df39d089266d3dfd37319cb2df3db068ad3dd7facf6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8756:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8764:3:4",
														"type": ""
													}
												],
												"src": "8622:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9165:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9175:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9187:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9198:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9183:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9183:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9175:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9222:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9233:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9218:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9218:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9241:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9247:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9237:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9237:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9211:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9211:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9211:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9267:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9401:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_83296a6eed583e0226a90df39d089266d3dfd37319cb2df3db068ad3dd7facf6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9275:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9275:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9267:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_83296a6eed583e0226a90df39d089266d3dfd37319cb2df3db068ad3dd7facf6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9145:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9160:4:4",
														"type": ""
													}
												],
												"src": "8994:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9525:75:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9547:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9555:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9543:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9543:14:4"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9559:33:4",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9536:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9536:57:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9536:57:4"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9517:6:4",
														"type": ""
													}
												],
												"src": "9419:181:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9752:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9762:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9828:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9833:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9769:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9769:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9762:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9934:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "9845:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9845:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9845:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9947:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9958:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9963:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9954:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9954:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9947:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9740:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9748:3:4",
														"type": ""
													}
												],
												"src": "9606:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10149:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10159:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10171:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10182:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10167:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10167:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10159:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10206:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10217:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10202:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10202:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10225:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10231:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10221:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10221:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10195:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10195:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10195:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10251:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10385:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10259:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10259:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10251:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10129:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10144:4:4",
														"type": ""
													}
												],
												"src": "9978:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10451:362:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10461:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10484:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10466:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10466:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10461:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10495:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10518:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10500:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10500:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10495:1:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10529:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10552:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10555:1:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "10548:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10548:9:4"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "10533:11:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10566:41:4",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "10595:11:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10577:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10577:30:4"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "10566:7:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10784:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10786:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10786:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10786:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10717:1:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "10710:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10710:9:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "10740:1:4"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "10747:7:4"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "10756:1:4"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "10743:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10743:15:4"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "10737:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10737:22:4"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "10690:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10690:83:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10670:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10670:113:4"
															},
															"nodeType": "YulIf",
															"src": "10667:139:4"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10434:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10437:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "10443:7:4",
														"type": ""
													}
												],
												"src": "10403:410:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10847:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10864:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10867:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10857:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10857:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10857:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10961:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10964:4:4",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10954:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10954:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10954:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10985:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10988:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10978:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10978:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10978:15:4"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "10819:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11047:143:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11057:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11080:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11062:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11062:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11057:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11091:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11114:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11096:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11096:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11091:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11138:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "11140:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11140:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11140:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11135:1:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11128:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11128:9:4"
															},
															"nodeType": "YulIf",
															"src": "11125:35:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11170:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11179:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11182:1:4"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "11175:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11175:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "11170:1:4"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11036:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11039:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "11045:1:4",
														"type": ""
													}
												],
												"src": "11005:185:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$142_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$142_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$142_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$142__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$142_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be greater than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0a51e3ccfcb7dff3e4508d9754427a1dcf902a3e7ae0f1e76d424fa84cc979df(memPtr) {\n\n        mstore(add(memPtr, 0), \"Stakend amount is not enough\")\n\n    }\n\n    function abi_encode_t_stringliteral_0a51e3ccfcb7dff3e4508d9754427a1dcf902a3e7ae0f1e76d424fa84cc979df_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_0a51e3ccfcb7dff3e4508d9754427a1dcf902a3e7ae0f1e76d424fa84cc979df(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0a51e3ccfcb7dff3e4508d9754427a1dcf902a3e7ae0f1e76d424fa84cc979df__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0a51e3ccfcb7dff3e4508d9754427a1dcf902a3e7ae0f1e76d424fa84cc979df_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer Failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_83296a6eed583e0226a90df39d089266d3dfd37319cb2df3db068ad3dd7facf6(memPtr) {\n\n        mstore(add(memPtr, 0), \" Not having any rewards\")\n\n    }\n\n    function abi_encode_t_stringliteral_83296a6eed583e0226a90df39d089266d3dfd37319cb2df3db068ad3dd7facf6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_83296a6eed583e0226a90df39d089266d3dfd37319cb2df3db068ad3dd7facf6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_83296a6eed583e0226a90df39d089266d3dfd37319cb2df3db068ad3dd7facf6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_83296a6eed583e0226a90df39d089266d3dfd37319cb2df3db068ad3dd7facf6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100cd575f3560e01c80638bfea4391161008a578063c8f33c9111610064578063c8f33c911461020f578063cd3daf9d1461022d578063e61036371461024b578063f7c618c114610269576100cd565b80638bfea439146101b9578063a694fc3a146101e9578063b88a802f14610205576100cd565b80630700037d146100d15780632e1a7d4d14610101578063602172671461011d57806369ef6ee71461014d57806372f702f31461016b5780638b87634714610189575b5f80fd5b6100eb60048036038101906100e69190610da8565b610287565b6040516100f89190610deb565b60405180910390f35b61011b60048036038101906101169190610e2e565b61029c565b005b61013760048036038101906101329190610da8565b6105a5565b6040516101449190610deb565b60405180910390f35b6101556105ba565b6040516101629190610deb565b60405180910390f35b6101736105c6565b6040516101809190610eb4565b60405180910390f35b6101a3600480360381019061019e9190610da8565b6105eb565b6040516101b09190610deb565b60405180910390f35b6101d360048036038101906101ce9190610da8565b610600565b6040516101e09190610deb565b60405180910390f35b61020360048036038101906101fe9190610e2e565b6106ae565b005b61020d610939565b005b610217610bda565b6040516102249190610deb565b60405180910390f35b610235610be0565b6040516102429190610deb565b60405180910390f35b610253610c75565b6040516102609190610deb565b60405180910390f35b610271610c7b565b60405161027e9190610eb4565b60405180910390f35b6007602052805f5260405f205f915090505481565b6102a4610ca0565b336102ad610be0565b600481905550426005819055506102c381610600565b60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060045460085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f821161038a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038190610f27565b60405180910390fd5b8160065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054101561040a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040190610f8f565b60405180910390fd5b8160035f82825461041b9190610fda565b925050819055508160065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461046e9190610fda565b92505081905550813373ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d560405160405180910390a35f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b815260040161051692919061101c565b6020604051808303815f875af1158015610532573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105569190611078565b905080610598576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058f906110ed565b60405180910390fd5b50506105a2610ced565b50565b6006602052805f5260405f205f915090505481565b670de0b6b3a764000081565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6008602052805f5260405f205f915090505481565b5f6106a761065b60085f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461064d610be0565b610cf690919063ffffffff16565b60065f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610d0b90919063ffffffff16565b9050919050565b6106b6610ca0565b336106bf610be0565b600481905550426005819055506106d581610600565b60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060045460085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f821161079c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079390610f27565b60405180910390fd5b8160035f8282546107ad919061110b565b925050819055508160065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610800919061110b565b92505081905550813373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d60405160405180910390a35f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b81526004016108aa9392919061113e565b6020604051808303815f875af11580156108c6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108ea9190611078565b90508061092c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610923906110ed565b60405180910390fd5b5050610936610ced565b50565b610941610ca0565b3361094a610be0565b6004819055504260058190555061096081610600565b60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060045460085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f8111610a68576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5f906111bd565b60405180910390fd5b5f60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550803373ffffffffffffffffffffffffffffffffffffffff167ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe60405160405180910390a35f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610b4b92919061101c565b6020604051808303815f875af1158015610b67573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b8b9190611078565b905080610bcd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc4906110ed565b60405180910390fd5b505050610bd8610ced565b565b60055481565b5f8060035403610bf4576004549050610c72565b5f610c0a60055442610cf690919063ffffffff16565b90505f610c2882670de0b6b3a7640000610d0b90919063ffffffff16565b9050610c6d600354610c5f610c4e670de0b6b3a764000085610d0b90919063ffffffff16565b600454610d2090919063ffffffff16565b610d3590919063ffffffff16565b925050505b90565b60045481565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025f5403610ce4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cdb90611225565b60405180910390fd5b60025f81905550565b60015f81905550565b5f8183610d039190610fda565b905092915050565b5f8183610d189190611243565b905092915050565b5f8183610d2d919061110b565b905092915050565b5f8183610d4291906112b1565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610d7782610d4e565b9050919050565b610d8781610d6d565b8114610d91575f80fd5b50565b5f81359050610da281610d7e565b92915050565b5f60208284031215610dbd57610dbc610d4a565b5b5f610dca84828501610d94565b91505092915050565b5f819050919050565b610de581610dd3565b82525050565b5f602082019050610dfe5f830184610ddc565b92915050565b610e0d81610dd3565b8114610e17575f80fd5b50565b5f81359050610e2881610e04565b92915050565b5f60208284031215610e4357610e42610d4a565b5b5f610e5084828501610e1a565b91505092915050565b5f819050919050565b5f610e7c610e77610e7284610d4e565b610e59565b610d4e565b9050919050565b5f610e8d82610e62565b9050919050565b5f610e9e82610e83565b9050919050565b610eae81610e94565b82525050565b5f602082019050610ec75f830184610ea5565b92915050565b5f82825260208201905092915050565b7f416d6f756e74206d7573742062652067726561746572207468616e20300000005f82015250565b5f610f11601d83610ecd565b9150610f1c82610edd565b602082019050919050565b5f6020820190508181035f830152610f3e81610f05565b9050919050565b7f5374616b656e6420616d6f756e74206973206e6f7420656e6f756768000000005f82015250565b5f610f79601c83610ecd565b9150610f8482610f45565b602082019050919050565b5f6020820190508181035f830152610fa681610f6d565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610fe482610dd3565b9150610fef83610dd3565b925082820390508181111561100757611006610fad565b5b92915050565b61101681610d6d565b82525050565b5f60408201905061102f5f83018561100d565b61103c6020830184610ddc565b9392505050565b5f8115159050919050565b61105781611043565b8114611061575f80fd5b50565b5f815190506110728161104e565b92915050565b5f6020828403121561108d5761108c610d4a565b5b5f61109a84828501611064565b91505092915050565b7f5472616e73666572204661696c656400000000000000000000000000000000005f82015250565b5f6110d7600f83610ecd565b91506110e2826110a3565b602082019050919050565b5f6020820190508181035f830152611104816110cb565b9050919050565b5f61111582610dd3565b915061112083610dd3565b925082820190508082111561113857611137610fad565b5b92915050565b5f6060820190506111515f83018661100d565b61115e602083018561100d565b61116b6040830184610ddc565b949350505050565b7f204e6f7420686176696e6720616e7920726577617264730000000000000000005f82015250565b5f6111a7601783610ecd565b91506111b282611173565b602082019050919050565b5f6020820190508181035f8301526111d48161119b565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f61120f601f83610ecd565b915061121a826111db565b602082019050919050565b5f6020820190508181035f83015261123c81611203565b9050919050565b5f61124d82610dd3565b915061125883610dd3565b925082820261126681610dd3565b9150828204841483151761127d5761127c610fad565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6112bb82610dd3565b91506112c683610dd3565b9250826112d6576112d5611284565b5b82820490509291505056fea264697066735822122031ded4e8f6c5223a4c50c998401e1e22a0633bdec970ac39de8a04b3a2f9fe9864736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8BFEA439 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xC8F33C91 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0xCD3DAF9D EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0xE6103637 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x269 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x8BFEA439 EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x205 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x700037D EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x60217267 EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0x69EF6EE7 EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x8B876347 EQ PUSH2 0x189 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0xDA8 JUMP JUMPDEST PUSH2 0x287 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x116 SWAP2 SWAP1 PUSH2 0xE2E JUMP JUMPDEST PUSH2 0x29C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x137 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x132 SWAP2 SWAP1 PUSH2 0xDA8 JUMP JUMPDEST PUSH2 0x5A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x144 SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x155 PUSH2 0x5BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x162 SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH2 0x5C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x180 SWAP2 SWAP1 PUSH2 0xEB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19E SWAP2 SWAP1 PUSH2 0xDA8 JUMP JUMPDEST PUSH2 0x5EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0xDA8 JUMP JUMPDEST PUSH2 0x600 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x203 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0xE2E JUMP JUMPDEST PUSH2 0x6AE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20D PUSH2 0x939 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x217 PUSH2 0xBDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x224 SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x235 PUSH2 0xBE0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x242 SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x253 PUSH2 0xC75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x260 SWAP2 SWAP1 PUSH2 0xDEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x271 PUSH2 0xC7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27E SWAP2 SWAP1 PUSH2 0xEB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2A4 PUSH2 0xCA0 JUMP JUMPDEST CALLER PUSH2 0x2AD PUSH2 0xBE0 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH2 0x2C3 DUP2 PUSH2 0x600 JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 DUP3 GT PUSH2 0x38A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0xF27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x40A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x401 SWAP1 PUSH2 0xF8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x41B SWAP2 SWAP1 PUSH2 0xFDA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x46E SWAP2 SWAP1 PUSH2 0xFDA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x516 SWAP3 SWAP2 SWAP1 PUSH2 0x101C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x532 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x556 SWAP2 SWAP1 PUSH2 0x1078 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x598 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58F SWAP1 PUSH2 0x10ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH2 0x5A2 PUSH2 0xCED JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x6A7 PUSH2 0x65B PUSH1 0x8 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x64D PUSH2 0xBE0 JUMP JUMPDEST PUSH2 0xCF6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xD0B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6B6 PUSH2 0xCA0 JUMP JUMPDEST CALLER PUSH2 0x6BF PUSH2 0xBE0 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH2 0x6D5 DUP2 PUSH2 0x600 JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 DUP3 GT PUSH2 0x79C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x793 SWAP1 PUSH2 0xF27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7AD SWAP2 SWAP1 PUSH2 0x110B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x800 SWAP2 SWAP1 PUSH2 0x110B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x113E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8C6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8EA SWAP2 SWAP1 PUSH2 0x1078 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x92C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x923 SWAP1 PUSH2 0x10ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH2 0x936 PUSH2 0xCED JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x941 PUSH2 0xCA0 JUMP JUMPDEST CALLER PUSH2 0x94A PUSH2 0xBE0 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH2 0x960 DUP2 PUSH2 0x600 JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0xA68 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA5F SWAP1 PUSH2 0x11BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFC30CDDEA38E2BF4D6EA7D3F9ED3B6AD7F176419F4963BD81318067A4AEE73FE PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4B SWAP3 SWAP2 SWAP1 PUSH2 0x101C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB67 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB8B SWAP2 SWAP1 PUSH2 0x1078 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xBCD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC4 SWAP1 PUSH2 0x10ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP PUSH2 0xBD8 PUSH2 0xCED JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x3 SLOAD SUB PUSH2 0xBF4 JUMPI PUSH1 0x4 SLOAD SWAP1 POP PUSH2 0xC72 JUMP JUMPDEST PUSH0 PUSH2 0xC0A PUSH1 0x5 SLOAD TIMESTAMP PUSH2 0xCF6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xC28 DUP3 PUSH8 0xDE0B6B3A7640000 PUSH2 0xD0B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xC6D PUSH1 0x3 SLOAD PUSH2 0xC5F PUSH2 0xC4E PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0xD0B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xD20 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xD35 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0xCE4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCDB SWAP1 PUSH2 0x1225 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xD03 SWAP2 SWAP1 PUSH2 0xFDA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xD18 SWAP2 SWAP1 PUSH2 0x1243 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xD2D SWAP2 SWAP1 PUSH2 0x110B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xD42 SWAP2 SWAP1 PUSH2 0x12B1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD77 DUP3 PUSH2 0xD4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD87 DUP2 PUSH2 0xD6D JUMP JUMPDEST DUP2 EQ PUSH2 0xD91 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDA2 DUP2 PUSH2 0xD7E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDBD JUMPI PUSH2 0xDBC PUSH2 0xD4A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDCA DUP5 DUP3 DUP6 ADD PUSH2 0xD94 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDE5 DUP2 PUSH2 0xDD3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDFE PUSH0 DUP4 ADD DUP5 PUSH2 0xDDC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE0D DUP2 PUSH2 0xDD3 JUMP JUMPDEST DUP2 EQ PUSH2 0xE17 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE28 DUP2 PUSH2 0xE04 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE43 JUMPI PUSH2 0xE42 PUSH2 0xD4A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE50 DUP5 DUP3 DUP6 ADD PUSH2 0xE1A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE7C PUSH2 0xE77 PUSH2 0xE72 DUP5 PUSH2 0xD4E JUMP JUMPDEST PUSH2 0xE59 JUMP JUMPDEST PUSH2 0xD4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE8D DUP3 PUSH2 0xE62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE9E DUP3 PUSH2 0xE83 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEAE DUP2 PUSH2 0xE94 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEC7 PUSH0 DUP4 ADD DUP5 PUSH2 0xEA5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF11 PUSH1 0x1D DUP4 PUSH2 0xECD JUMP JUMPDEST SWAP2 POP PUSH2 0xF1C DUP3 PUSH2 0xEDD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF3E DUP2 PUSH2 0xF05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374616B656E6420616D6F756E74206973206E6F7420656E6F75676800000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF79 PUSH1 0x1C DUP4 PUSH2 0xECD JUMP JUMPDEST SWAP2 POP PUSH2 0xF84 DUP3 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFA6 DUP2 PUSH2 0xF6D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xFE4 DUP3 PUSH2 0xDD3 JUMP JUMPDEST SWAP2 POP PUSH2 0xFEF DUP4 PUSH2 0xDD3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1007 JUMPI PUSH2 0x1006 PUSH2 0xFAD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1016 DUP2 PUSH2 0xD6D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x102F PUSH0 DUP4 ADD DUP6 PUSH2 0x100D JUMP JUMPDEST PUSH2 0x103C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDDC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1057 DUP2 PUSH2 0x1043 JUMP JUMPDEST DUP2 EQ PUSH2 0x1061 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1072 DUP2 PUSH2 0x104E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x108D JUMPI PUSH2 0x108C PUSH2 0xD4A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x109A DUP5 DUP3 DUP6 ADD PUSH2 0x1064 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572204661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10D7 PUSH1 0xF DUP4 PUSH2 0xECD JUMP JUMPDEST SWAP2 POP PUSH2 0x10E2 DUP3 PUSH2 0x10A3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1104 DUP2 PUSH2 0x10CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1115 DUP3 PUSH2 0xDD3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1120 DUP4 PUSH2 0xDD3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1138 JUMPI PUSH2 0x1137 PUSH2 0xFAD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1151 PUSH0 DUP4 ADD DUP7 PUSH2 0x100D JUMP JUMPDEST PUSH2 0x115E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x100D JUMP JUMPDEST PUSH2 0x116B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xDDC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x204E6F7420686176696E6720616E792072657761726473000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x11A7 PUSH1 0x17 DUP4 PUSH2 0xECD JUMP JUMPDEST SWAP2 POP PUSH2 0x11B2 DUP3 PUSH2 0x1173 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11D4 DUP2 PUSH2 0x119B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x120F PUSH1 0x1F DUP4 PUSH2 0xECD JUMP JUMPDEST SWAP2 POP PUSH2 0x121A DUP3 PUSH2 0x11DB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x123C DUP2 PUSH2 0x1203 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x124D DUP3 PUSH2 0xDD3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1258 DUP4 PUSH2 0xDD3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1266 DUP2 PUSH2 0xDD3 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x127D JUMPI PUSH2 0x127C PUSH2 0xFAD JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x12BB DUP3 PUSH2 0xDD3 JUMP JUMPDEST SWAP2 POP PUSH2 0x12C6 DUP4 PUSH2 0xDD3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x12D6 JUMPI PUSH2 0x12D5 PUSH2 0x1284 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE 0xDE 0xD4 0xE8 0xF6 0xC5 0x22 GASPRICE 0x4C POP 0xC9 SWAP9 BLOCKHASH 0x1E 0x1E 0x22 LOG0 PUSH4 0x3BDEC970 0xAC CODECOPY 0xDE DUP11 DIV 0xB3 LOG2 0xF9 INVALID SWAP9 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "236:2825:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;592:37;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2227:460;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;543:43;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;375:42;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;279:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;635:52;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1662:163;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:390;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2693:366;;;:::i;:::-;;507:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1307:349;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;465:36;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;311:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;592:37;;;;;;;;;;;;;;;;;:::o;2227:460::-;2261:21:0;:19;:21::i;:::-;2293:10:3::1;1119:16;:14;:16::i;:::-;1096:20;:39;;;;1162:15;1145:14;:32;;;;1202:19;1216:4;1202:13;:19::i;:::-;1187:7;:13;1195:4;1187:13;;;;;;;;;;;;;;;:34;;;;1262:20;;1231:22;:28;1254:4;1231:28;;;;;;;;;;;;;;;:51;;;;2331:1:::2;2322:6;:10;2314:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;2410:6;2383:13;:25;2397:10;2383:25;;;;;;;;;;;;;;;;:33;;2375:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2477:6;2458:17;;:25;;;;;;;:::i;:::-;;;;;;;;2520:6;2493:13;:25;2507:10;2493:25;;;;;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;;;;;2563:6;2551:10;2541:29;;;;;;;;;;;;2580:12;2595;;;;;;;;;;;:21;;;2617:10;2628:6;2595:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2580:55;;2654:7;2646:34;;;;;;;;;;;;:::i;:::-;;;;;;;;;2304:383;2292:1:0::1;2303:20:::0;:18;:20::i;:::-;2227:460:3;:::o;543:43::-;;;;;;;;;;;;;;;;;:::o;375:42::-;413:4;375:42;:::o;279:26::-;;;;;;;;;;;;;:::o;635:52::-;;;;;;;;;;;;;;;;;:::o;1662:163::-;1719:4;1742:75;1766:50;1787:22;:28;1810:4;1787:28;;;;;;;;;;;;;;;;1766:16;:14;:16::i;:::-;:20;;:50;;;;:::i;:::-;1742:13;:19;1756:4;1742:19;;;;;;;;;;;;;;;;:23;;:75;;;;:::i;:::-;1734:84;;1662:163;;;:::o;1831:390::-;2261:21:0;:19;:21::i;:::-;1894:10:3::1;1119:16;:14;:16::i;:::-;1096:20;:39;;;;1162:15;1145:14;:32;;;;1202:19;1216:4;1202:13;:19::i;:::-;1187:7;:13;1195:4;1187:13;;;;;;;;;;;;;;;:34;;;;1262:20;;1231:22;:28;1254:4;1231:28;;;;;;;;;;;;;;;:51;;;;1932:1:::2;1923:6;:10;1915:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;1995:6;1976:17;;:25;;;;;;;:::i;:::-;;;;;;;;2038:6;2011:13;:25;2025:10;2011:25;;;;;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;;;;;2078:6;2066:10;2059:26;;;;;;;;;;;;2095:12;2110;;;;;;;;;;;:25;;;2136:10;2156:4;2163:6;2110:60;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2095:75;;2188:7;2180:34;;;;;;;;;;;;:::i;:::-;;;;;;;;;1905:316;2292:1:0::1;2303:20:::0;:18;:20::i;:::-;1831:390:3;:::o;2693:366::-;2261:21:0;:19;:21::i;:::-;2751:10:3::1;1119:16;:14;:16::i;:::-;1096:20;:39;;;;1162:15;1145:14;:32;;;;1202:19;1216:4;1202:13;:19::i;:::-;1187:7;:13;1195:4;1187:13;;;;;;;;;;;;;;;:34;;;;1262:20;;1231:22;:28;1254:4;1231:28;;;;;;;;;;;;;;;:51;;;;2772:11:::2;2786:7;:19;2794:10;2786:19;;;;;;;;;;;;;;;;2772:33;;2832:1;2823:6;:10;2815:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;2893:1;2871:7;:19;2879:10;2871:19;;;;;;;;;;;;;;;:23;;;;2936:6;2924:10;2909:34;;;;;;;;;;;;2953:12;2968:11;;;;;;;;;;;:20;;;2989:10;3000:6;2968:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2953:54;;3026:7;3018:34;;;;;;;;;;;;:::i;:::-;;;;;;;;;2762:297;;2292:1:0::1;2303:20:::0;:18;:20::i;:::-;2693:366:3:o;507:29::-;;;;:::o;1307:349::-;1353:4;1393:1;1372:17;;:22;1369:78;;1416:20;;1409:27;;;;1369:78;1456:14;1472:35;1492:14;;1472:15;:19;;:35;;;;:::i;:::-;1456:51;;1517:16;1536:26;1552:9;413:4;1536:15;;:26;;;;:::i;:::-;1517:45;;1579:70;1631:17;;1579:47;1604:21;1620:4;1604:11;:15;;:21;;;;:::i;:::-;1579:20;;:24;;:47;;;;:::i;:::-;:51;;:70;;;;:::i;:::-;1572:77;;;;1307:349;;:::o;465:36::-;;;;:::o;311:25::-;;;;;;;;;;;;;:::o;2336:287:0:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2629:209::-;1716:1;2809:7;:22;;;;2629:209::o;3122:96:2:-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;3465:::-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;2755:::-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;88:117:4:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:329::-;1943:6;1992:2;1980:9;1971:7;1967:23;1963:32;1960:119;;;1998:79;;:::i;:::-;1960:119;2118:1;2143:53;2188:7;2179:6;2168:9;2164:22;2143:53;:::i;:::-;2133:63;;2089:117;1884:329;;;;:::o;2219:60::-;2247:3;2268:5;2261:12;;2219:60;;;:::o;2285:142::-;2335:9;2368:53;2386:34;2395:24;2413:5;2395:24;:::i;:::-;2386:34;:::i;:::-;2368:53;:::i;:::-;2355:66;;2285:142;;;:::o;2433:126::-;2483:9;2516:37;2547:5;2516:37;:::i;:::-;2503:50;;2433:126;;;:::o;2565:140::-;2629:9;2662:37;2693:5;2662:37;:::i;:::-;2649:50;;2565:140;;;:::o;2711:159::-;2812:51;2857:5;2812:51;:::i;:::-;2807:3;2800:64;2711:159;;:::o;2876:250::-;2983:4;3021:2;3010:9;3006:18;2998:26;;3034:85;3116:1;3105:9;3101:17;3092:6;3034:85;:::i;:::-;2876:250;;;;:::o;3132:169::-;3216:11;3250:6;3245:3;3238:19;3290:4;3285:3;3281:14;3266:29;;3132:169;;;;:::o;3307:179::-;3447:31;3443:1;3435:6;3431:14;3424:55;3307:179;:::o;3492:366::-;3634:3;3655:67;3719:2;3714:3;3655:67;:::i;:::-;3648:74;;3731:93;3820:3;3731:93;:::i;:::-;3849:2;3844:3;3840:12;3833:19;;3492:366;;;:::o;3864:419::-;4030:4;4068:2;4057:9;4053:18;4045:26;;4117:9;4111:4;4107:20;4103:1;4092:9;4088:17;4081:47;4145:131;4271:4;4145:131;:::i;:::-;4137:139;;3864:419;;;:::o;4289:178::-;4429:30;4425:1;4417:6;4413:14;4406:54;4289:178;:::o;4473:366::-;4615:3;4636:67;4700:2;4695:3;4636:67;:::i;:::-;4629:74;;4712:93;4801:3;4712:93;:::i;:::-;4830:2;4825:3;4821:12;4814:19;;4473:366;;;:::o;4845:419::-;5011:4;5049:2;5038:9;5034:18;5026:26;;5098:9;5092:4;5088:20;5084:1;5073:9;5069:17;5062:47;5126:131;5252:4;5126:131;:::i;:::-;5118:139;;4845:419;;;:::o;5270:180::-;5318:77;5315:1;5308:88;5415:4;5412:1;5405:15;5439:4;5436:1;5429:15;5456:194;5496:4;5516:20;5534:1;5516:20;:::i;:::-;5511:25;;5550:20;5568:1;5550:20;:::i;:::-;5545:25;;5594:1;5591;5587:9;5579:17;;5618:1;5612:4;5609:11;5606:37;;;5623:18;;:::i;:::-;5606:37;5456:194;;;;:::o;5656:118::-;5743:24;5761:5;5743:24;:::i;:::-;5738:3;5731:37;5656:118;;:::o;5780:332::-;5901:4;5939:2;5928:9;5924:18;5916:26;;5952:71;6020:1;6009:9;6005:17;5996:6;5952:71;:::i;:::-;6033:72;6101:2;6090:9;6086:18;6077:6;6033:72;:::i;:::-;5780:332;;;;;:::o;6118:90::-;6152:7;6195:5;6188:13;6181:21;6170:32;;6118:90;;;:::o;6214:116::-;6284:21;6299:5;6284:21;:::i;:::-;6277:5;6274:32;6264:60;;6320:1;6317;6310:12;6264:60;6214:116;:::o;6336:137::-;6390:5;6421:6;6415:13;6406:22;;6437:30;6461:5;6437:30;:::i;:::-;6336:137;;;;:::o;6479:345::-;6546:6;6595:2;6583:9;6574:7;6570:23;6566:32;6563:119;;;6601:79;;:::i;:::-;6563:119;6721:1;6746:61;6799:7;6790:6;6779:9;6775:22;6746:61;:::i;:::-;6736:71;;6692:125;6479:345;;;;:::o;6830:165::-;6970:17;6966:1;6958:6;6954:14;6947:41;6830:165;:::o;7001:366::-;7143:3;7164:67;7228:2;7223:3;7164:67;:::i;:::-;7157:74;;7240:93;7329:3;7240:93;:::i;:::-;7358:2;7353:3;7349:12;7342:19;;7001:366;;;:::o;7373:419::-;7539:4;7577:2;7566:9;7562:18;7554:26;;7626:9;7620:4;7616:20;7612:1;7601:9;7597:17;7590:47;7654:131;7780:4;7654:131;:::i;:::-;7646:139;;7373:419;;;:::o;7798:191::-;7838:3;7857:20;7875:1;7857:20;:::i;:::-;7852:25;;7891:20;7909:1;7891:20;:::i;:::-;7886:25;;7934:1;7931;7927:9;7920:16;;7955:3;7952:1;7949:10;7946:36;;;7962:18;;:::i;:::-;7946:36;7798:191;;;;:::o;7995:442::-;8144:4;8182:2;8171:9;8167:18;8159:26;;8195:71;8263:1;8252:9;8248:17;8239:6;8195:71;:::i;:::-;8276:72;8344:2;8333:9;8329:18;8320:6;8276:72;:::i;:::-;8358;8426:2;8415:9;8411:18;8402:6;8358:72;:::i;:::-;7995:442;;;;;;:::o;8443:173::-;8583:25;8579:1;8571:6;8567:14;8560:49;8443:173;:::o;8622:366::-;8764:3;8785:67;8849:2;8844:3;8785:67;:::i;:::-;8778:74;;8861:93;8950:3;8861:93;:::i;:::-;8979:2;8974:3;8970:12;8963:19;;8622:366;;;:::o;8994:419::-;9160:4;9198:2;9187:9;9183:18;9175:26;;9247:9;9241:4;9237:20;9233:1;9222:9;9218:17;9211:47;9275:131;9401:4;9275:131;:::i;:::-;9267:139;;8994:419;;;:::o;9419:181::-;9559:33;9555:1;9547:6;9543:14;9536:57;9419:181;:::o;9606:366::-;9748:3;9769:67;9833:2;9828:3;9769:67;:::i;:::-;9762:74;;9845:93;9934:3;9845:93;:::i;:::-;9963:2;9958:3;9954:12;9947:19;;9606:366;;;:::o;9978:419::-;10144:4;10182:2;10171:9;10167:18;10159:26;;10231:9;10225:4;10221:20;10217:1;10206:9;10202:17;10195:47;10259:131;10385:4;10259:131;:::i;:::-;10251:139;;9978:419;;;:::o;10403:410::-;10443:7;10466:20;10484:1;10466:20;:::i;:::-;10461:25;;10500:20;10518:1;10500:20;:::i;:::-;10495:25;;10555:1;10552;10548:9;10577:30;10595:11;10577:30;:::i;:::-;10566:41;;10756:1;10747:7;10743:15;10740:1;10737:22;10717:1;10710:9;10690:83;10667:139;;10786:18;;:::i;:::-;10667:139;10451:362;10403:410;;;;:::o;10819:180::-;10867:77;10864:1;10857:88;10964:4;10961:1;10954:15;10988:4;10985:1;10978:15;11005:185;11045:1;11062:20;11080:1;11062:20;:::i;:::-;11057:25;;11096:20;11114:1;11096:20;:::i;:::-;11091:25;;11135:1;11125:35;;11140:18;;:::i;:::-;11125:35;11182:1;11179;11175:9;11170:14;;11005:185;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "977400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"Reward_Rate()": "392",
								"claimReward()": "infinite",
								"lastUpdateTime()": "2447",
								"rewardPerToken()": "infinite",
								"rewardToken()": "infinite",
								"rewardperTokenStored()": "2491",
								"rewards(address)": "2803",
								"rewardsEarned(address)": "infinite",
								"stake(uint256)": "infinite",
								"stakedBalance(address)": "2847",
								"stakingToken()": "infinite",
								"userRewardPerTokenPaid(address)": "2913",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 236,
									"end": 3061,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 236,
									"end": 3061,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 236,
									"end": 3061,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 892,
									"end": 1045,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 892,
									"end": 1045,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 892,
									"end": 1045,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 892,
									"end": 1045,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 892,
									"end": 1045,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 892,
									"end": 1045,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 892,
									"end": 1045,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 892,
									"end": 1045,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 892,
									"end": 1045,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 892,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 892,
									"end": 1045,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 892,
									"end": 1045,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 892,
									"end": 1045,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 892,
									"end": 1045,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 892,
									"end": 1045,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 892,
									"end": 1045,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 892,
									"end": 1045,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 892,
									"end": 1045,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 892,
									"end": 1045,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 892,
									"end": 1045,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 892,
									"end": 1045,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 892,
									"end": 1045,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 892,
									"end": 1045,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 892,
									"end": 1045,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 892,
									"end": 1045,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 892,
									"end": 1045,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 892,
									"end": 1045,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 892,
									"end": 1045,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 892,
									"end": 1045,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 892,
									"end": 1045,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 892,
									"end": 1045,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 892,
									"end": 1045,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 892,
									"end": 1045,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 892,
									"end": 1045,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 892,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 980,
									"end": 993,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 958,
									"end": 970,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 958,
									"end": 970,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 958,
									"end": 994,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 958,
									"end": 994,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 958,
									"end": 994,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 958,
									"end": 994,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 958,
									"end": 994,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 958,
									"end": 994,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 958,
									"end": 994,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 958,
									"end": 994,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 958,
									"end": 994,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 958,
									"end": 994,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 958,
									"end": 994,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 958,
									"end": 994,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 958,
									"end": 994,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 958,
									"end": 994,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 958,
									"end": 994,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 958,
									"end": 994,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 958,
									"end": 994,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 958,
									"end": 994,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1025,
									"end": 1037,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1004,
									"end": 1015,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1004,
									"end": 1015,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1004,
									"end": 1038,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1004,
									"end": 1038,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1004,
									"end": 1038,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1004,
									"end": 1038,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1004,
									"end": 1038,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1004,
									"end": 1038,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1004,
									"end": 1038,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1004,
									"end": 1038,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1004,
									"end": 1038,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1004,
									"end": 1038,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1004,
									"end": 1038,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1004,
									"end": 1038,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1004,
									"end": 1038,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1004,
									"end": 1038,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1004,
									"end": 1038,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1004,
									"end": 1038,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1004,
									"end": 1038,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1004,
									"end": 1038,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 892,
									"end": 1045,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 892,
									"end": 1045,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 236,
									"end": 3061,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 236,
									"end": 3061,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 236,
									"end": 3061,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 236,
									"end": 3061,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 236,
									"end": 3061,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 236,
									"end": 3061,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 236,
									"end": 3061,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 236,
									"end": 3061,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 236,
									"end": 3061,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 236,
									"end": 3061,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 236,
									"end": 3061,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122031ded4e8f6c5223a4c50c998401e1e22a0633bdec970ac39de8a04b3a2f9fe9864736f6c63430008140033",
									".code": [
										{
											"begin": 236,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "8BFEA439"
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "C8F33C91"
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "C8F33C91"
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "CD3DAF9D"
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "E6103637"
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "F7C618C1"
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "8BFEA439"
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "A694FC3A"
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "B88A802F"
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "700037D"
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "2E1A7D4D"
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "60217267"
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "69EF6EE7"
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "72F702F3"
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "8B876347"
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 236,
											"end": 3061,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 592,
											"end": 629,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 592,
											"end": 629,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 592,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 592,
											"end": 629,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 592,
											"end": 629,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 592,
											"end": 629,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 592,
											"end": 629,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 592,
											"end": 629,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 592,
											"end": 629,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 592,
											"end": 629,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 592,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 592,
											"end": 629,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 592,
											"end": 629,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 592,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 592,
											"end": 629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 592,
											"end": 629,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 592,
											"end": 629,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 592,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 592,
											"end": 629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 592,
											"end": 629,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 592,
											"end": 629,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 592,
											"end": 629,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 592,
											"end": 629,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 592,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 592,
											"end": 629,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 592,
											"end": 629,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 592,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 592,
											"end": 629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 592,
											"end": 629,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 592,
											"end": 629,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 592,
											"end": 629,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 592,
											"end": 629,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 592,
											"end": 629,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 592,
											"end": 629,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 592,
											"end": 629,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 592,
											"end": 629,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 592,
											"end": 629,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2687,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2227,
											"end": 2687,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2687,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2227,
											"end": 2687,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2227,
											"end": 2687,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2687,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2687,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2687,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2687,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2687,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2687,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 2227,
											"end": 2687,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2687,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2687,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2227,
											"end": 2687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2687,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 2227,
											"end": 2687,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2687,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 2227,
											"end": 2687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2687,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2227,
											"end": 2687,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2687,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 543,
											"end": 586,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 543,
											"end": 586,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 543,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 543,
											"end": 586,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 543,
											"end": 586,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 543,
											"end": 586,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 543,
											"end": 586,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 543,
											"end": 586,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 543,
											"end": 586,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 543,
											"end": 586,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 543,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 543,
											"end": 586,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 543,
											"end": 586,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 543,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 543,
											"end": 586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 543,
											"end": 586,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 543,
											"end": 586,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 543,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 543,
											"end": 586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 543,
											"end": 586,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 543,
											"end": 586,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 543,
											"end": 586,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 543,
											"end": 586,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 543,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 543,
											"end": 586,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 543,
											"end": 586,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 543,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 543,
											"end": 586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 543,
											"end": 586,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 543,
											"end": 586,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 543,
											"end": 586,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 543,
											"end": 586,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 543,
											"end": 586,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 543,
											"end": 586,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 543,
											"end": 586,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 543,
											"end": 586,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 543,
											"end": 586,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 375,
											"end": 417,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 375,
											"end": 417,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 375,
											"end": 417,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 375,
											"end": 417,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 375,
											"end": 417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 375,
											"end": 417,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 375,
											"end": 417,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 375,
											"end": 417,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 375,
											"end": 417,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 375,
											"end": 417,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 375,
											"end": 417,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 375,
											"end": 417,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 375,
											"end": 417,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 375,
											"end": 417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 375,
											"end": 417,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 375,
											"end": 417,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 375,
											"end": 417,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 375,
											"end": 417,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 375,
											"end": 417,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 375,
											"end": 417,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 375,
											"end": 417,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 375,
											"end": 417,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 375,
											"end": 417,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 279,
											"end": 305,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 279,
											"end": 305,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 279,
											"end": 305,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 279,
											"end": 305,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 279,
											"end": 305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 279,
											"end": 305,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 279,
											"end": 305,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 279,
											"end": 305,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 279,
											"end": 305,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 279,
											"end": 305,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 279,
											"end": 305,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 279,
											"end": 305,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 279,
											"end": 305,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 279,
											"end": 305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 279,
											"end": 305,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 279,
											"end": 305,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 279,
											"end": 305,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 279,
											"end": 305,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 279,
											"end": 305,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 279,
											"end": 305,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 279,
											"end": 305,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 279,
											"end": 305,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 279,
											"end": 305,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 635,
											"end": 687,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 635,
											"end": 687,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 635,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 635,
											"end": 687,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 635,
											"end": 687,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 635,
											"end": 687,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 635,
											"end": 687,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 635,
											"end": 687,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 635,
											"end": 687,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 635,
											"end": 687,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 635,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 635,
											"end": 687,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 635,
											"end": 687,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 635,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 635,
											"end": 687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 635,
											"end": 687,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 635,
											"end": 687,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 635,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 635,
											"end": 687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 635,
											"end": 687,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 635,
											"end": 687,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 635,
											"end": 687,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 635,
											"end": 687,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 635,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 635,
											"end": 687,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 635,
											"end": 687,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 635,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 635,
											"end": 687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 635,
											"end": 687,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 635,
											"end": 687,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 635,
											"end": 687,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 635,
											"end": 687,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 635,
											"end": 687,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 635,
											"end": 687,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 635,
											"end": 687,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 635,
											"end": 687,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 635,
											"end": 687,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1662,
											"end": 1825,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1662,
											"end": 1825,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1662,
											"end": 1825,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1662,
											"end": 1825,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1662,
											"end": 1825,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1662,
											"end": 1825,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1662,
											"end": 1825,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1662,
											"end": 1825,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1662,
											"end": 1825,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1662,
											"end": 1825,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1662,
											"end": 1825,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1662,
											"end": 1825,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1662,
											"end": 1825,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1662,
											"end": 1825,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1662,
											"end": 1825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1662,
											"end": 1825,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1662,
											"end": 1825,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1662,
											"end": 1825,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1662,
											"end": 1825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1662,
											"end": 1825,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1662,
											"end": 1825,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1662,
											"end": 1825,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1662,
											"end": 1825,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1662,
											"end": 1825,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1662,
											"end": 1825,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1662,
											"end": 1825,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1662,
											"end": 1825,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1662,
											"end": 1825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1662,
											"end": 1825,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1662,
											"end": 1825,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1662,
											"end": 1825,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1662,
											"end": 1825,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1662,
											"end": 1825,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1662,
											"end": 1825,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1662,
											"end": 1825,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1662,
											"end": 1825,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1662,
											"end": 1825,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 2221,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1831,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1831,
											"end": 2221,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1831,
											"end": 2221,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 2221,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 2221,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 2221,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 2221,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 2221,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1831,
											"end": 2221,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 2221,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1831,
											"end": 2221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 2221,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1831,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1831,
											"end": 2221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 2221,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1831,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 2221,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2693,
											"end": 3059,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2693,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2693,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2693,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2693,
											"end": 3059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2693,
											"end": 3059,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2693,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2693,
											"end": 3059,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 507,
											"end": 536,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 507,
											"end": 536,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 507,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 507,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 507,
											"end": 536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 507,
											"end": 536,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 507,
											"end": 536,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 507,
											"end": 536,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 536,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 507,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 507,
											"end": 536,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 507,
											"end": 536,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 507,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 507,
											"end": 536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 507,
											"end": 536,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 507,
											"end": 536,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 507,
											"end": 536,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 536,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 507,
											"end": 536,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 507,
											"end": 536,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 507,
											"end": 536,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 507,
											"end": 536,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 507,
											"end": 536,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1307,
											"end": 1656,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1307,
											"end": 1656,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1307,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1307,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1307,
											"end": 1656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1307,
											"end": 1656,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1307,
											"end": 1656,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1307,
											"end": 1656,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1307,
											"end": 1656,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1307,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1307,
											"end": 1656,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1307,
											"end": 1656,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1307,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1307,
											"end": 1656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1307,
											"end": 1656,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1307,
											"end": 1656,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1307,
											"end": 1656,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1307,
											"end": 1656,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1307,
											"end": 1656,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1307,
											"end": 1656,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1307,
											"end": 1656,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1307,
											"end": 1656,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1307,
											"end": 1656,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 465,
											"end": 501,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 465,
											"end": 501,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 465,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 465,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 465,
											"end": 501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 465,
											"end": 501,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 465,
											"end": 501,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 465,
											"end": 501,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 465,
											"end": 501,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 465,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 465,
											"end": 501,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 465,
											"end": 501,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 465,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 465,
											"end": 501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 465,
											"end": 501,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 465,
											"end": 501,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 465,
											"end": 501,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 465,
											"end": 501,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 465,
											"end": 501,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 465,
											"end": 501,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 465,
											"end": 501,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 465,
											"end": 501,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 465,
											"end": 501,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 311,
											"end": 336,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 311,
											"end": 336,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 311,
											"end": 336,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 311,
											"end": 336,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 311,
											"end": 336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 311,
											"end": 336,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 311,
											"end": 336,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 311,
											"end": 336,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 311,
											"end": 336,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 311,
											"end": 336,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 311,
											"end": 336,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 311,
											"end": 336,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 311,
											"end": 336,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 311,
											"end": 336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 311,
											"end": 336,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 311,
											"end": 336,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 311,
											"end": 336,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 311,
											"end": 336,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 311,
											"end": 336,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 311,
											"end": 336,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 311,
											"end": 336,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 311,
											"end": 336,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 311,
											"end": 336,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 592,
											"end": 629,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 592,
											"end": 629,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 592,
											"end": 629,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 592,
											"end": 629,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 592,
											"end": 629,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 592,
											"end": 629,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 592,
											"end": 629,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 629,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 592,
											"end": 629,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 592,
											"end": 629,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 629,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 592,
											"end": 629,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 629,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 592,
											"end": 629,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 592,
											"end": 629,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 592,
											"end": 629,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 592,
											"end": 629,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 592,
											"end": 629,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 592,
											"end": 629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2687,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 2227,
											"end": 2687,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2303,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1119,
											"end": 1135,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1119,
											"end": 1133,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1119,
											"end": 1135,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1119,
											"end": 1135,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1119,
											"end": 1135,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1096,
											"end": 1116,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1096,
											"end": 1135,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1096,
											"end": 1135,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1096,
											"end": 1135,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1096,
											"end": 1135,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1162,
											"end": 1177,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 1145,
											"end": 1159,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1145,
											"end": 1177,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1145,
											"end": 1177,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1145,
											"end": 1177,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1145,
											"end": 1177,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1221,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1216,
											"end": 1220,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1215,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1202,
											"end": 1221,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1221,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1202,
											"end": 1221,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1187,
											"end": 1200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1195,
											"end": 1199,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1187,
											"end": 1200,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1187,
											"end": 1200,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1200,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1200,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1187,
											"end": 1200,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1200,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1200,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1200,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1187,
											"end": 1200,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1187,
											"end": 1200,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1221,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1221,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1221,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1221,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1262,
											"end": 1282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1262,
											"end": 1282,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1253,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1231,
											"end": 1259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1258,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1231,
											"end": 1259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1231,
											"end": 1259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1259,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1259,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1259,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1259,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1231,
											"end": 1259,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1282,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1282,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1282,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1282,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2331,
											"end": 2332,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2322,
											"end": 2328,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2322,
											"end": 2332,
											"modifierDepth": 2,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2314,
											"end": 2365,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2314,
											"end": 2365,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2314,
											"end": 2365,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2314,
											"end": 2365,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2314,
											"end": 2365,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2314,
											"end": 2365,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2314,
											"end": 2365,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2314,
											"end": 2365,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2314,
											"end": 2365,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2314,
											"end": 2365,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 2314,
											"end": 2365,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2314,
											"end": 2365,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2314,
											"end": 2365,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2314,
											"end": 2365,
											"modifierDepth": 2,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 2314,
											"end": 2365,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2314,
											"end": 2365,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2314,
											"end": 2365,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2314,
											"end": 2365,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2314,
											"end": 2365,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2314,
											"end": 2365,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2314,
											"end": 2365,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2314,
											"end": 2365,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2314,
											"end": 2365,
											"modifierDepth": 2,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2314,
											"end": 2365,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2410,
											"end": 2416,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2383,
											"end": 2396,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2383,
											"end": 2408,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2397,
											"end": 2407,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2383,
											"end": 2408,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2383,
											"end": 2408,
											"modifierDepth": 2,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2383,
											"end": 2408,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2383,
											"end": 2408,
											"modifierDepth": 2,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2383,
											"end": 2408,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2383,
											"end": 2408,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2383,
											"end": 2408,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2383,
											"end": 2408,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2383,
											"end": 2408,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2383,
											"end": 2408,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2383,
											"end": 2408,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2383,
											"end": 2408,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2383,
											"end": 2408,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2383,
											"end": 2408,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2383,
											"end": 2408,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2383,
											"end": 2408,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2383,
											"end": 2416,
											"modifierDepth": 2,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2383,
											"end": 2416,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2375,
											"end": 2448,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2375,
											"end": 2448,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2375,
											"end": 2448,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2375,
											"end": 2448,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2375,
											"end": 2448,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2375,
											"end": 2448,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2375,
											"end": 2448,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2375,
											"end": 2448,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2375,
											"end": 2448,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2375,
											"end": 2448,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2375,
											"end": 2448,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2375,
											"end": 2448,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 2375,
											"end": 2448,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2375,
											"end": 2448,
											"modifierDepth": 2,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2375,
											"end": 2448,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2375,
											"end": 2448,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2375,
											"end": 2448,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2375,
											"end": 2448,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2375,
											"end": 2448,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2375,
											"end": 2448,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2375,
											"end": 2448,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2375,
											"end": 2448,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2375,
											"end": 2448,
											"modifierDepth": 2,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2375,
											"end": 2448,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2477,
											"end": 2483,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2475,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2458,
											"end": 2475,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2458,
											"end": 2483,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2483,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2483,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2483,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2458,
											"end": 2483,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2483,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2483,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 2458,
											"end": 2483,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2483,
											"modifierDepth": 2,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2458,
											"end": 2483,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2483,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2483,
											"modifierDepth": 2,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2483,
											"modifierDepth": 2,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2483,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2483,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2483,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2483,
											"modifierDepth": 2,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2520,
											"end": 2526,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2493,
											"end": 2506,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2493,
											"end": 2518,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2507,
											"end": 2517,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2493,
											"end": 2518,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2493,
											"end": 2518,
											"modifierDepth": 2,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2493,
											"end": 2518,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2493,
											"end": 2518,
											"modifierDepth": 2,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2493,
											"end": 2518,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2493,
											"end": 2518,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2493,
											"end": 2518,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2493,
											"end": 2518,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2493,
											"end": 2518,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2493,
											"end": 2518,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2493,
											"end": 2518,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2493,
											"end": 2518,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2493,
											"end": 2518,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2493,
											"end": 2518,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2493,
											"end": 2518,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2493,
											"end": 2518,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2493,
											"end": 2526,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2493,
											"end": 2526,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2493,
											"end": 2526,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2493,
											"end": 2526,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2493,
											"end": 2526,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2493,
											"end": 2526,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2493,
											"end": 2526,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 2493,
											"end": 2526,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2493,
											"end": 2526,
											"modifierDepth": 2,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2493,
											"end": 2526,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2493,
											"end": 2526,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2493,
											"end": 2526,
											"modifierDepth": 2,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2493,
											"end": 2526,
											"modifierDepth": 2,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2493,
											"end": 2526,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2493,
											"end": 2526,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2493,
											"end": 2526,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2493,
											"end": 2526,
											"modifierDepth": 2,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2563,
											"end": 2569,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2551,
											"end": 2561,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 2570,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2570,
											"modifierDepth": 2,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 2570,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5"
										},
										{
											"begin": 2541,
											"end": 2570,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2570,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 2570,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2570,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 2570,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 2570,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 2570,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 2570,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 2570,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2592,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2607,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2595,
											"end": 2607,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2607,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2595,
											"end": 2607,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2607,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2595,
											"end": 2607,
											"modifierDepth": 2,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2616,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2595,
											"end": 2616,
											"modifierDepth": 2,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2616,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 2617,
											"end": 2627,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2628,
											"end": 2634,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2595,
											"end": 2635,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2635,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 2595,
											"end": 2635,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2595,
											"end": 2635,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2635,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2635,
											"modifierDepth": 2,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2654,
											"end": 2661,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2646,
											"end": 2680,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 2646,
											"end": 2680,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2646,
											"end": 2680,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2646,
											"end": 2680,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2646,
											"end": 2680,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2646,
											"end": 2680,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2646,
											"end": 2680,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2646,
											"end": 2680,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2646,
											"end": 2680,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2646,
											"end": 2680,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2646,
											"end": 2680,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2646,
											"end": 2680,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2646,
											"end": 2680,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2646,
											"end": 2680,
											"modifierDepth": 2,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2646,
											"end": 2680,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2646,
											"end": 2680,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2646,
											"end": 2680,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2646,
											"end": 2680,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2646,
											"end": 2680,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2646,
											"end": 2680,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2646,
											"end": 2680,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2646,
											"end": 2680,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2646,
											"end": 2680,
											"modifierDepth": 2,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 2646,
											"end": 2680,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2304,
											"end": 2687,
											"modifierDepth": 2,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2292,
											"end": 2293,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2687,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2227,
											"end": 2687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 543,
											"end": 586,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 543,
											"end": 586,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 543,
											"end": 586,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 543,
											"end": 586,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 543,
											"end": 586,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 543,
											"end": 586,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 543,
											"end": 586,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 543,
											"end": 586,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 543,
											"end": 586,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 543,
											"end": 586,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 543,
											"end": 586,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 543,
											"end": 586,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 543,
											"end": 586,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 543,
											"end": 586,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 543,
											"end": 586,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 543,
											"end": 586,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 543,
											"end": 586,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 543,
											"end": 586,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 543,
											"end": 586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 375,
											"end": 417,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 375,
											"end": 417,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 413,
											"end": 417,
											"name": "PUSH",
											"source": 3,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 375,
											"end": 417,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 375,
											"end": 417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 279,
											"end": 305,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 279,
											"end": 305,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 279,
											"end": 305,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 279,
											"end": 305,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 279,
											"end": 305,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 279,
											"end": 305,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 279,
											"end": 305,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 279,
											"end": 305,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 279,
											"end": 305,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 279,
											"end": 305,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 279,
											"end": 305,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 279,
											"end": 305,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 279,
											"end": 305,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 279,
											"end": 305,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 279,
											"end": 305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 635,
											"end": 687,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 635,
											"end": 687,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 635,
											"end": 687,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 635,
											"end": 687,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 635,
											"end": 687,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 635,
											"end": 687,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 635,
											"end": 687,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 635,
											"end": 687,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 635,
											"end": 687,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 635,
											"end": 687,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 635,
											"end": 687,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 635,
											"end": 687,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 635,
											"end": 687,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 635,
											"end": 687,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 635,
											"end": 687,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 635,
											"end": 687,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 635,
											"end": 687,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 635,
											"end": 687,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 635,
											"end": 687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1662,
											"end": 1825,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1662,
											"end": 1825,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1719,
											"end": 1723,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1742,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1766,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1787,
											"end": 1809,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1787,
											"end": 1815,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1810,
											"end": 1814,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1787,
											"end": 1815,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1787,
											"end": 1815,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1787,
											"end": 1815,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1787,
											"end": 1815,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1787,
											"end": 1815,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1787,
											"end": 1815,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1787,
											"end": 1815,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1787,
											"end": 1815,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1787,
											"end": 1815,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1787,
											"end": 1815,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1787,
											"end": 1815,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1787,
											"end": 1815,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1787,
											"end": 1815,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1787,
											"end": 1815,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1787,
											"end": 1815,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1787,
											"end": 1815,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1782,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1766,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1766,
											"end": 1782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1782,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1766,
											"end": 1782,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1786,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1766,
											"end": 1786,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1816,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1816,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1766,
											"end": 1816,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1816,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1766,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1742,
											"end": 1755,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1742,
											"end": 1761,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1756,
											"end": 1760,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1742,
											"end": 1761,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1742,
											"end": 1761,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1742,
											"end": 1761,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1742,
											"end": 1761,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1742,
											"end": 1761,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1742,
											"end": 1761,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1742,
											"end": 1761,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1742,
											"end": 1761,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1742,
											"end": 1761,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1742,
											"end": 1761,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1742,
											"end": 1761,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1742,
											"end": 1761,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1742,
											"end": 1761,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1742,
											"end": 1761,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1742,
											"end": 1761,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1742,
											"end": 1761,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1742,
											"end": 1765,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1742,
											"end": 1765,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1742,
											"end": 1817,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1742,
											"end": 1817,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1742,
											"end": 1817,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1742,
											"end": 1817,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1742,
											"end": 1817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1742,
											"end": 1817,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1742,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1734,
											"end": 1818,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1734,
											"end": 1818,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1662,
											"end": 1825,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1662,
											"end": 1825,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1662,
											"end": 1825,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1662,
											"end": 1825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 2221,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1831,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1894,
											"end": 1904,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1119,
											"end": 1135,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1119,
											"end": 1133,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1119,
											"end": 1135,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1119,
											"end": 1135,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1119,
											"end": 1135,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1096,
											"end": 1116,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1096,
											"end": 1135,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1096,
											"end": 1135,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1096,
											"end": 1135,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1096,
											"end": 1135,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1162,
											"end": 1177,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 1145,
											"end": 1159,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1145,
											"end": 1177,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1145,
											"end": 1177,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1145,
											"end": 1177,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1145,
											"end": 1177,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1221,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1216,
											"end": 1220,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1215,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1202,
											"end": 1221,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1221,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1202,
											"end": 1221,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1187,
											"end": 1200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1195,
											"end": 1199,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1187,
											"end": 1200,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1187,
											"end": 1200,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1200,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1200,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1187,
											"end": 1200,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1200,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1200,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1200,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1187,
											"end": 1200,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1187,
											"end": 1200,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1221,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1221,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1221,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1221,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1262,
											"end": 1282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1262,
											"end": 1282,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1253,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1231,
											"end": 1259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1258,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1231,
											"end": 1259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1231,
											"end": 1259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1259,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1259,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1259,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1259,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1231,
											"end": 1259,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1282,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1282,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1282,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1282,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 1933,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1923,
											"end": 1929,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1923,
											"end": 1933,
											"modifierDepth": 2,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1915,
											"end": 1966,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1915,
											"end": 1966,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1915,
											"end": 1966,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1915,
											"end": 1966,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1915,
											"end": 1966,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1915,
											"end": 1966,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1915,
											"end": 1966,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1915,
											"end": 1966,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1915,
											"end": 1966,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1915,
											"end": 1966,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 1915,
											"end": 1966,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1915,
											"end": 1966,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1915,
											"end": 1966,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1915,
											"end": 1966,
											"modifierDepth": 2,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 1915,
											"end": 1966,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1915,
											"end": 1966,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1915,
											"end": 1966,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1915,
											"end": 1966,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1915,
											"end": 1966,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1915,
											"end": 1966,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1915,
											"end": 1966,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1915,
											"end": 1966,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1915,
											"end": 1966,
											"modifierDepth": 2,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1915,
											"end": 1966,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1995,
											"end": 2001,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1976,
											"end": 1993,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1976,
											"end": 1993,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1976,
											"end": 2001,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1976,
											"end": 2001,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1976,
											"end": 2001,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1976,
											"end": 2001,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 1976,
											"end": 2001,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1976,
											"end": 2001,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1976,
											"end": 2001,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 1976,
											"end": 2001,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1976,
											"end": 2001,
											"modifierDepth": 2,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 1976,
											"end": 2001,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1976,
											"end": 2001,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1976,
											"end": 2001,
											"modifierDepth": 2,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1976,
											"end": 2001,
											"modifierDepth": 2,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1976,
											"end": 2001,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1976,
											"end": 2001,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1976,
											"end": 2001,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1976,
											"end": 2001,
											"modifierDepth": 2,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2044,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2011,
											"end": 2024,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2011,
											"end": 2036,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2035,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2011,
											"end": 2036,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2011,
											"end": 2036,
											"modifierDepth": 2,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2011,
											"end": 2036,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2011,
											"end": 2036,
											"modifierDepth": 2,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2011,
											"end": 2036,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2011,
											"end": 2036,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2011,
											"end": 2036,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2011,
											"end": 2036,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2011,
											"end": 2036,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2011,
											"end": 2036,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2011,
											"end": 2036,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2011,
											"end": 2036,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2011,
											"end": 2036,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2011,
											"end": 2036,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2036,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2011,
											"end": 2036,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2044,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2011,
											"end": 2044,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2011,
											"end": 2044,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2011,
											"end": 2044,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2011,
											"end": 2044,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2011,
											"end": 2044,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2011,
											"end": 2044,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 2011,
											"end": 2044,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2011,
											"end": 2044,
											"modifierDepth": 2,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2011,
											"end": 2044,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2011,
											"end": 2044,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2011,
											"end": 2044,
											"modifierDepth": 2,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2011,
											"end": 2044,
											"modifierDepth": 2,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2011,
											"end": 2044,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2011,
											"end": 2044,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2011,
											"end": 2044,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2011,
											"end": 2044,
											"modifierDepth": 2,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2078,
											"end": 2084,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2066,
											"end": 2076,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2059,
											"end": 2085,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2059,
											"end": 2085,
											"modifierDepth": 2,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2059,
											"end": 2085,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 2059,
											"end": 2085,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2059,
											"end": 2085,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2059,
											"end": 2085,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2059,
											"end": 2085,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2059,
											"end": 2085,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2059,
											"end": 2085,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2059,
											"end": 2085,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2059,
											"end": 2085,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2059,
											"end": 2085,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 2095,
											"end": 2107,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2110,
											"end": 2122,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2110,
											"end": 2122,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2110,
											"end": 2122,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2122,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2122,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2122,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2110,
											"end": 2122,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2122,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2122,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2122,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2110,
											"end": 2122,
											"modifierDepth": 2,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2135,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2110,
											"end": 2135,
											"modifierDepth": 2,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2135,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 2136,
											"end": 2146,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2160,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 2163,
											"end": 2169,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 2110,
											"end": 2170,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2110,
											"end": 2170,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 2110,
											"end": 2170,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 2110,
											"end": 2170,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2095,
											"end": 2170,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2095,
											"end": 2170,
											"modifierDepth": 2,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2188,
											"end": 2195,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2180,
											"end": 2214,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 2180,
											"end": 2214,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2180,
											"end": 2214,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2180,
											"end": 2214,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2180,
											"end": 2214,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2180,
											"end": 2214,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2180,
											"end": 2214,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2180,
											"end": 2214,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2180,
											"end": 2214,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2180,
											"end": 2214,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 2180,
											"end": 2214,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2180,
											"end": 2214,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2180,
											"end": 2214,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2180,
											"end": 2214,
											"modifierDepth": 2,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 2180,
											"end": 2214,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2180,
											"end": 2214,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2180,
											"end": 2214,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2180,
											"end": 2214,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2180,
											"end": 2214,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2180,
											"end": 2214,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2180,
											"end": 2214,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2180,
											"end": 2214,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2180,
											"end": 2214,
											"modifierDepth": 2,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 2180,
											"end": 2214,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1905,
											"end": 2221,
											"modifierDepth": 2,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2292,
											"end": 2293,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 2221,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 2221,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2693,
											"end": 3059,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2693,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 2761,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1119,
											"end": 1135,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1119,
											"end": 1133,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1119,
											"end": 1135,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1119,
											"end": 1135,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1119,
											"end": 1135,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1096,
											"end": 1116,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1096,
											"end": 1135,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1096,
											"end": 1135,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1096,
											"end": 1135,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1096,
											"end": 1135,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1162,
											"end": 1177,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 1145,
											"end": 1159,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1145,
											"end": 1177,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1145,
											"end": 1177,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1145,
											"end": 1177,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1145,
											"end": 1177,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1221,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1216,
											"end": 1220,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1215,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1202,
											"end": 1221,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1221,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1202,
											"end": 1221,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1187,
											"end": 1200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1195,
											"end": 1199,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1187,
											"end": 1200,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1187,
											"end": 1200,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1200,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1200,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1187,
											"end": 1200,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1200,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1200,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1200,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1187,
											"end": 1200,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1187,
											"end": 1200,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1221,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1221,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1221,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1221,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1262,
											"end": 1282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1262,
											"end": 1282,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1253,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1231,
											"end": 1259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1258,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1231,
											"end": 1259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1231,
											"end": 1259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1259,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1259,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1259,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1259,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1231,
											"end": 1259,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1282,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1282,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1282,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1282,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2772,
											"end": 2783,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2786,
											"end": 2793,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 2786,
											"end": 2805,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2794,
											"end": 2804,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2786,
											"end": 2805,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2786,
											"end": 2805,
											"modifierDepth": 2,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2786,
											"end": 2805,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2786,
											"end": 2805,
											"modifierDepth": 2,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2786,
											"end": 2805,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2786,
											"end": 2805,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2786,
											"end": 2805,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2786,
											"end": 2805,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2786,
											"end": 2805,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2786,
											"end": 2805,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2786,
											"end": 2805,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2786,
											"end": 2805,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2786,
											"end": 2805,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2786,
											"end": 2805,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2786,
											"end": 2805,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2786,
											"end": 2805,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2772,
											"end": 2805,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2772,
											"end": 2805,
											"modifierDepth": 2,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2832,
											"end": 2833,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2829,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2823,
											"end": 2833,
											"modifierDepth": 2,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2815,
											"end": 2861,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2815,
											"end": 2861,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2815,
											"end": 2861,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2815,
											"end": 2861,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2815,
											"end": 2861,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2815,
											"end": 2861,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2815,
											"end": 2861,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2815,
											"end": 2861,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2815,
											"end": 2861,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2815,
											"end": 2861,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 2815,
											"end": 2861,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2815,
											"end": 2861,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2815,
											"end": 2861,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2815,
											"end": 2861,
											"modifierDepth": 2,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 2815,
											"end": 2861,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2815,
											"end": 2861,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2815,
											"end": 2861,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2815,
											"end": 2861,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2815,
											"end": 2861,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2815,
											"end": 2861,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2815,
											"end": 2861,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2815,
											"end": 2861,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2815,
											"end": 2861,
											"modifierDepth": 2,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2815,
											"end": 2861,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2893,
											"end": 2894,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2871,
											"end": 2878,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 2871,
											"end": 2890,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2879,
											"end": 2889,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2871,
											"end": 2890,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2871,
											"end": 2890,
											"modifierDepth": 2,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2871,
											"end": 2890,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2871,
											"end": 2890,
											"modifierDepth": 2,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2871,
											"end": 2890,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2871,
											"end": 2890,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2871,
											"end": 2890,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2871,
											"end": 2890,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2871,
											"end": 2890,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2871,
											"end": 2890,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2871,
											"end": 2890,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2871,
											"end": 2890,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2871,
											"end": 2890,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2871,
											"end": 2890,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2871,
											"end": 2890,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2871,
											"end": 2894,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2871,
											"end": 2894,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2871,
											"end": 2894,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2871,
											"end": 2894,
											"modifierDepth": 2,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2936,
											"end": 2942,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2924,
											"end": 2934,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2909,
											"end": 2943,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2909,
											"end": 2943,
											"modifierDepth": 2,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2909,
											"end": 2943,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "FC30CDDEA38E2BF4D6EA7D3F9ED3B6AD7F176419F4963BD81318067A4AEE73FE"
										},
										{
											"begin": 2909,
											"end": 2943,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2909,
											"end": 2943,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2909,
											"end": 2943,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2909,
											"end": 2943,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2909,
											"end": 2943,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2909,
											"end": 2943,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2909,
											"end": 2943,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2909,
											"end": 2943,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2909,
											"end": 2943,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 2953,
											"end": 2965,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2968,
											"end": 2979,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2968,
											"end": 2979,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2968,
											"end": 2979,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 2979,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 2979,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 2979,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2968,
											"end": 2979,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 2979,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 2979,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 2979,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2968,
											"end": 2979,
											"modifierDepth": 2,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 2988,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2968,
											"end": 2988,
											"modifierDepth": 2,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 2988,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 2989,
											"end": 2999,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 3000,
											"end": 3006,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2968,
											"end": 3007,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2968,
											"end": 3007,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 2968,
											"end": 3007,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 2968,
											"end": 3007,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2953,
											"end": 3007,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2953,
											"end": 3007,
											"modifierDepth": 2,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3026,
											"end": 3033,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3052,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 3018,
											"end": 3052,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3052,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3018,
											"end": 3052,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3052,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3018,
											"end": 3052,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3052,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3052,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3018,
											"end": 3052,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3052,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 3018,
											"end": 3052,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3052,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 3018,
											"end": 3052,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3052,
											"modifierDepth": 2,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 3018,
											"end": 3052,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3052,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3018,
											"end": 3052,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3052,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3052,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3052,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3052,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3052,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3018,
											"end": 3052,
											"modifierDepth": 2,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 3018,
											"end": 3052,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2762,
											"end": 3059,
											"modifierDepth": 2,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2762,
											"end": 3059,
											"modifierDepth": 2,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2292,
											"end": 2293,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 3059,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 507,
											"end": 536,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 507,
											"end": 536,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 507,
											"end": 536,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 507,
											"end": 536,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 507,
											"end": 536,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 507,
											"end": 536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1307,
											"end": 1656,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1307,
											"end": 1656,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1353,
											"end": 1357,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1393,
											"end": 1394,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1372,
											"end": 1389,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1372,
											"end": 1389,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1372,
											"end": 1394,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1369,
											"end": 1447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 1369,
											"end": 1447,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1416,
											"end": 1436,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1416,
											"end": 1436,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1369,
											"end": 1447,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 1369,
											"end": 1447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1456,
											"end": 1470,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1472,
											"end": 1507,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 1492,
											"end": 1506,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1492,
											"end": 1506,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1472,
											"end": 1487,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 1472,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1472,
											"end": 1491,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1472,
											"end": 1507,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1472,
											"end": 1507,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1472,
											"end": 1507,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1472,
											"end": 1507,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1472,
											"end": 1507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1472,
											"end": 1507,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 1472,
											"end": 1507,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1456,
											"end": 1507,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1456,
											"end": 1507,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1533,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 1552,
											"end": 1561,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 413,
											"end": 417,
											"name": "PUSH",
											"source": 3,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1536,
											"end": 1551,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1536,
											"end": 1551,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1562,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1562,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1536,
											"end": 1562,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1562,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 1536,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1579,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 1631,
											"end": 1648,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1631,
											"end": 1648,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1579,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 1604,
											"end": 1625,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 1620,
											"end": 1624,
											"name": "PUSH",
											"source": 3,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1604,
											"end": 1615,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1604,
											"end": 1619,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1604,
											"end": 1619,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1604,
											"end": 1625,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1604,
											"end": 1625,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1604,
											"end": 1625,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1604,
											"end": 1625,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1604,
											"end": 1625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1604,
											"end": 1625,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 1604,
											"end": 1625,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1579,
											"end": 1599,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1579,
											"end": 1599,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1579,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 1579,
											"end": 1603,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1579,
											"end": 1626,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1579,
											"end": 1626,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1579,
											"end": 1626,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1579,
											"end": 1626,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1579,
											"end": 1626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1579,
											"end": 1626,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 1579,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1579,
											"end": 1630,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 1579,
											"end": 1630,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1579,
											"end": 1649,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1579,
											"end": 1649,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1579,
											"end": 1649,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1579,
											"end": 1649,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1579,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1579,
											"end": 1649,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 1579,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1572,
											"end": 1649,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1572,
											"end": 1649,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1572,
											"end": 1649,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1572,
											"end": 1649,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1307,
											"end": 1656,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 1307,
											"end": 1656,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1307,
											"end": 1656,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1307,
											"end": 1656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 465,
											"end": 501,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 465,
											"end": 501,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 465,
											"end": 501,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 465,
											"end": 501,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 465,
											"end": 501,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 465,
											"end": 501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 311,
											"end": 336,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 311,
											"end": 336,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 311,
											"end": 336,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 311,
											"end": 336,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 311,
											"end": 336,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 311,
											"end": 336,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 311,
											"end": 336,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 311,
											"end": 336,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 311,
											"end": 336,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 311,
											"end": 336,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 311,
											"end": 336,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 311,
											"end": 336,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 311,
											"end": 336,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 311,
											"end": 336,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 311,
											"end": 336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 3934,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 1684,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 1839,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 1994,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 1978,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1967,
											"end": 1990,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 1995,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 1998,
											"end": 2077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "tag",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2119,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 2188,
											"end": 2195,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2177,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2164,
											"end": 2186,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 2143,
											"end": 2196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "tag",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2089,
											"end": 2206,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1884,
											"end": 2213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2273,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2335,
											"end": 2344,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2368,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 2395,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 2413,
											"end": 2418,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2395,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 2395,
											"end": 2419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2395,
											"end": 2419,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 2395,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 2386,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "tag",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2368,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 2368,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2368,
											"end": 2421,
											"name": "tag",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 2368,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2355,
											"end": 2421,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2355,
											"end": 2421,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2285,
											"end": 2427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2483,
											"end": 2492,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2516,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 2547,
											"end": 2552,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2516,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2516,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2516,
											"end": 2553,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 2516,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2503,
											"end": 2553,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2503,
											"end": 2553,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2433,
											"end": 2559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2705,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 2565,
											"end": 2705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2629,
											"end": 2638,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2662,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 2693,
											"end": 2698,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 2662,
											"end": 2699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2699,
											"name": "tag",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 2662,
											"end": 2699,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 2699,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 2699,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2705,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2705,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2705,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2711,
											"end": 2870,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 2711,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2812,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 2857,
											"end": 2862,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2812,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 2812,
											"end": 2863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2812,
											"end": 2863,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 2812,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2810,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2864,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2711,
											"end": 2870,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2711,
											"end": 2870,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2711,
											"end": 2870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2876,
											"end": 3126,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2876,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2983,
											"end": 2987,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3021,
											"end": 3023,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3010,
											"end": 3019,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3006,
											"end": 3024,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 3024,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 3024,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 3116,
											"end": 3117,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3114,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3101,
											"end": 3118,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3092,
											"end": 3098,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 3034,
											"end": 3119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2876,
											"end": 3126,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2876,
											"end": 3126,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2876,
											"end": 3126,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2876,
											"end": 3126,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2876,
											"end": 3126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3132,
											"end": 3301,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 3132,
											"end": 3301,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 3227,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3250,
											"end": 3256,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3245,
											"end": 3248,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3238,
											"end": 3257,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3290,
											"end": 3294,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3285,
											"end": 3288,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3281,
											"end": 3295,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3266,
											"end": 3295,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3266,
											"end": 3295,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3132,
											"end": 3301,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3132,
											"end": 3301,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3132,
											"end": 3301,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3132,
											"end": 3301,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3132,
											"end": 3301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3307,
											"end": 3486,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 3307,
											"end": 3486,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3447,
											"end": 3478,
											"name": "PUSH",
											"source": 4,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E2030000000"
										},
										{
											"begin": 3443,
											"end": 3444,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3435,
											"end": 3441,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3431,
											"end": 3445,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3424,
											"end": 3479,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3307,
											"end": 3486,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3307,
											"end": 3486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3492,
											"end": 3858,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 3492,
											"end": 3858,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3634,
											"end": 3637,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3655,
											"end": 3722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 3719,
											"end": 3721,
											"name": "PUSH",
											"source": 4,
											"value": "1D"
										},
										{
											"begin": 3714,
											"end": 3717,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3655,
											"end": 3722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 3655,
											"end": 3722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3655,
											"end": 3722,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 3655,
											"end": 3722,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3648,
											"end": 3722,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3648,
											"end": 3722,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3731,
											"end": 3824,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 3820,
											"end": 3823,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3731,
											"end": 3824,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 3731,
											"end": 3824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3731,
											"end": 3824,
											"name": "tag",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 3731,
											"end": 3824,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3849,
											"end": 3851,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3844,
											"end": 3847,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3840,
											"end": 3852,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3833,
											"end": 3852,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3833,
											"end": 3852,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3492,
											"end": 3858,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3492,
											"end": 3858,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3492,
											"end": 3858,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3492,
											"end": 3858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3864,
											"end": 4283,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 3864,
											"end": 4283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4030,
											"end": 4034,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4068,
											"end": 4070,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4057,
											"end": 4066,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4053,
											"end": 4071,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4071,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4071,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4117,
											"end": 4126,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4111,
											"end": 4115,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4107,
											"end": 4127,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4103,
											"end": 4104,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4092,
											"end": 4101,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4088,
											"end": 4105,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4081,
											"end": 4128,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4145,
											"end": 4276,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 4271,
											"end": 4275,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4145,
											"end": 4276,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 4145,
											"end": 4276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4145,
											"end": 4276,
											"name": "tag",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 4145,
											"end": 4276,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4137,
											"end": 4276,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4137,
											"end": 4276,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3864,
											"end": 4283,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3864,
											"end": 4283,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3864,
											"end": 4283,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3864,
											"end": 4283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4289,
											"end": 4467,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 4289,
											"end": 4467,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4459,
											"name": "PUSH",
											"source": 4,
											"value": "5374616B656E6420616D6F756E74206973206E6F7420656E6F75676800000000"
										},
										{
											"begin": 4425,
											"end": 4426,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4417,
											"end": 4423,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4413,
											"end": 4427,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4406,
											"end": 4460,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4289,
											"end": 4467,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4289,
											"end": 4467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4473,
											"end": 4839,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 4473,
											"end": 4839,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4615,
											"end": 4618,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4636,
											"end": 4703,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 4700,
											"end": 4702,
											"name": "PUSH",
											"source": 4,
											"value": "1C"
										},
										{
											"begin": 4695,
											"end": 4698,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4636,
											"end": 4703,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 4636,
											"end": 4703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4636,
											"end": 4703,
											"name": "tag",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 4636,
											"end": 4703,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4629,
											"end": 4703,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4629,
											"end": 4703,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4712,
											"end": 4805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 4801,
											"end": 4804,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4712,
											"end": 4805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 4712,
											"end": 4805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4712,
											"end": 4805,
											"name": "tag",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 4712,
											"end": 4805,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4830,
											"end": 4832,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4825,
											"end": 4828,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4821,
											"end": 4833,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4814,
											"end": 4833,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4814,
											"end": 4833,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4473,
											"end": 4839,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4473,
											"end": 4839,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4473,
											"end": 4839,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4473,
											"end": 4839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4845,
											"end": 5264,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 4845,
											"end": 5264,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5011,
											"end": 5015,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5049,
											"end": 5051,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5038,
											"end": 5047,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5034,
											"end": 5052,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5026,
											"end": 5052,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5026,
											"end": 5052,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5107,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5092,
											"end": 5096,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5088,
											"end": 5108,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5084,
											"end": 5085,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5073,
											"end": 5082,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5069,
											"end": 5086,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5062,
											"end": 5109,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 5252,
											"end": 5256,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 5126,
											"end": 5257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5257,
											"name": "tag",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 5126,
											"end": 5257,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5118,
											"end": 5257,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5118,
											"end": 5257,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4845,
											"end": 5264,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4845,
											"end": 5264,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4845,
											"end": 5264,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4845,
											"end": 5264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5270,
											"end": 5450,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 5270,
											"end": 5450,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5318,
											"end": 5395,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5315,
											"end": 5316,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5308,
											"end": 5396,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5415,
											"end": 5419,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 5412,
											"end": 5413,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5405,
											"end": 5420,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5439,
											"end": 5443,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5436,
											"end": 5437,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5429,
											"end": 5444,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5456,
											"end": 5650,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 5456,
											"end": 5650,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5496,
											"end": 5500,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5516,
											"end": 5536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 5534,
											"end": 5535,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5516,
											"end": 5536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 5516,
											"end": 5536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5516,
											"end": 5536,
											"name": "tag",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 5516,
											"end": 5536,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5511,
											"end": 5536,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5511,
											"end": 5536,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5550,
											"end": 5570,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 5568,
											"end": 5569,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5550,
											"end": 5570,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 5550,
											"end": 5570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5550,
											"end": 5570,
											"name": "tag",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 5550,
											"end": 5570,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5545,
											"end": 5570,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5545,
											"end": 5570,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5594,
											"end": 5595,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5591,
											"end": 5592,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5587,
											"end": 5596,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5579,
											"end": 5596,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5579,
											"end": 5596,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5618,
											"end": 5619,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5612,
											"end": 5616,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5609,
											"end": 5620,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5606,
											"end": 5643,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5606,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 5606,
											"end": 5643,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 5623,
											"end": 5641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "tag",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5606,
											"end": 5643,
											"name": "tag",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 5606,
											"end": 5643,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5456,
											"end": 5650,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5456,
											"end": 5650,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5456,
											"end": 5650,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5456,
											"end": 5650,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5456,
											"end": 5650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5774,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 5656,
											"end": 5774,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5743,
											"end": 5767,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 5761,
											"end": 5766,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5743,
											"end": 5767,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 5743,
											"end": 5767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5743,
											"end": 5767,
											"name": "tag",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 5743,
											"end": 5767,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5738,
											"end": 5741,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5731,
											"end": 5768,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5774,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5774,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 6112,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 5780,
											"end": 6112,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5901,
											"end": 5905,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5928,
											"end": 5937,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5924,
											"end": 5942,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5916,
											"end": 5942,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5916,
											"end": 5942,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 6020,
											"end": 6021,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6009,
											"end": 6018,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6005,
											"end": 6022,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5996,
											"end": 6002,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 5952,
											"end": 6023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6023,
											"name": "tag",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 5952,
											"end": 6023,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6033,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 6101,
											"end": 6103,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6090,
											"end": 6099,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6086,
											"end": 6104,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6083,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6033,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 6033,
											"end": 6105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6033,
											"end": 6105,
											"name": "tag",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 6033,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 6112,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 6112,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 6112,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 6112,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 6112,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 6112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6118,
											"end": 6208,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 6118,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6152,
											"end": 6159,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6195,
											"end": 6200,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6188,
											"end": 6201,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6181,
											"end": 6202,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6170,
											"end": 6202,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6170,
											"end": 6202,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6118,
											"end": 6208,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6118,
											"end": 6208,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6118,
											"end": 6208,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6118,
											"end": 6208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6330,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 6214,
											"end": 6330,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6284,
											"end": 6305,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 6299,
											"end": 6304,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6284,
											"end": 6305,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 6284,
											"end": 6305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6284,
											"end": 6305,
											"name": "tag",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 6284,
											"end": 6305,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6277,
											"end": 6282,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6274,
											"end": 6306,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6264,
											"end": 6324,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 6264,
											"end": 6324,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6320,
											"end": 6321,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6318,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6310,
											"end": 6322,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6264,
											"end": 6324,
											"name": "tag",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 6264,
											"end": 6324,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6330,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6336,
											"end": 6473,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 6336,
											"end": 6473,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6390,
											"end": 6395,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6421,
											"end": 6427,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6415,
											"end": 6428,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6406,
											"end": 6428,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6406,
											"end": 6428,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6437,
											"end": 6467,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 6461,
											"end": 6466,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6437,
											"end": 6467,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 6437,
											"end": 6467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6437,
											"end": 6467,
											"name": "tag",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 6437,
											"end": 6467,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6336,
											"end": 6473,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6336,
											"end": 6473,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6336,
											"end": 6473,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6336,
											"end": 6473,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6336,
											"end": 6473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6479,
											"end": 6824,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 6479,
											"end": 6824,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6546,
											"end": 6552,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6595,
											"end": 6597,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6583,
											"end": 6592,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6574,
											"end": 6581,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6593,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6566,
											"end": 6598,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 6563,
											"end": 6682,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6563,
											"end": 6682,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 6563,
											"end": 6682,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6601,
											"end": 6680,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 6601,
											"end": 6680,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 6601,
											"end": 6680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6601,
											"end": 6680,
											"name": "tag",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 6601,
											"end": 6680,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6563,
											"end": 6682,
											"name": "tag",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 6563,
											"end": 6682,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6721,
											"end": 6722,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6746,
											"end": 6807,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 6799,
											"end": 6806,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6790,
											"end": 6796,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6779,
											"end": 6788,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6775,
											"end": 6797,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6746,
											"end": 6807,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 6746,
											"end": 6807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6746,
											"end": 6807,
											"name": "tag",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 6746,
											"end": 6807,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6736,
											"end": 6807,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6736,
											"end": 6807,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6692,
											"end": 6817,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6479,
											"end": 6824,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6479,
											"end": 6824,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6479,
											"end": 6824,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6479,
											"end": 6824,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6479,
											"end": 6824,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6830,
											"end": 6995,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 6830,
											"end": 6995,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6970,
											"end": 6987,
											"name": "PUSH",
											"source": 4,
											"value": "5472616E73666572204661696C65640000000000000000000000000000000000"
										},
										{
											"begin": 6966,
											"end": 6967,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6958,
											"end": 6964,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6954,
											"end": 6968,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 6988,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6830,
											"end": 6995,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6830,
											"end": 6995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7001,
											"end": 7367,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 7001,
											"end": 7367,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7143,
											"end": 7146,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7164,
											"end": 7231,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 7228,
											"end": 7230,
											"name": "PUSH",
											"source": 4,
											"value": "F"
										},
										{
											"begin": 7223,
											"end": 7226,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7164,
											"end": 7231,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 7164,
											"end": 7231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7164,
											"end": 7231,
											"name": "tag",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 7164,
											"end": 7231,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7157,
											"end": 7231,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7157,
											"end": 7231,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7240,
											"end": 7333,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 7329,
											"end": 7332,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7240,
											"end": 7333,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 7240,
											"end": 7333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7240,
											"end": 7333,
											"name": "tag",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 7240,
											"end": 7333,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7358,
											"end": 7360,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7353,
											"end": 7356,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7349,
											"end": 7361,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7342,
											"end": 7361,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7342,
											"end": 7361,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7001,
											"end": 7367,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7001,
											"end": 7367,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7001,
											"end": 7367,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7001,
											"end": 7367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7373,
											"end": 7792,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 7373,
											"end": 7792,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7539,
											"end": 7543,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7577,
											"end": 7579,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7566,
											"end": 7575,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7562,
											"end": 7580,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7554,
											"end": 7580,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7554,
											"end": 7580,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7626,
											"end": 7635,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7620,
											"end": 7624,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7616,
											"end": 7636,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7612,
											"end": 7613,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7601,
											"end": 7610,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7597,
											"end": 7614,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7590,
											"end": 7637,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7654,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 7780,
											"end": 7784,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7654,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 7654,
											"end": 7785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7654,
											"end": 7785,
											"name": "tag",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 7654,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7646,
											"end": 7785,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7646,
											"end": 7785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7373,
											"end": 7792,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7373,
											"end": 7792,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7373,
											"end": 7792,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7373,
											"end": 7792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7798,
											"end": 7989,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 7798,
											"end": 7989,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7838,
											"end": 7841,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7857,
											"end": 7877,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 7875,
											"end": 7876,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7857,
											"end": 7877,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 7857,
											"end": 7877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7857,
											"end": 7877,
											"name": "tag",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 7857,
											"end": 7877,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7852,
											"end": 7877,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7852,
											"end": 7877,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7891,
											"end": 7911,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 7909,
											"end": 7910,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7891,
											"end": 7911,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 7891,
											"end": 7911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7891,
											"end": 7911,
											"name": "tag",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 7891,
											"end": 7911,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7886,
											"end": 7911,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7886,
											"end": 7911,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7934,
											"end": 7935,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7931,
											"end": 7932,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7927,
											"end": 7936,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7920,
											"end": 7936,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7920,
											"end": 7936,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7955,
											"end": 7958,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7952,
											"end": 7953,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7949,
											"end": 7959,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 7946,
											"end": 7982,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7946,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 7946,
											"end": 7982,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7962,
											"end": 7980,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 7962,
											"end": 7980,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 7962,
											"end": 7980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7962,
											"end": 7980,
											"name": "tag",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 7962,
											"end": 7980,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7946,
											"end": 7982,
											"name": "tag",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 7946,
											"end": 7982,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7798,
											"end": 7989,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7798,
											"end": 7989,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7798,
											"end": 7989,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7798,
											"end": 7989,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7798,
											"end": 7989,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7995,
											"end": 8437,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 7995,
											"end": 8437,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8144,
											"end": 8148,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8182,
											"end": 8184,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 8171,
											"end": 8180,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8167,
											"end": 8185,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8159,
											"end": 8185,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8159,
											"end": 8185,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8195,
											"end": 8266,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 8263,
											"end": 8264,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8252,
											"end": 8261,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8248,
											"end": 8265,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8239,
											"end": 8245,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8195,
											"end": 8266,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 8195,
											"end": 8266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8195,
											"end": 8266,
											"name": "tag",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 8195,
											"end": 8266,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8276,
											"end": 8348,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 8344,
											"end": 8346,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8333,
											"end": 8342,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8329,
											"end": 8347,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8320,
											"end": 8326,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8276,
											"end": 8348,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 8276,
											"end": 8348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8276,
											"end": 8348,
											"name": "tag",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 8276,
											"end": 8348,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8430,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 8426,
											"end": 8428,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8415,
											"end": 8424,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8411,
											"end": 8429,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8402,
											"end": 8408,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8430,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 8358,
											"end": 8430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8430,
											"name": "tag",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 8358,
											"end": 8430,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7995,
											"end": 8437,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 7995,
											"end": 8437,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7995,
											"end": 8437,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7995,
											"end": 8437,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7995,
											"end": 8437,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7995,
											"end": 8437,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7995,
											"end": 8437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8443,
											"end": 8616,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 8443,
											"end": 8616,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8583,
											"end": 8608,
											"name": "PUSH",
											"source": 4,
											"value": "204E6F7420686176696E6720616E792072657761726473000000000000000000"
										},
										{
											"begin": 8579,
											"end": 8580,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8571,
											"end": 8577,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8567,
											"end": 8581,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8560,
											"end": 8609,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8443,
											"end": 8616,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8443,
											"end": 8616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8622,
											"end": 8988,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 8622,
											"end": 8988,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8764,
											"end": 8767,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8785,
											"end": 8852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 8849,
											"end": 8851,
											"name": "PUSH",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 8844,
											"end": 8847,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8785,
											"end": 8852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 8785,
											"end": 8852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8785,
											"end": 8852,
											"name": "tag",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 8785,
											"end": 8852,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8778,
											"end": 8852,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8778,
											"end": 8852,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8861,
											"end": 8954,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 8950,
											"end": 8953,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8861,
											"end": 8954,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 8861,
											"end": 8954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8861,
											"end": 8954,
											"name": "tag",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 8861,
											"end": 8954,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8979,
											"end": 8981,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8974,
											"end": 8977,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8970,
											"end": 8982,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8963,
											"end": 8982,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8963,
											"end": 8982,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8622,
											"end": 8988,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8622,
											"end": 8988,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8622,
											"end": 8988,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8622,
											"end": 8988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8994,
											"end": 9413,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 8994,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9160,
											"end": 9164,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9198,
											"end": 9200,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9187,
											"end": 9196,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9183,
											"end": 9201,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9175,
											"end": 9201,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9175,
											"end": 9201,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9247,
											"end": 9256,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9241,
											"end": 9245,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9237,
											"end": 9257,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9233,
											"end": 9234,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9222,
											"end": 9231,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9218,
											"end": 9235,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9211,
											"end": 9258,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9275,
											"end": 9406,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 9401,
											"end": 9405,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9275,
											"end": 9406,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 9275,
											"end": 9406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9275,
											"end": 9406,
											"name": "tag",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 9275,
											"end": 9406,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9267,
											"end": 9406,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9267,
											"end": 9406,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8994,
											"end": 9413,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8994,
											"end": 9413,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8994,
											"end": 9413,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8994,
											"end": 9413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9419,
											"end": 9600,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 9419,
											"end": 9600,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9559,
											"end": 9592,
											"name": "PUSH",
											"source": 4,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 9555,
											"end": 9556,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9547,
											"end": 9553,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9543,
											"end": 9557,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9536,
											"end": 9593,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9419,
											"end": 9600,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9419,
											"end": 9600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9606,
											"end": 9972,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 9606,
											"end": 9972,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9748,
											"end": 9751,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9769,
											"end": 9836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 9833,
											"end": 9835,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 9828,
											"end": 9831,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9769,
											"end": 9836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 9769,
											"end": 9836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9769,
											"end": 9836,
											"name": "tag",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 9769,
											"end": 9836,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9762,
											"end": 9836,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9762,
											"end": 9836,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9845,
											"end": 9938,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 9934,
											"end": 9937,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9845,
											"end": 9938,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 9845,
											"end": 9938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9845,
											"end": 9938,
											"name": "tag",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 9845,
											"end": 9938,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9963,
											"end": 9965,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9958,
											"end": 9961,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9954,
											"end": 9966,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9947,
											"end": 9966,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9947,
											"end": 9966,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9606,
											"end": 9972,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9606,
											"end": 9972,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9606,
											"end": 9972,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9606,
											"end": 9972,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9978,
											"end": 10397,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 9978,
											"end": 10397,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10144,
											"end": 10148,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10182,
											"end": 10184,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10171,
											"end": 10180,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10167,
											"end": 10185,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10159,
											"end": 10185,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10159,
											"end": 10185,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10231,
											"end": 10240,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10225,
											"end": 10229,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10221,
											"end": 10241,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10217,
											"end": 10218,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10206,
											"end": 10215,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10202,
											"end": 10219,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10195,
											"end": 10242,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10259,
											"end": 10390,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 10385,
											"end": 10389,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10259,
											"end": 10390,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 10259,
											"end": 10390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10259,
											"end": 10390,
											"name": "tag",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 10259,
											"end": 10390,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10251,
											"end": 10390,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10251,
											"end": 10390,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9978,
											"end": 10397,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9978,
											"end": 10397,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9978,
											"end": 10397,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9978,
											"end": 10397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10403,
											"end": 10813,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 10403,
											"end": 10813,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10443,
											"end": 10450,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10466,
											"end": 10486,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 10484,
											"end": 10485,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10466,
											"end": 10486,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 10466,
											"end": 10486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10466,
											"end": 10486,
											"name": "tag",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 10466,
											"end": 10486,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10461,
											"end": 10486,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10461,
											"end": 10486,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10500,
											"end": 10520,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 10518,
											"end": 10519,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10500,
											"end": 10520,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 10500,
											"end": 10520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10500,
											"end": 10520,
											"name": "tag",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 10500,
											"end": 10520,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10495,
											"end": 10520,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10495,
											"end": 10520,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10555,
											"end": 10556,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10552,
											"end": 10553,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10548,
											"end": 10557,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 10577,
											"end": 10607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 10595,
											"end": 10606,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10577,
											"end": 10607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 10577,
											"end": 10607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10577,
											"end": 10607,
											"name": "tag",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 10577,
											"end": 10607,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10566,
											"end": 10607,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10566,
											"end": 10607,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10756,
											"end": 10757,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10747,
											"end": 10754,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10743,
											"end": 10758,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 10740,
											"end": 10741,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10737,
											"end": 10759,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 10717,
											"end": 10718,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10710,
											"end": 10719,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10690,
											"end": 10773,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 10667,
											"end": 10806,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 10667,
											"end": 10806,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10786,
											"end": 10804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 10786,
											"end": 10804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 10786,
											"end": 10804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10786,
											"end": 10804,
											"name": "tag",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 10786,
											"end": 10804,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10667,
											"end": 10806,
											"name": "tag",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 10667,
											"end": 10806,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10451,
											"end": 10813,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10403,
											"end": 10813,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10403,
											"end": 10813,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10403,
											"end": 10813,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10403,
											"end": 10813,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10403,
											"end": 10813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10819,
											"end": 10999,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 10819,
											"end": 10999,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10867,
											"end": 10944,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10864,
											"end": 10865,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10857,
											"end": 10945,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10964,
											"end": 10968,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 10961,
											"end": 10962,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10954,
											"end": 10969,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10988,
											"end": 10992,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 10985,
											"end": 10986,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10978,
											"end": 10993,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11005,
											"end": 11190,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 11005,
											"end": 11190,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11045,
											"end": 11046,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11062,
											"end": 11082,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 11080,
											"end": 11081,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11062,
											"end": 11082,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 11062,
											"end": 11082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11062,
											"end": 11082,
											"name": "tag",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 11062,
											"end": 11082,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11057,
											"end": 11082,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11057,
											"end": 11082,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11096,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 11114,
											"end": 11115,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11096,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 11096,
											"end": 11116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11096,
											"end": 11116,
											"name": "tag",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 11096,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11091,
											"end": 11116,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11091,
											"end": 11116,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11135,
											"end": 11136,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11125,
											"end": 11160,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 11125,
											"end": 11160,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11140,
											"end": 11158,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "304"
										},
										{
											"begin": 11140,
											"end": 11158,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 11140,
											"end": 11158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11140,
											"end": 11158,
											"name": "tag",
											"source": 4,
											"value": "304"
										},
										{
											"begin": 11140,
											"end": 11158,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11125,
											"end": 11160,
											"name": "tag",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 11125,
											"end": 11160,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11182,
											"end": 11183,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11179,
											"end": 11180,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11175,
											"end": 11184,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 11170,
											"end": 11184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11170,
											"end": 11184,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11005,
											"end": 11190,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11005,
											"end": 11190,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11005,
											"end": 11190,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11005,
											"end": 11190,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11005,
											"end": 11190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Staking/staking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"Reward_Rate()": "69ef6ee7",
							"claimReward()": "b88a802f",
							"lastUpdateTime()": "c8f33c91",
							"rewardPerToken()": "cd3daf9d",
							"rewardToken()": "f7c618c1",
							"rewardperTokenStored()": "e6103637",
							"rewards(address)": "0700037d",
							"rewardsEarned(address)": "8bfea439",
							"stake(uint256)": "a694fc3a",
							"stakedBalance(address)": "60217267",
							"stakingToken()": "72f702f3",
							"userRewardPerTokenPaid(address)": "8b876347",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Reward_Rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpdateTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardperTokenStored\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"rewardsEarned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userRewardPerTokenPaid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Staking/staking.sol\":\"Staking\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"Staking/staking.sol\":{\"keccak256\":\"0x602bd2326194c651c55be7608d1069f43b3815afdb90890778a67c9c848606ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea564795dfa2b8ec39b951fc528350a3d6c7b1f92b389cffd5221bc2ac849e29\",\"dweb:/ipfs/QmQvyEkgQYazgsbpx7tvnZDet8UpfoW2wpPbgMHSoo7hui\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "Staking/staking.sol:Staking",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 464,
								"contract": "Staking/staking.sol:Staking",
								"label": "stakingToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)142"
							},
							{
								"astId": 467,
								"contract": "Staking/staking.sol:Staking",
								"label": "rewardToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)142"
							},
							{
								"astId": 475,
								"contract": "Staking/staking.sol:Staking",
								"label": "totalStakedTokens",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 477,
								"contract": "Staking/staking.sol:Staking",
								"label": "rewardperTokenStored",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 479,
								"contract": "Staking/staking.sol:Staking",
								"label": "lastUpdateTime",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 483,
								"contract": "Staking/staking.sol:Staking",
								"label": "stakedBalance",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 487,
								"contract": "Staking/staking.sol:Staking",
								"label": "rewards",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 491,
								"contract": "Staking/staking.sol:Staking",
								"label": "userRewardPerTokenPaid",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)142": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							64
						]
					},
					"id": 65,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:0",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 64,
							"linearizedBaseContracts": [
								64
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 5,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "1676:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 8,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "1723:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "1767:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 9,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "1811:39:0",
										"statements": [
											{
												"expression": {
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 13,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1821:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 14,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1831:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:0"
											}
										]
									},
									"id": 18,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:0"
									},
									"scope": 64,
									"src": "1797:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "2251:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 21,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "2261:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:0"
											},
											{
												"id": 24,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 25,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "2303:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:0"
											}
										]
									},
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 29,
									"name": "nonReentrant",
									"nameLocation": "2236:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:0"
									},
									"src": "2227:103:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "2375:248:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 33,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "2468:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 34,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "2479:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 32,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:0"
											},
											{
												"expression": {
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 39,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2598:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 40,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "2608:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:0"
											}
										]
									},
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:0"
									},
									"scope": 64,
									"src": "2336:287:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "2667:171:0",
										"statements": [
											{
												"expression": {
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 47,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2809:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 48,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "2819:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:0"
											}
										]
									},
									"id": 52,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:0"
									},
									"scope": 64,
									"src": "2629:209:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "3081:43:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 58,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "3098:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 59,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3109:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 57,
												"id": 61,
												"nodeType": "Return",
												"src": "3091:26:0"
											}
										]
									},
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:0",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "3075:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:0"
									},
									"scope": 64,
									"src": "3017:107:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 65,
							"src": "888:2238:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							142
						]
					},
					"id": 143,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 66,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 67,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 142,
							"linearizedBaseContracts": [
								142
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 76,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 85,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 78,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 81,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 82,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 86,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 91,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 142,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 142,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 100,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 109,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 106,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 142,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 110,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 119,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 142,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 120,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 129,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 126,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 142,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 141,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2668:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2682:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2694:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:1"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2728:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 138,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:1"
									},
									"scope": 142,
									"src": "2646:88:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 143,
							"src": "202:2534:1",
							"usedErrors": [],
							"usedEvents": [
								76,
								85
							]
						}
					],
					"src": "106:2631:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							454
						]
					},
					"id": 455,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 144,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 145,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:2",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 454,
							"linearizedBaseContracts": [
								454
							],
							"name": "SafeMath",
							"nameLocation": "490:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "717:140:2",
										"statements": [
											{
												"id": 175,
												"nodeType": "UncheckedBlock",
												"src": "727:124:2",
												"statements": [
													{
														"assignments": [
															158
														],
														"declarations": [
															{
																"constant": false,
																"id": 158,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 175,
																"src": "751:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 157,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 162,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 159,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 148,
																"src": "763:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 160,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 150,
																"src": "767:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 163,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "786:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 164,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 148,
																"src": "790:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 170,
														"nodeType": "IfStatement",
														"src": "782:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 168,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 156,
															"id": 169,
															"nodeType": "Return",
															"src": "793:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 172,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 158,
																	"src": "838:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 173,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 156,
														"id": 174,
														"nodeType": "Return",
														"src": "824:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:2",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "657:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "668:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:2"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "702:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 152,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "708:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:2"
									},
									"scope": 454,
									"src": "641:216:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "1078:113:2",
										"statements": [
											{
												"id": 203,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 189,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 182,
																"src": "1116:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 190,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 180,
																"src": "1120:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 196,
														"nodeType": "IfStatement",
														"src": "1112:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 193,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 194,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 188,
															"id": 195,
															"nodeType": "Return",
															"src": "1123:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 198,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 180,
																		"src": "1168:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 199,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 182,
																		"src": "1172:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 201,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 188,
														"id": 202,
														"nodeType": "Return",
														"src": "1154:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:2",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "1018:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "1029:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:2"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "1063:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 184,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "1069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:2"
									},
									"scope": 454,
									"src": "1002:189:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 246,
										"nodeType": "Block",
										"src": "1415:417:2",
										"statements": [
											{
												"id": 245,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 217,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 208,
																"src": "1683:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 224,
														"nodeType": "IfStatement",
														"src": "1679:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 220,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 221,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 222,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 216,
															"id": 223,
															"nodeType": "Return",
															"src": "1691:16:2"
														}
													},
													{
														"assignments": [
															226
														],
														"declarations": [
															{
																"constant": false,
																"id": 226,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 245,
																"src": "1721:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 225,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 230,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 227,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 208,
																"src": "1733:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 228,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 210,
																"src": "1737:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 231,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 226,
																	"src": "1756:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 232,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 208,
																	"src": "1760:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 234,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 210,
																"src": "1765:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 240,
														"nodeType": "IfStatement",
														"src": "1752:33:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 238,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 216,
															"id": 239,
															"nodeType": "Return",
															"src": "1768:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 242,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 226,
																	"src": "1813:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 243,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 216,
														"id": 244,
														"nodeType": "Return",
														"src": "1799:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:2",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 247,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "1355:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "1366:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:2"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "1400:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 212,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "1406:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:2"
									},
									"scope": 454,
									"src": "1339:493:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 274,
										"nodeType": "Block",
										"src": "2057:114:2",
										"statements": [
											{
												"id": 273,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 259,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 252,
																"src": "2095:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 260,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 266,
														"nodeType": "IfStatement",
														"src": "2091:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 263,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 264,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 258,
															"id": 265,
															"nodeType": "Return",
															"src": "2103:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 268,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 250,
																		"src": "2148:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 269,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 252,
																		"src": "2152:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 271,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 258,
														"id": 272,
														"nodeType": "Return",
														"src": "2134:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:2",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "1997:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "2008:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:2"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "2042:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 254,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "2048:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:2"
									},
									"scope": 454,
									"src": "1981:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 302,
										"nodeType": "Block",
										"src": "2406:114:2",
										"statements": [
											{
												"id": 301,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 287,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 280,
																"src": "2444:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 288,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 294,
														"nodeType": "IfStatement",
														"src": "2440:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 292,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 286,
															"id": 293,
															"nodeType": "Return",
															"src": "2452:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 296,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 278,
																		"src": "2497:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 297,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 280,
																		"src": "2501:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 299,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 286,
														"id": 300,
														"nodeType": "Return",
														"src": "2483:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 276,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "2346:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "2357:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:2"
									},
									"returnParameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "2391:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 282,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "2397:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:2"
									},
									"scope": 454,
									"src": "2330:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 317,
										"nodeType": "Block",
										"src": "2822:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 313,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 306,
														"src": "2839:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 314,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "2843:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 312,
												"id": 316,
												"nodeType": "Return",
												"src": "2832:12:2"
											}
										]
									},
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:2",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "2768:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "2779:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:2"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "2813:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:2"
									},
									"scope": 454,
									"src": "2755:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 332,
										"nodeType": "Block",
										"src": "3189:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 328,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 321,
														"src": "3206:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 329,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 323,
														"src": "3210:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 327,
												"id": 331,
												"nodeType": "Return",
												"src": "3199:12:2"
											}
										]
									},
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 333,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "3135:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "3146:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:2"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "3180:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:2"
									},
									"scope": 454,
									"src": "3122:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "3532:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 343,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "3549:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 344,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "3553:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 342,
												"id": 346,
												"nodeType": "Return",
												"src": "3542:12:2"
											}
										]
									},
									"documentation": {
										"id": 334,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:2",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "3478:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "3489:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:2"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "3523:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:2"
									},
									"scope": 454,
									"src": "3465:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "3917:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 358,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "3934:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 359,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "3938:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 357,
												"id": 361,
												"nodeType": "Return",
												"src": "3927:12:2"
											}
										]
									},
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3863:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3874:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:2"
									},
									"returnParameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3908:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:2"
									},
									"scope": 454,
									"src": "3850:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 377,
										"nodeType": "Block",
										"src": "4466:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 373,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "4483:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 374,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 368,
														"src": "4487:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 372,
												"id": 376,
												"nodeType": "Return",
												"src": "4476:12:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 378,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "4412:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "4423:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:2"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "4457:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:2"
									},
									"scope": 454,
									"src": "4399:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "5054:106:2",
										"statements": [
											{
												"id": 401,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 391,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 383,
																		"src": "5096:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 392,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 381,
																		"src": "5101:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 394,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "5104:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 390,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 396,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 397,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "5138:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 398,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 383,
																"src": "5142:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 389,
														"id": 400,
														"nodeType": "Return",
														"src": "5131:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 379,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "4972:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "4983:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "4994:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 384,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:2"
									},
									"returnParameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "5045:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:2"
									},
									"scope": 454,
									"src": "4959:201:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "5739:105:2",
										"statements": [
											{
												"id": 426,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 416,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 408,
																		"src": "5781:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 417,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 419,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 410,
																	"src": "5788:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 415,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 421,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 422,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 406,
																"src": "5822:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 423,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 408,
																"src": "5826:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 414,
														"id": 425,
														"nodeType": "Return",
														"src": "5815:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "5657:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "5668:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "5679:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 409,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:2"
									},
									"returnParameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "5730:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:2"
									},
									"scope": 454,
									"src": "5644:200:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "6585:105:2",
										"statements": [
											{
												"id": 451,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 441,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 433,
																		"src": "6627:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 442,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 444,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 435,
																	"src": "6634:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 440,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 446,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 447,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 431,
																"src": "6668:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 448,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 433,
																"src": "6672:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 439,
														"id": 450,
														"nodeType": "Return",
														"src": "6661:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "6503:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "6514:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "6525:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 434,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:2"
									},
									"returnParameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "6576:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:2"
									},
									"scope": 454,
									"src": "6490:200:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 455,
							"src": "482:6210:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "107:6586:2"
				},
				"id": 2
			},
			"Staking/staking.sol": {
				"ast": {
					"absolutePath": "Staking/staking.sol",
					"exportedSymbols": {
						"IERC20": [
							142
						],
						"ReentrancyGuard": [
							64
						],
						"SafeMath": [
							454
						],
						"Staking": [
							786
						]
					},
					"id": 787,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 456,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 457,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 787,
							"sourceUnit": 143,
							"src": "57:56:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 458,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 787,
							"sourceUnit": 65,
							"src": "114:62:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 459,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 787,
							"sourceUnit": 455,
							"src": "177:57:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 460,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"256:15:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 64,
										"src": "256:15:3"
									},
									"id": 461,
									"nodeType": "InheritanceSpecifier",
									"src": "256:15:3"
								}
							],
							"canonicalName": "Staking",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 786,
							"linearizedBaseContracts": [
								786,
								64
							],
							"name": "Staking",
							"nameLocation": "245:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "72f702f3",
									"id": 464,
									"mutability": "mutable",
									"name": "stakingToken",
									"nameLocation": "293:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 786,
									"src": "279:26:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$142",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 463,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 462,
											"name": "IERC20",
											"nameLocations": [
												"279:6:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 142,
											"src": "279:6:3"
										},
										"referencedDeclaration": 142,
										"src": "279:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$142",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f7c618c1",
									"id": 467,
									"mutability": "mutable",
									"name": "rewardToken",
									"nameLocation": "325:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 786,
									"src": "311:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$142",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 466,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 465,
											"name": "IERC20",
											"nameLocations": [
												"311:6:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 142,
											"src": "311:6:3"
										},
										"referencedDeclaration": 142,
										"src": "311:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$142",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"global": false,
									"id": 470,
									"libraryName": {
										"id": 468,
										"name": "SafeMath",
										"nameLocations": [
											"349:8:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 454,
										"src": "349:8:3"
									},
									"nodeType": "UsingForDirective",
									"src": "343:27:3",
									"typeName": {
										"id": 469,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "362:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"functionSelector": "69ef6ee7",
									"id": 473,
									"mutability": "constant",
									"name": "Reward_Rate",
									"nameLocation": "399:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 786,
									"src": "375:42:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 471,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "375:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31653138",
										"id": 472,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "413:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1e18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 475,
									"mutability": "mutable",
									"name": "totalStakedTokens",
									"nameLocation": "442:17:3",
									"nodeType": "VariableDeclaration",
									"scope": 786,
									"src": "425:34:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 474,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "425:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "e6103637",
									"id": 477,
									"mutability": "mutable",
									"name": "rewardperTokenStored",
									"nameLocation": "481:20:3",
									"nodeType": "VariableDeclaration",
									"scope": 786,
									"src": "465:36:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 476,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "465:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c8f33c91",
									"id": 479,
									"mutability": "mutable",
									"name": "lastUpdateTime",
									"nameLocation": "522:14:3",
									"nodeType": "VariableDeclaration",
									"scope": 786,
									"src": "507:29:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 478,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "507:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "60217267",
									"id": 483,
									"mutability": "mutable",
									"name": "stakedBalance",
									"nameLocation": "573:13:3",
									"nodeType": "VariableDeclaration",
									"scope": 786,
									"src": "543:43:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 482,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 480,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "551:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "543:22:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 481,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "560:4:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0700037d",
									"id": 487,
									"mutability": "mutable",
									"name": "rewards",
									"nameLocation": "622:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 786,
									"src": "592:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 486,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 484,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "600:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "592:22:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 485,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "609:4:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8b876347",
									"id": 491,
									"mutability": "mutable",
									"name": "userRewardPerTokenPaid",
									"nameLocation": "665:22:3",
									"nodeType": "VariableDeclaration",
									"scope": 786,
									"src": "635:52:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 490,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 488,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "643:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "635:22:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 489,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "652:4:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d",
									"id": 497,
									"name": "Staked",
									"nameLocation": "700:6:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "723:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "707:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "707:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"indexed": true,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "743:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "729:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 494,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "729:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "706:44:3"
									},
									"src": "694:57:3"
								},
								{
									"anonymous": false,
									"eventSelector": "7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5",
									"id": 503,
									"name": "Withdrawn",
									"nameLocation": "762:9:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "788:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "772:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "772:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"indexed": true,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "808:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "794:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 500,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "794:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "771:44:3"
									},
									"src": "756:60:3"
								},
								{
									"anonymous": false,
									"eventSelector": "fc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe",
									"id": 509,
									"name": "RewardsClaimed",
									"nameLocation": "827:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "858:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "842:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"indexed": true,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "878:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "864:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "864:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "841:44:3"
									},
									"src": "821:65:3"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "948:97:3",
										"statements": [
											{
												"expression": {
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 516,
														"name": "stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "958:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$142",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 518,
																"name": "_stakingToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 511,
																"src": "980:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 517,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "973:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$142_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 519,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "973:21:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$142",
															"typeString": "contract IERC20"
														}
													},
													"src": "958:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"id": 521,
												"nodeType": "ExpressionStatement",
												"src": "958:36:3"
											},
											{
												"expression": {
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 522,
														"name": "rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 467,
														"src": "1004:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$142",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 524,
																"name": "_rewardToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 513,
																"src": "1025:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 523,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "1018:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$142_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 525,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1018:20:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$142",
															"typeString": "contract IERC20"
														}
													},
													"src": "1004:34:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "1004:34:3"
											}
										]
									},
									"id": 529,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "_stakingToken",
												"nameLocation": "912:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "904:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "904:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "_rewardToken",
												"nameLocation": "935:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "927:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "927:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "903:45:3"
									},
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "948:0:3"
									},
									"scope": 786,
									"src": "892:153:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 558,
										"nodeType": "Block",
										"src": "1086:215:3",
										"statements": [
											{
												"expression": {
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 533,
														"name": "rewardperTokenStored",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 477,
														"src": "1096:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 534,
															"name": "rewardPerToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "1119:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 535,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1119:16:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1096:39:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 537,
												"nodeType": "ExpressionStatement",
												"src": "1096:39:3"
											},
											{
												"expression": {
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 538,
														"name": "lastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "1145:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 539,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1162:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 540,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1168:9:3",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1162:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1145:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "1145:32:3"
											},
											{
												"expression": {
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 543,
															"name": "rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "1187:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 545,
														"indexExpression": {
															"id": 544,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "1195:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1187:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 547,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 531,
																"src": "1216:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 546,
															"name": "rewardsEarned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "1202:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 548,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1202:19:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1187:34:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 550,
												"nodeType": "ExpressionStatement",
												"src": "1187:34:3"
											},
											{
												"expression": {
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 551,
															"name": "userRewardPerTokenPaid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "1231:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 553,
														"indexExpression": {
															"id": 552,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "1254:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1231:28:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 554,
														"name": "rewardperTokenStored",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 477,
														"src": "1262:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1231:51:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 556,
												"nodeType": "ExpressionStatement",
												"src": "1231:51:3"
											},
											{
												"id": 557,
												"nodeType": "PlaceholderStatement",
												"src": "1292:1:3"
											}
										]
									},
									"id": 559,
									"name": "updateReward",
									"nameLocation": "1060:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1081:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "1073:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1072:14:3"
									},
									"src": "1051:250:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 597,
										"nodeType": "Block",
										"src": "1359:297:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 564,
														"name": "totalStakedTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 475,
														"src": "1372:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 565,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1393:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1372:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 570,
												"nodeType": "IfStatement",
												"src": "1369:78:3",
												"trueBody": {
													"id": 569,
													"nodeType": "Block",
													"src": "1395:52:3",
													"statements": [
														{
															"expression": {
																"id": 567,
																"name": "rewardperTokenStored",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "1416:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 563,
															"id": 568,
															"nodeType": "Return",
															"src": "1409:27:3"
														}
													]
												}
											},
											{
												"assignments": [
													572
												],
												"declarations": [
													{
														"constant": false,
														"id": 572,
														"mutability": "mutable",
														"name": "totalTime",
														"nameLocation": "1461:9:3",
														"nodeType": "VariableDeclaration",
														"scope": 597,
														"src": "1456:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 571,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1456:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 578,
												"initialValue": {
													"arguments": [
														{
															"id": 576,
															"name": "lastUpdateTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "1492:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 573,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1472:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1478:9:3",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1472:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 575,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1488:3:3",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 333,
														"src": "1472:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1472:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1456:51:3"
											},
											{
												"assignments": [
													580
												],
												"declarations": [
													{
														"constant": false,
														"id": 580,
														"mutability": "mutable",
														"name": "totalReward",
														"nameLocation": "1522:11:3",
														"nodeType": "VariableDeclaration",
														"scope": 597,
														"src": "1517:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 579,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1517:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 585,
												"initialValue": {
													"arguments": [
														{
															"id": 583,
															"name": "totalTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "1552:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 581,
															"name": "Reward_Rate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "1536:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1548:3:3",
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 348,
														"src": "1536:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1536:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1517:45:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 594,
															"name": "totalStakedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "1631:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "31653138",
																			"id": 590,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1620:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			},
																			"value": "1e18"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			}
																		],
																		"expression": {
																			"id": 588,
																			"name": "totalReward",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 580,
																			"src": "1604:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 589,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1616:3:3",
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 348,
																		"src": "1604:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1604:21:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 586,
																	"name": "rewardperTokenStored",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 477,
																	"src": "1579:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 587,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1600:3:3",
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 318,
																"src": "1579:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1579:47:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 593,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1627:3:3",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 363,
														"src": "1579:51:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1579:70:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 563,
												"id": 596,
												"nodeType": "Return",
												"src": "1572:77:3"
											}
										]
									},
									"functionSelector": "cd3daf9d",
									"id": 598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardPerToken",
									"nameLocation": "1316:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1330:2:3"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "1353:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1353:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1352:6:3"
									},
									"scope": 786,
									"src": "1307:349:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 619,
										"nodeType": "Block",
										"src": "1724:101:3",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 612,
																				"name": "userRewardPerTokenPaid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 491,
																				"src": "1787:22:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 614,
																			"indexExpression": {
																				"id": 613,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 600,
																				"src": "1810:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1787:28:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 609,
																				"name": "rewardPerToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 598,
																				"src": "1766:14:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																					"typeString": "function () view returns (uint256)"
																				}
																			},
																			"id": 610,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1766:16:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 611,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1783:3:3",
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 333,
																		"src": "1766:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1766:50:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"baseExpression": {
																		"id": 605,
																		"name": "stakedBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 483,
																		"src": "1742:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 607,
																	"indexExpression": {
																		"id": 606,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 600,
																		"src": "1756:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1742:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1762:3:3",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 348,
																"src": "1742:23:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1742:75:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 617,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1741:77:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 604,
												"id": 618,
												"nodeType": "Return",
												"src": "1734:84:3"
											}
										]
									},
									"functionSelector": "8bfea439",
									"id": 620,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardsEarned",
									"nameLocation": "1671:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1693:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "1685:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1685:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1684:14:3"
									},
									"returnParameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "1719:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 602,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1719:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1718:6:3"
									},
									"scope": 786,
									"src": "1662:163:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 673,
										"nodeType": "Block",
										"src": "1905:316:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 634,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 632,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 622,
																"src": "1923:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 633,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1932:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1923:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1934:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															},
															"value": "Amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															}
														],
														"id": 631,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1915:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1915:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "1915:51:3"
											},
											{
												"expression": {
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 638,
														"name": "totalStakedTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 475,
														"src": "1976:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 639,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 622,
														"src": "1995:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1976:25:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 641,
												"nodeType": "ExpressionStatement",
												"src": "1976:25:3"
											},
											{
												"expression": {
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 642,
															"name": "stakedBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "2011:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 645,
														"indexExpression": {
															"expression": {
																"id": 643,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2025:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2029:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2025:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2011:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 646,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 622,
														"src": "2038:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2011:33:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 648,
												"nodeType": "ExpressionStatement",
												"src": "2011:33:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 650,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2066:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2070:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2066:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 652,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "2078:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 649,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 497,
														"src": "2059:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2059:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 654,
												"nodeType": "EmitStatement",
												"src": "2054:31:3"
											},
											{
												"assignments": [
													656
												],
												"declarations": [
													{
														"constant": false,
														"id": 656,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2100:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 673,
														"src": "2095:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 655,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2095:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 667,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 659,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2136:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2140:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2136:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 663,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2156:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Staking_$786",
																		"typeString": "contract Staking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Staking_$786",
																		"typeString": "contract Staking"
																	}
																],
																"id": 662,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2148:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 661,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2148:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2148:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 665,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "2163:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 657,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "2110:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															}
														},
														"id": 658,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2123:12:3",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 141,
														"src": "2110:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2110:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2095:75:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 669,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "2188:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572204661696c6564",
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2196:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f",
																"typeString": "literal_string \"Transfer Failed\""
															},
															"value": "Transfer Failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f",
																"typeString": "literal_string \"Transfer Failed\""
															}
														],
														"id": 668,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2180:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2180:34:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 672,
												"nodeType": "ExpressionStatement",
												"src": "2180:34:3"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 674,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 625,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 624,
												"name": "nonReentrant",
												"nameLocations": [
													"1868:12:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 29,
												"src": "1868:12:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1868:12:3"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 627,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1894:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1898:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1894:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 629,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 626,
												"name": "updateReward",
												"nameLocations": [
													"1881:12:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 559,
												"src": "1881:12:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1881:24:3"
										}
									],
									"name": "stake",
									"nameLocation": "1840:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1851:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "1846:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 621,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1846:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1845:13:3"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1905:0:3"
									},
									"scope": 786,
									"src": "1831:390:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 733,
										"nodeType": "Block",
										"src": "2304:383:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 686,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 676,
																"src": "2322:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 687,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2331:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2322:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2333:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															},
															"value": "Amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															}
														],
														"id": 685,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2314:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2314:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 691,
												"nodeType": "ExpressionStatement",
												"src": "2314:51:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 693,
																	"name": "stakedBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 483,
																	"src": "2383:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 696,
																"indexExpression": {
																	"expression": {
																		"id": 694,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2397:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2401:6:3",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2397:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2383:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 697,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 676,
																"src": "2410:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2383:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b656e6420616d6f756e74206973206e6f7420656e6f756768",
															"id": 699,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2417:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0a51e3ccfcb7dff3e4508d9754427a1dcf902a3e7ae0f1e76d424fa84cc979df",
																"typeString": "literal_string \"Stakend amount is not enough\""
															},
															"value": "Stakend amount is not enough"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0a51e3ccfcb7dff3e4508d9754427a1dcf902a3e7ae0f1e76d424fa84cc979df",
																"typeString": "literal_string \"Stakend amount is not enough\""
															}
														],
														"id": 692,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2375:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2375:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 701,
												"nodeType": "ExpressionStatement",
												"src": "2375:73:3"
											},
											{
												"expression": {
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 702,
														"name": "totalStakedTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 475,
														"src": "2458:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 703,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 676,
														"src": "2477:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2458:25:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 705,
												"nodeType": "ExpressionStatement",
												"src": "2458:25:3"
											},
											{
												"expression": {
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 706,
															"name": "stakedBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "2493:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 709,
														"indexExpression": {
															"expression": {
																"id": 707,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2507:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 708,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2511:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2507:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2493:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 710,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 676,
														"src": "2520:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2493:33:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 712,
												"nodeType": "ExpressionStatement",
												"src": "2493:33:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 714,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2551:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2555:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2551:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 716,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "2563:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 713,
														"name": "Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 503,
														"src": "2541:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2541:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 718,
												"nodeType": "EmitStatement",
												"src": "2536:34:3"
											},
											{
												"assignments": [
													720
												],
												"declarations": [
													{
														"constant": false,
														"id": 720,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2585:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 733,
														"src": "2580:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 719,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2580:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 727,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 723,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2617:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2621:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2617:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 725,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "2628:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 721,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "2595:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															}
														},
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2608:8:3",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 109,
														"src": "2595:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2595:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2580:55:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 729,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "2654:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572204661696c6564",
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2662:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f",
																"typeString": "literal_string \"Transfer Failed\""
															},
															"value": "Transfer Failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f",
																"typeString": "literal_string \"Transfer Failed\""
															}
														],
														"id": 728,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2646:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2646:34:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 732,
												"nodeType": "ExpressionStatement",
												"src": "2646:34:3"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 734,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 679,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 678,
												"name": "nonReentrant",
												"nameLocations": [
													"2267:12:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 29,
												"src": "2267:12:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2267:12:3"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 681,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2293:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2297:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2293:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 683,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 680,
												"name": "updateReward",
												"nameLocations": [
													"2280:12:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 559,
												"src": "2280:12:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2280:24:3"
										}
									],
									"name": "withdraw",
									"nameLocation": "2236:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2250:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "2245:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2245:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2244:13:3"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2304:0:3"
									},
									"scope": 786,
									"src": "2227:460:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 784,
										"nodeType": "Block",
										"src": "2762:297:3",
										"statements": [
											{
												"assignments": [
													744
												],
												"declarations": [
													{
														"constant": false,
														"id": 744,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "2777:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 784,
														"src": "2772:11:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 743,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2772:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 749,
												"initialValue": {
													"baseExpression": {
														"id": 745,
														"name": "rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "2786:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 748,
													"indexExpression": {
														"expression": {
															"id": 746,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2794:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 747,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2798:6:3",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2794:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2786:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2772:33:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 751,
																"name": "reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 744,
																"src": "2823:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 752,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2832:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2823:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "204e6f7420686176696e6720616e792072657761726473",
															"id": 754,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2835:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_83296a6eed583e0226a90df39d089266d3dfd37319cb2df3db068ad3dd7facf6",
																"typeString": "literal_string \" Not having any rewards\""
															},
															"value": " Not having any rewards"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_83296a6eed583e0226a90df39d089266d3dfd37319cb2df3db068ad3dd7facf6",
																"typeString": "literal_string \" Not having any rewards\""
															}
														],
														"id": 750,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2815:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2815:46:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 756,
												"nodeType": "ExpressionStatement",
												"src": "2815:46:3"
											},
											{
												"expression": {
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 757,
															"name": "rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "2871:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 760,
														"indexExpression": {
															"expression": {
																"id": 758,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2879:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2883:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2879:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2871:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 761,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2893:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2871:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 763,
												"nodeType": "ExpressionStatement",
												"src": "2871:23:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 765,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2924:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2928:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2924:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 767,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "2936:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 764,
														"name": "RewardsClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 509,
														"src": "2909:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2909:34:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 769,
												"nodeType": "EmitStatement",
												"src": "2904:39:3"
											},
											{
												"assignments": [
													771
												],
												"declarations": [
													{
														"constant": false,
														"id": 771,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2958:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 784,
														"src": "2953:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 770,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2953:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 778,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 774,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2989:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2993:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2989:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 776,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "3000:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 772,
															"name": "rewardToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "2968:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															}
														},
														"id": 773,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2980:8:3",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 109,
														"src": "2968:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2968:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2953:54:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 780,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "3026:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572204661696c6564",
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3034:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f",
																"typeString": "literal_string \"Transfer Failed\""
															},
															"value": "Transfer Failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f",
																"typeString": "literal_string \"Transfer Failed\""
															}
														],
														"id": 779,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3018:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3018:34:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 783,
												"nodeType": "ExpressionStatement",
												"src": "3018:34:3"
											}
										]
									},
									"functionSelector": "b88a802f",
									"id": 785,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 737,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 736,
												"name": "nonReentrant",
												"nameLocations": [
													"2725:12:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 29,
												"src": "2725:12:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2725:12:3"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 739,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2751:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2755:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2751:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 741,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 738,
												"name": "updateReward",
												"nameLocations": [
													"2738:12:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 559,
												"src": "2738:12:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2738:24:3"
										}
									],
									"name": "claimReward",
									"nameLocation": "2702:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2713:2:3"
									},
									"returnParameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2762:0:3"
									},
									"scope": 786,
									"src": "2693:366:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 787,
							"src": "236:2825:3",
							"usedErrors": [],
							"usedEvents": [
								497,
								503,
								509
							]
						}
					],
					"src": "32:3029:3"
				},
				"id": 3
			}
		}
	}
}