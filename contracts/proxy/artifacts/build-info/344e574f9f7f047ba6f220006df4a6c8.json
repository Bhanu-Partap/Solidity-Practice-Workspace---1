{
	"id": "344e574f9f7f047ba6f220006df4a6c8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"erc3643/erc3643/proxy/TokenProxy.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity 0.8.17;\n\nimport \"./AbstractProxy.sol\";\n\ncontract TokenProxy is AbstractProxy {\n    constructor(\n        address implementationAuthority,\n        address _identityRegistry,\n        address _compliance,\n        string memory _name,\n        string memory _symbol,\n        uint8 _decimals,\n        uint16 maxsupply\n    ) {\n        require(\n            implementationAuthority != address(0) &&\n                _identityRegistry != address(0) &&\n                _compliance != address(0),\n            \"invalid argument - zero address\"\n        );\n        require(\n            keccak256(abi.encode(_name)) != keccak256(abi.encode(\"\")) &&\n                keccak256(abi.encode(_symbol)) != keccak256(abi.encode(\"\")),\n            \"invalid argument - empty string\"\n        );\n        require(0 <= _decimals && _decimals <= 18, \"decimals between 0 and 18\");\n        _storeImplementationAuthority(implementationAuthority);\n        emit ImplementationAuthoritySet(implementationAuthority);\n\n        address logic = Ifactory(getImplementationAuthority())\n            .getTokenImplementation();\n\n        // abi.encodeWithSignature(\"function signature\",all prameter of function)\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, ) = logic.delegatecall(\n            abi.encodeWithSignature(\n                \"init(address,address,string,string,uint8,uint16)\",\n                _identityRegistry,\n                _compliance,\n                _name,\n                _symbol,\n                _decimals,\n                maxsupply\n            )\n        );\n        require(success, \"Initialization failed.\");\n    }\n\n    // solhint-disable-next-line no-complex-fallback\n    fallback() external {\n        address logic = Ifactory(getImplementationAuthority())\n            .getTokenImplementation();\n\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            calldatacopy(0x0, 0x0, calldatasize())\n            let success := delegatecall(\n                sub(gas(), 10000),\n                logic,\n                0x0,\n                calldatasize(),\n                0,\n                0\n            )\n            let retSz := returndatasize()\n            returndatacopy(0, 0, retSz)\n            switch success\n            case 0 {\n                revert(0, retSz)\n            }\n            default {\n                return(0, retSz)\n            }\n        }\n    }\n\n    function get() public view returns (address) {\n        return Ifactory(getImplementationAuthority()).getTokenImplementation();\n    }\n}\n"
			},
			"erc3643/erc3643/proxy/AbstractProxy.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity 0.8.17;\n\nimport \"./IProxy.sol\";\nimport \"../factory/Ifactory.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\n\nabstract contract AbstractProxy is IProxy, Initializable {\n     //event ram(address _contractaddress);\n    function setImplementationAuthority(address _newImplementationAuthority)\n        external\n        override\n    {\n        require(\n            msg.sender == getImplementationAuthority(),\n            \"only current implementationAuthority can call\"\n        );\n        require(\n            _newImplementationAuthority != address(0),\n            \"invalid argument - zero address\"\n        );\n\n        _storeImplementationAuthority(_newImplementationAuthority);\n           //emit ram(logic);\n        emit ImplementationAuthoritySet(_newImplementationAuthority);\n\n    }\n\n    function getImplementationAuthority()\n        public\n        view\n        override\n        returns (address)\n    {\n        address implemAuth;\n\n        assembly {\n            implemAuth := sload(\n                0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7\n            )\n        }\n        return implemAuth;\n    }\n\n    function _storeImplementationAuthority(address implementationAuthority)\n        internal\n    {\n        assembly {\n            sstore(\n                0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7,\n                implementationAuthority\n            )\n        }\n    }\n\n    function getslot() public pure returns (bytes32) {\n        return bytes32(uint256(keccak256(\"eip1967.proxy.name\")) - 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized != type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"
			},
			"erc3643/erc3643/factory/Ifactory.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity 0.8.17;\n\ninterface Ifactory {\n    function getTokenImplementation() external view returns (address);\n\n    function getCTRImplementation() external view returns (address);\n\n    function getIRImplementation() external view returns (address);\n\n    function getIRSImplementation() external view returns (address);\n\n    function getTIRImplementation() external view returns (address);\n\n    function getMCImplementation() external view returns (address);\n}\n"
			},
			"erc3643/erc3643/proxy/IProxy.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity 0.8.17;\n\ninterface IProxy {\n    /// events\n\n    event ImplementationAuthoritySet(address indexed _implementationAuthority);\n\n    /// functions\n\n    function setImplementationAuthority(address _newImplementationAuthority)\n        external;\n\n    function getImplementationAuthority() external view returns (address);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"custom:oz-retyped-from": "bool",
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 6,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 9,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"AddressUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:9374  library AddressUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:9374  library AddressUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202266d23dc12ff1cc7fac7c3c8bf24c440e1b67cc8d2043a0abc016ca335310fc64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202266d23dc12ff1cc7fac7c3c8bf24c440e1b67cc8d2043a0abc016ca335310fc64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 PUSH7 0xD23DC12FF1CC7F 0xAC PUSH29 0x3C8BF24C440E1B67CC8D2043A0ABC016CA335310FC64736F6C63430008 GT STOP CALLER ",
							"sourceMap": "194:9180:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9180:1;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202266d23dc12ff1cc7fac7c3c8bf24c440e1b67cc8d2043a0abc016ca335310fc64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 PUSH7 0xD23DC12FF1CC7F 0xAC PUSH29 0x3C8BF24C440E1B67CC8D2043A0ABC016CA335310FC64736F6C63430008 GT STOP CALLER ",
							"sourceMap": "194:9180:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202266d23dc12ff1cc7fac7c3c8bf24c440e1b67cc8d2043a0abc016ca335310fc64736f6c63430008110033",
									".code": [
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"erc3643/erc3643/factory/Ifactory.sol",
								"erc3643/erc3643/proxy/AbstractProxy.sol",
								"erc3643/erc3643/proxy/IProxy.sol",
								"erc3643/erc3643/proxy/TokenProxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"erc3643/erc3643/factory/Ifactory.sol": {
				"Ifactory": {
					"abi": [
						{
							"inputs": [],
							"name": "getCTRImplementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getIRImplementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getIRSImplementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMCImplementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTIRImplementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTokenImplementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getCTRImplementation()": "6ff6e83f",
							"getIRImplementation()": "1ee9ce8b",
							"getIRSImplementation()": "9e3e7bb9",
							"getMCImplementation()": "61f89825",
							"getTIRImplementation()": "fedcc052",
							"getTokenImplementation()": "709bc7f3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getCTRImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getIRImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getIRSImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMCImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTIRImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc3643/erc3643/factory/Ifactory.sol\":\"Ifactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc3643/erc3643/factory/Ifactory.sol\":{\"keccak256\":\"0x3e67d4c86a65ff2e93eb27a5e31ba24c9f14a597fa91f06069c91e3585c2de74\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3100bde0bae1e70eaa034298af2005e5c7944ea46ae287c68f8400e36987730c\",\"dweb:/ipfs/QmZgXTqKRdxJyG7C4sX5cuY9TPKfSrBwMTeFRwXnojFJ7p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"erc3643/erc3643/proxy/AbstractProxy.sol": {
				"AbstractProxy": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_implementationAuthority",
									"type": "address"
								}
							],
							"name": "ImplementationAuthoritySet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "getImplementationAuthority",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getslot",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newImplementationAuthority",
									"type": "address"
								}
							],
							"name": "setImplementationAuthority",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getImplementationAuthority()": "2d5f1187",
							"getslot()": "24173669",
							"setImplementationAuthority(address)": "92dd9d65"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_implementationAuthority\",\"type\":\"address\"}],\"name\":\"ImplementationAuthoritySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getImplementationAuthority\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getslot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newImplementationAuthority\",\"type\":\"address\"}],\"name\":\"setImplementationAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"ImplementationAuthoritySet(address)\":{\"notice\":\"events\"}},\"kind\":\"user\",\"methods\":{\"setImplementationAuthority(address)\":{\"notice\":\"functions\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc3643/erc3643/proxy/AbstractProxy.sol\":\"AbstractProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"erc3643/erc3643/factory/Ifactory.sol\":{\"keccak256\":\"0x3e67d4c86a65ff2e93eb27a5e31ba24c9f14a597fa91f06069c91e3585c2de74\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3100bde0bae1e70eaa034298af2005e5c7944ea46ae287c68f8400e36987730c\",\"dweb:/ipfs/QmZgXTqKRdxJyG7C4sX5cuY9TPKfSrBwMTeFRwXnojFJ7p\"]},\"erc3643/erc3643/proxy/AbstractProxy.sol\":{\"keccak256\":\"0xbf32caa0e3838e074d57d5c4f3f9174fcf55952e993edb3a9aeb3cf09c7b9a6c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://4327b215eeacb0172cafb37386e10c435b640ff58042a38b84b8c7503c4203bb\",\"dweb:/ipfs/QmdjhVn77jpAyTbXvNXEh1SqXAxfV43kWEpXaHAdUv15DS\"]},\"erc3643/erc3643/proxy/IProxy.sol\":{\"keccak256\":\"0x6493d0ec313502af3a02f83a3fbb5480d39db3a835019e6d63758ed092ce261e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3341cfa96e3672e9f7f831844731dcd93bc68526f0dd6c130f07547c7ca49538\",\"dweb:/ipfs/QmV7FZqjcUvi4tmhuQrFG744jPqRP3SqqM7U6dWNEVHFJw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 6,
								"contract": "erc3643/erc3643/proxy/AbstractProxy.sol:AbstractProxy",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 9,
								"contract": "erc3643/erc3643/proxy/AbstractProxy.sol:AbstractProxy",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"events": {
							"ImplementationAuthoritySet(address)": {
								"notice": "events"
							}
						},
						"kind": "user",
						"methods": {
							"setImplementationAuthority(address)": {
								"notice": "functions"
							}
						},
						"version": 1
					}
				}
			},
			"erc3643/erc3643/proxy/IProxy.sol": {
				"IProxy": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_implementationAuthority",
									"type": "address"
								}
							],
							"name": "ImplementationAuthoritySet",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "getImplementationAuthority",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newImplementationAuthority",
									"type": "address"
								}
							],
							"name": "setImplementationAuthority",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getImplementationAuthority()": "2d5f1187",
							"setImplementationAuthority(address)": "92dd9d65"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_implementationAuthority\",\"type\":\"address\"}],\"name\":\"ImplementationAuthoritySet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getImplementationAuthority\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newImplementationAuthority\",\"type\":\"address\"}],\"name\":\"setImplementationAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"ImplementationAuthoritySet(address)\":{\"notice\":\"events\"}},\"kind\":\"user\",\"methods\":{\"setImplementationAuthority(address)\":{\"notice\":\"functions\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc3643/erc3643/proxy/IProxy.sol\":\"IProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc3643/erc3643/proxy/IProxy.sol\":{\"keccak256\":\"0x6493d0ec313502af3a02f83a3fbb5480d39db3a835019e6d63758ed092ce261e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3341cfa96e3672e9f7f831844731dcd93bc68526f0dd6c130f07547c7ca49538\",\"dweb:/ipfs/QmV7FZqjcUvi4tmhuQrFG744jPqRP3SqqM7U6dWNEVHFJw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"ImplementationAuthoritySet(address)": {
								"notice": "events"
							}
						},
						"kind": "user",
						"methods": {
							"setImplementationAuthority(address)": {
								"notice": "functions"
							}
						},
						"version": 1
					}
				}
			},
			"erc3643/erc3643/proxy/TokenProxy.sol": {
				"TokenProxy": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementationAuthority",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_identityRegistry",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_compliance",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								},
								{
									"internalType": "uint8",
									"name": "_decimals",
									"type": "uint8"
								},
								{
									"internalType": "uint16",
									"name": "maxsupply",
									"type": "uint16"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_implementationAuthority",
									"type": "address"
								}
							],
							"name": "ImplementationAuthoritySet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"stateMutability": "nonpayable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "get",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getImplementationAuthority",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getslot",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newImplementationAuthority",
									"type": "address"
								}
							],
							"name": "setImplementationAuthority",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":93:2587  contract TokenProxy is AbstractProxy {... */\n  mstore(0x40, 0x80)\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":136:1673  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":401:438  implementationAuthority != address(0) */\n  dup8\n  and\n  iszero\n  dup1\n  iszero\n  swap1\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":401:489  implementationAuthority != address(0) &&... */\n  tag_6\n  jumpi\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":458:489  _identityRegistry != address(0) */\n  dup7\n  and\n  iszero\n  iszero\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":401:489  implementationAuthority != address(0) &&... */\ntag_6:\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":401:534  implementationAuthority != address(0) &&... */\n  dup1\n  iszero\n  tag_7\n  jumpi\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":509:534  _compliance != address(0) */\n  dup6\n  and\n  iszero\n  iszero\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":401:534  implementationAuthority != address(0) &&... */\ntag_7:\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":380:591  require(... */\n  tag_8\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":2626:2628   */\n  0x20\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":380:591  require(... */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2608:2629   */\n  mstore\n    /* \"#utility.yul\":2665:2667   */\n  0x1f\n    /* \"#utility.yul\":2645:2663   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":2638:2668   */\n  mstore\n    /* \"#utility.yul\":2704:2737   */\n  0x696e76616c696420617267756d656e74202d207a65726f206164647265737300\n    /* \"#utility.yul\":2684:2702   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":2677:2738   */\n  mstore\n    /* \"#utility.yul\":2755:2773   */\n  0x64\n  add\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":380:591  require(... */\ntag_9:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_8:\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":664:678  abi.encode(\"\") */\n  add(0x20, mload(0x40))\n  tag_11\n  swap1\n    /* \"#utility.yul\":2986:2988   */\n  0x20\n    /* \"#utility.yul\":2968:2989   */\n  dup1\n  dup3\n  mstore\n    /* \"#utility.yul\":3025:3026   */\n  0x00\n    /* \"#utility.yul\":3005:3023   */\n  swap1\n  dup3\n  add\n    /* \"#utility.yul\":2998:3027   */\n  mstore\n    /* \"#utility.yul\":3059:3061   */\n  0x40\n    /* \"#utility.yul\":3044:3062   */\n  add\n  swap1\n    /* \"#utility.yul\":2784:3068   */\n  jump\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":664:678  abi.encode(\"\") */\ntag_11:\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":654:679  keccak256(abi.encode(\"\")) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":643:648  _name */\n  dup5\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":632:649  abi.encode(_name) */\n  add(0x20, mload(0x40))\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":622:650  keccak256(abi.encode(_name)) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":622:679  keccak256(abi.encode(_name)) != keccak256(abi.encode(\"\")) */\n  eq\n  iszero\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":622:758  keccak256(abi.encode(_name)) != keccak256(abi.encode(\"\")) &&... */\n  dup1\n  iszero\n  tag_15\n  jumpi\n  pop\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":743:757  abi.encode(\"\") */\n  add(0x20, mload(0x40))\n  tag_16\n  swap1\n    /* \"#utility.yul\":2986:2988   */\n  0x20\n    /* \"#utility.yul\":2968:2989   */\n  dup1\n  dup3\n  mstore\n    /* \"#utility.yul\":3025:3026   */\n  0x00\n    /* \"#utility.yul\":3005:3023   */\n  swap1\n  dup3\n  add\n    /* \"#utility.yul\":2998:3027   */\n  mstore\n    /* \"#utility.yul\":3059:3061   */\n  0x40\n    /* \"#utility.yul\":3044:3062   */\n  add\n  swap1\n    /* \"#utility.yul\":2784:3068   */\n  jump\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":743:757  abi.encode(\"\") */\ntag_16:\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":733:758  keccak256(abi.encode(\"\")) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":720:727  _symbol */\n  dup4\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":709:728  abi.encode(_symbol) */\n  add(0x20, mload(0x40))\n  tag_17\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_17:\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":699:729  keccak256(abi.encode(_symbol)) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":699:758  keccak256(abi.encode(_symbol)) != keccak256(abi.encode(\"\")) */\n  eq\n  iszero\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":622:758  keccak256(abi.encode(_name)) != keccak256(abi.encode(\"\")) &&... */\ntag_15:\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":601:815  require(... */\n  tag_18\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":3776:3778   */\n  0x20\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":601:815  require(... */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3758:3779   */\n  mstore\n    /* \"#utility.yul\":3815:3817   */\n  0x1f\n    /* \"#utility.yul\":3795:3813   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":3788:3818   */\n  mstore\n    /* \"#utility.yul\":3854:3887   */\n  0x696e76616c696420617267756d656e74202d20656d70747920737472696e6700\n    /* \"#utility.yul\":3834:3852   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":3827:3888   */\n  mstore\n    /* \"#utility.yul\":3905:3923   */\n  0x64\n  add\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":601:815  require(... */\n  tag_9\n    /* \"#utility.yul\":3574:3929   */\n  jump\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":601:815  require(... */\ntag_18:\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":864:866  18 */\n  0x12\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":851:860  _decimals */\n  dup3\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":851:866  _decimals <= 18 */\n  0xff\n  and\n  gt\n  iszero\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":825:896  require(0 <= _decimals && _decimals <= 18, \"decimals between 0 and 18\") */\n  tag_22\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":4136:4138   */\n  0x20\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":825:896  require(0 <= _decimals && _decimals <= 18, \"decimals between 0 and 18\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4118:4139   */\n  mstore\n    /* \"#utility.yul\":4175:4177   */\n  0x19\n    /* \"#utility.yul\":4155:4173   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":4148:4178   */\n  mstore\n    /* \"#utility.yul\":4214:4241   */\n  0x646563696d616c73206265747765656e203020616e6420313800000000000000\n    /* \"#utility.yul\":4194:4212   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":4187:4242   */\n  mstore\n    /* \"#utility.yul\":4259:4277   */\n  0x64\n  add\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":825:896  require(0 <= _decimals && _decimals <= 18, \"decimals between 0 and 18\") */\n  tag_9\n    /* \"#utility.yul\":3934:4283   */\n  jump\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":825:896  require(0 <= _decimals && _decimals <= 18, \"decimals between 0 and 18\") */\ntag_22:\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":906:960  _storeImplementationAuthority(implementationAuthority) */\n  tag_25\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":936:959  implementationAuthority */\n  dup8\n  0x00\n  dup1\n  mload\n  0x20\n  data_84a68099d90273a356d72f7f1ac67971932136236b8a743afb53ffad2bcdb03d\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":1337:1482  sstore(... */\n  sstore\n    /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":1211:1498  function _storeImplementationAuthority(address implementationAuthority)... */\n  jump\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":906:960  _storeImplementationAuthority(implementationAuthority) */\ntag_25:\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":975:1026  ImplementationAuthoritySet(implementationAuthority) */\n  mload(0x40)\n  sub(shl(0xa0, 0x01), 0x01)\n  dup9\n  and\n  swap1\n  0x3b1074392ed8e8424715d0dda2197eede67080b377fc8370e26f3e882207f6b8\n  swap1\n  0x00\n  swap1\n  log2\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":1037:1050  address logic */\n  0x00\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":1062:1090  getImplementationAuthority() */\n  tag_27\n  0x00\n  dup1\n  mload\n  0x20\n  data_84a68099d90273a356d72f7f1ac67971932136236b8a743afb53ffad2bcdb03d\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":1059:1162  sload(... */\n  sload\n  swap1\n    /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":870:1205  function getImplementationAuthority()... */\n  jump\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":1062:1090  getImplementationAuthority() */\ntag_27:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":1053:1127  Ifactory(getImplementationAuthority())... */\n  and\n  0x709bc7f3\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":1053:1129  Ifactory(getImplementationAuthority())... */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_30\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_30:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_31\n  swap2\n  swap1\n  tag_32\n  jump\t// in\ntag_31:\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":1037:1129  address logic = Ifactory(getImplementationAuthority())... */\n  swap1\n  pop\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":1283:1295  bool success */\n  0x00\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":1301:1306  logic */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":1301:1319  logic.delegatecall */\n  and\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":1442:1459  _identityRegistry */\n  dup9\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":1477:1488  _compliance */\n  dup9\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":1506:1511  _name */\n  dup9\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":1529:1536  _symbol */\n  dup9\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":1554:1563  _decimals */\n  dup9\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":1581:1590  maxsupply */\n  dup9\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":1333:1604  abi.encodeWithSignature(... */\n  add(0x24, mload(0x40))\n  tag_33\n  swap7\n  swap6\n  swap5\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_34\n  jump\t// in\ntag_33:\n  0x40\n  dup1\n  mload\n  not(0x1f)\n  dup2\n  dup5\n  sub\n  add\n  dup2\n  mstore\n  swap2\n  dup2\n  mstore\n  0x20\n  dup3\n  add\n  dup1\n  mload\n  sub(shl(0xe0, 0x01), 0x01)\n  and\n  shl(0xe0, 0x41aef413)\n  or\n  swap1\n  mstore\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":1301:1614  logic.delegatecall(... */\n  mload\n  tag_35\n  swap2\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":1333:1604  abi.encodeWithSignature(... */\n  swap1\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":1301:1614  logic.delegatecall(... */\n  tag_36\n  jump\t// in\ntag_35:\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup6\n  gas\n  delegatecall\n  swap2\n  pop\n  pop\n  returndatasize\n  dup1\n  0x00\n  dup2\n  eq\n  tag_39\n  jumpi\n  mload(0x40)\n  swap2\n  pop\n  and(add(returndatasize, 0x3f), not(0x1f))\n  dup3\n  add\n  0x40\n  mstore\n  returndatasize\n  dup3\n  mstore\n  returndatasize\n  0x00\n  0x20\n  dup5\n  add\n  returndatacopy\n  jump(tag_38)\ntag_39:\n  0x60\n  swap2\n  pop\ntag_38:\n  pop\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":1282:1614  (bool success, ) = logic.delegatecall(... */\n  pop\n  swap1\n  pop\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":1632:1639  success */\n  dup1\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":1624:1666  require(success, \"Initialization failed.\") */\n  tag_40\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":5745:5747   */\n  0x20\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":1624:1666  require(success, \"Initialization failed.\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":5727:5748   */\n  mstore\n    /* \"#utility.yul\":5784:5786   */\n  0x16\n    /* \"#utility.yul\":5764:5782   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":5757:5787   */\n  mstore\n    /* \"#utility.yul\":5823:5847   */\n  0x496e697469616c697a6174696f6e206661696c65642e00000000000000000000\n    /* \"#utility.yul\":5803:5821   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":5796:5848   */\n  mstore\n    /* \"#utility.yul\":5865:5883   */\n  0x64\n  add\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":1624:1666  require(success, \"Initialization failed.\") */\n  tag_9\n    /* \"#utility.yul\":5543:5889   */\n  jump\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":1624:1666  require(success, \"Initialization failed.\") */\ntag_40:\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":370:1673  {... */\n  pop\n  pop\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":136:1673  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":93:2587  contract TokenProxy is AbstractProxy {... */\n  jump(tag_51)\n    /* \"#utility.yul\":14:191   */\ntag_46:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_53\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_53:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:323   */\ntag_47:\n    /* \"#utility.yul\":257:267   */\n  0x4e487b71\n    /* \"#utility.yul\":252:255   */\n  0xe0\n    /* \"#utility.yul\":248:268   */\n  shl\n    /* \"#utility.yul\":245:246   */\n  0x00\n    /* \"#utility.yul\":238:269   */\n  mstore\n    /* \"#utility.yul\":288:292   */\n  0x41\n    /* \"#utility.yul\":285:286   */\n  0x04\n    /* \"#utility.yul\":278:293   */\n  mstore\n    /* \"#utility.yul\":312:316   */\n  0x24\n    /* \"#utility.yul\":309:310   */\n  0x00\n    /* \"#utility.yul\":302:317   */\n  revert\n    /* \"#utility.yul\":328:578   */\ntag_48:\n    /* \"#utility.yul\":413:414   */\n  0x00\n    /* \"#utility.yul\":423:536   */\ntag_56:\n    /* \"#utility.yul\":437:443   */\n  dup4\n    /* \"#utility.yul\":434:435   */\n  dup2\n    /* \"#utility.yul\":431:444   */\n  lt\n    /* \"#utility.yul\":423:536   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":513:524   */\n  dup2\n  dup2\n  add\n    /* \"#utility.yul\":507:525   */\n  mload\n    /* \"#utility.yul\":494:505   */\n  dup4\n  dup3\n  add\n    /* \"#utility.yul\":487:526   */\n  mstore\n    /* \"#utility.yul\":459:461   */\n  0x20\n    /* \"#utility.yul\":452:462   */\n  add\n    /* \"#utility.yul\":423:536   */\n  jump(tag_56)\ntag_58:\n  pop\n  pop\n    /* \"#utility.yul\":570:571   */\n  0x00\n    /* \"#utility.yul\":552:568   */\n  swap2\n  add\n    /* \"#utility.yul\":545:572   */\n  mstore\n    /* \"#utility.yul\":328:578   */\n  jump\t// out\n    /* \"#utility.yul\":583:1282   */\ntag_49:\n    /* \"#utility.yul\":637:642   */\n  0x00\n    /* \"#utility.yul\":690:693   */\n  dup3\n    /* \"#utility.yul\":683:687   */\n  0x1f\n    /* \"#utility.yul\":675:681   */\n  dup4\n    /* \"#utility.yul\":671:688   */\n  add\n    /* \"#utility.yul\":667:694   */\n  slt\n    /* \"#utility.yul\":657:712   */\n  tag_60\n  jumpi\n    /* \"#utility.yul\":708:709   */\n  0x00\n    /* \"#utility.yul\":705:706   */\n  dup1\n    /* \"#utility.yul\":698:710   */\n  revert\n    /* \"#utility.yul\":657:712   */\ntag_60:\n    /* \"#utility.yul\":731:744   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":793:803   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":790:826   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":806:824   */\n  tag_62\n  tag_47\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":881:883   */\n  0x40\n    /* \"#utility.yul\":875:884   */\n  mload\n    /* \"#utility.yul\":849:851   */\n  0x1f\n    /* \"#utility.yul\":935:948   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":931:953   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":955:957   */\n  0x3f\n    /* \"#utility.yul\":927:958   */\n  add\n    /* \"#utility.yul\":923:963   */\n  and\n    /* \"#utility.yul\":911:964   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":979:997   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":999:1021   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":976:1022   */\n  or\n    /* \"#utility.yul\":973:1045   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":1025:1043   */\n  tag_64\n  tag_47\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":1065:1075   */\n  dup2\n    /* \"#utility.yul\":1061:1063   */\n  0x40\n    /* \"#utility.yul\":1054:1076   */\n  mstore\n    /* \"#utility.yul\":1100:1102   */\n  dup4\n    /* \"#utility.yul\":1092:1098   */\n  dup2\n    /* \"#utility.yul\":1085:1103   */\n  mstore\n    /* \"#utility.yul\":1146:1149   */\n  dup7\n    /* \"#utility.yul\":1139:1143   */\n  0x20\n    /* \"#utility.yul\":1134:1136   */\n  dup6\n    /* \"#utility.yul\":1126:1132   */\n  dup9\n    /* \"#utility.yul\":1122:1137   */\n  add\n    /* \"#utility.yul\":1118:1144   */\n  add\n    /* \"#utility.yul\":1115:1150   */\n  gt\n    /* \"#utility.yul\":1112:1167   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":1163:1164   */\n  0x00\n    /* \"#utility.yul\":1160:1161   */\n  dup1\n    /* \"#utility.yul\":1153:1165   */\n  revert\n    /* \"#utility.yul\":1112:1167   */\ntag_65:\n    /* \"#utility.yul\":1176:1252   */\n  tag_66\n    /* \"#utility.yul\":1249:1251   */\n  dup5\n    /* \"#utility.yul\":1242:1246   */\n  0x20\n    /* \"#utility.yul\":1234:1240   */\n  dup4\n    /* \"#utility.yul\":1230:1247   */\n  add\n    /* \"#utility.yul\":1223:1227   */\n  0x20\n    /* \"#utility.yul\":1215:1221   */\n  dup10\n    /* \"#utility.yul\":1211:1228   */\n  add\n    /* \"#utility.yul\":1176:1252   */\n  tag_48\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1270:1276   */\n  swap7\n    /* \"#utility.yul\":583:1282   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1287:2419   */\ntag_3:\n    /* \"#utility.yul\":1428:1434   */\n  0x00\n    /* \"#utility.yul\":1436:1442   */\n  dup1\n    /* \"#utility.yul\":1444:1450   */\n  0x00\n    /* \"#utility.yul\":1452:1458   */\n  dup1\n    /* \"#utility.yul\":1460:1466   */\n  0x00\n    /* \"#utility.yul\":1468:1474   */\n  dup1\n    /* \"#utility.yul\":1476:1482   */\n  0x00\n    /* \"#utility.yul\":1529:1532   */\n  0xe0\n    /* \"#utility.yul\":1517:1526   */\n  dup9\n    /* \"#utility.yul\":1508:1515   */\n  dup11\n    /* \"#utility.yul\":1504:1527   */\n  sub\n    /* \"#utility.yul\":1500:1533   */\n  slt\n    /* \"#utility.yul\":1497:1550   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":1546:1547   */\n  0x00\n    /* \"#utility.yul\":1543:1544   */\n  dup1\n    /* \"#utility.yul\":1536:1548   */\n  revert\n    /* \"#utility.yul\":1497:1550   */\ntag_68:\n    /* \"#utility.yul\":1569:1609   */\n  tag_69\n    /* \"#utility.yul\":1599:1608   */\n  dup9\n    /* \"#utility.yul\":1569:1609   */\n  tag_46\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1559:1609   */\n  swap7\n  pop\n    /* \"#utility.yul\":1628:1677   */\n  tag_70\n    /* \"#utility.yul\":1673:1675   */\n  0x20\n    /* \"#utility.yul\":1662:1671   */\n  dup10\n    /* \"#utility.yul\":1658:1676   */\n  add\n    /* \"#utility.yul\":1628:1677   */\n  tag_46\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1618:1677   */\n  swap6\n  pop\n    /* \"#utility.yul\":1696:1745   */\n  tag_71\n    /* \"#utility.yul\":1741:1743   */\n  0x40\n    /* \"#utility.yul\":1730:1739   */\n  dup10\n    /* \"#utility.yul\":1726:1744   */\n  add\n    /* \"#utility.yul\":1696:1745   */\n  tag_46\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":1789:1791   */\n  0x60\n    /* \"#utility.yul\":1774:1792   */\n  dup10\n  add\n    /* \"#utility.yul\":1768:1793   */\n  mload\n    /* \"#utility.yul\":1686:1745   */\n  swap1\n  swap6\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1842:1856   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1839:1873   */\n  iszero\n  tag_72\n  jumpi\n    /* \"#utility.yul\":1869:1870   */\n  0x00\n    /* \"#utility.yul\":1866:1867   */\n  dup1\n    /* \"#utility.yul\":1859:1871   */\n  revert\n    /* \"#utility.yul\":1839:1873   */\ntag_72:\n    /* \"#utility.yul\":1892:1953   */\n  tag_73\n    /* \"#utility.yul\":1945:1952   */\n  dup12\n    /* \"#utility.yul\":1936:1942   */\n  dup4\n    /* \"#utility.yul\":1925:1934   */\n  dup13\n    /* \"#utility.yul\":1921:1943   */\n  add\n    /* \"#utility.yul\":1892:1953   */\n  tag_49\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":1882:1953   */\n  swap6\n  pop\n    /* \"#utility.yul\":1999:2002   */\n  0x80\n    /* \"#utility.yul\":1988:1997   */\n  dup11\n    /* \"#utility.yul\":1984:2003   */\n  add\n    /* \"#utility.yul\":1978:2004   */\n  mload\n    /* \"#utility.yul\":1962:2004   */\n  swap2\n  pop\n    /* \"#utility.yul\":2029:2031   */\n  dup1\n    /* \"#utility.yul\":2019:2027   */\n  dup3\n    /* \"#utility.yul\":2016:2032   */\n  gt\n    /* \"#utility.yul\":2013:2049   */\n  iszero\n  tag_74\n  jumpi\n    /* \"#utility.yul\":2045:2046   */\n  0x00\n    /* \"#utility.yul\":2042:2043   */\n  dup1\n    /* \"#utility.yul\":2035:2047   */\n  revert\n    /* \"#utility.yul\":2013:2049   */\ntag_74:\n  pop\n    /* \"#utility.yul\":2068:2131   */\n  tag_75\n    /* \"#utility.yul\":2123:2130   */\n  dup11\n    /* \"#utility.yul\":2112:2120   */\n  dup3\n    /* \"#utility.yul\":2101:2110   */\n  dup12\n    /* \"#utility.yul\":2097:2121   */\n  add\n    /* \"#utility.yul\":2068:2131   */\n  tag_49\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2058:2131   */\n  swap4\n  pop\n  pop\n    /* \"#utility.yul\":2174:2177   */\n  0xa0\n    /* \"#utility.yul\":2163:2172   */\n  dup9\n    /* \"#utility.yul\":2159:2178   */\n  add\n    /* \"#utility.yul\":2153:2179   */\n  mload\n    /* \"#utility.yul\":2219:2223   */\n  0xff\n    /* \"#utility.yul\":2212:2217   */\n  dup2\n    /* \"#utility.yul\":2208:2224   */\n  and\n    /* \"#utility.yul\":2201:2206   */\n  dup2\n    /* \"#utility.yul\":2198:2225   */\n  eq\n    /* \"#utility.yul\":2188:2243   */\n  tag_76\n  jumpi\n    /* \"#utility.yul\":2239:2240   */\n  0x00\n    /* \"#utility.yul\":2236:2237   */\n  dup1\n    /* \"#utility.yul\":2229:2241   */\n  revert\n    /* \"#utility.yul\":2188:2243   */\ntag_76:\n    /* \"#utility.yul\":2312:2315   */\n  0xc0\n    /* \"#utility.yul\":2297:2316   */\n  dup10\n  add\n    /* \"#utility.yul\":2291:2317   */\n  mload\n    /* \"#utility.yul\":2262:2267   */\n  swap1\n  swap3\n  pop\n    /* \"#utility.yul\":2361:2367   */\n  0xffff\n    /* \"#utility.yul\":2348:2368   */\n  dup2\n  and\n    /* \"#utility.yul\":2336:2369   */\n  dup2\n  eq\n    /* \"#utility.yul\":2326:2387   */\n  tag_77\n  jumpi\n    /* \"#utility.yul\":2383:2384   */\n  0x00\n    /* \"#utility.yul\":2380:2381   */\n  dup1\n    /* \"#utility.yul\":2373:2385   */\n  revert\n    /* \"#utility.yul\":2326:2387   */\ntag_77:\n    /* \"#utility.yul\":2406:2413   */\n  dup1\n    /* \"#utility.yul\":2396:2413   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":1287:2419   */\n  swap3\n  swap6\n  swap9\n  swap2\n  swap5\n  swap8\n  pop\n  swap3\n  swap6\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3073:3344   */\ntag_50:\n    /* \"#utility.yul\":3115:3118   */\n  0x00\n    /* \"#utility.yul\":3153:3158   */\n  dup2\n    /* \"#utility.yul\":3147:3159   */\n  mload\n    /* \"#utility.yul\":3180:3186   */\n  dup1\n    /* \"#utility.yul\":3175:3178   */\n  dup5\n    /* \"#utility.yul\":3168:3187   */\n  mstore\n    /* \"#utility.yul\":3196:3272   */\n  tag_81\n    /* \"#utility.yul\":3265:3271   */\n  dup2\n    /* \"#utility.yul\":3258:3262   */\n  0x20\n    /* \"#utility.yul\":3253:3256   */\n  dup7\n    /* \"#utility.yul\":3249:3263   */\n  add\n    /* \"#utility.yul\":3242:3246   */\n  0x20\n    /* \"#utility.yul\":3235:3240   */\n  dup7\n    /* \"#utility.yul\":3231:3247   */\n  add\n    /* \"#utility.yul\":3196:3272   */\n  tag_48\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":3326:3328   */\n  0x1f\n    /* \"#utility.yul\":3305:3320   */\n  add\n  not(0x1f)\n    /* \"#utility.yul\":3301:3330   */\n  and\n    /* \"#utility.yul\":3292:3331   */\n  swap3\n  swap1\n  swap3\n  add\n    /* \"#utility.yul\":3333:3337   */\n  0x20\n    /* \"#utility.yul\":3288:3338   */\n  add\n  swap3\n    /* \"#utility.yul\":3073:3344   */\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3349:3569   */\ntag_14:\n    /* \"#utility.yul\":3498:3500   */\n  0x20\n    /* \"#utility.yul\":3487:3496   */\n  dup2\n    /* \"#utility.yul\":3480:3501   */\n  mstore\n    /* \"#utility.yul\":3461:3465   */\n  0x00\n    /* \"#utility.yul\":3518:3563   */\n  tag_83\n    /* \"#utility.yul\":3559:3561   */\n  0x20\n    /* \"#utility.yul\":3548:3557   */\n  dup4\n    /* \"#utility.yul\":3544:3562   */\n  add\n    /* \"#utility.yul\":3536:3542   */\n  dup5\n    /* \"#utility.yul\":3518:3563   */\n  tag_50\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":3510:3563   */\n  swap4\n    /* \"#utility.yul\":3349:3569   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4288:4496   */\ntag_32:\n    /* \"#utility.yul\":4358:4364   */\n  0x00\n    /* \"#utility.yul\":4411:4413   */\n  0x20\n    /* \"#utility.yul\":4399:4408   */\n  dup3\n    /* \"#utility.yul\":4390:4397   */\n  dup5\n    /* \"#utility.yul\":4386:4409   */\n  sub\n    /* \"#utility.yul\":4382:4414   */\n  slt\n    /* \"#utility.yul\":4379:4431   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":4427:4428   */\n  0x00\n    /* \"#utility.yul\":4424:4425   */\n  dup1\n    /* \"#utility.yul\":4417:4429   */\n  revert\n    /* \"#utility.yul\":4379:4431   */\ntag_87:\n    /* \"#utility.yul\":4450:4490   */\n  tag_83\n    /* \"#utility.yul\":4480:4489   */\n  dup3\n    /* \"#utility.yul\":4450:4490   */\n  tag_46\n  jump\t// in\n    /* \"#utility.yul\":4501:5246   */\ntag_34:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":4842:4857   */\n  dup8\n  dup2\n  and\n    /* \"#utility.yul\":4824:4858   */\n  dup3\n  mstore\n    /* \"#utility.yul\":4894:4909   */\n  dup7\n  and\n    /* \"#utility.yul\":4889:4891   */\n  0x20\n    /* \"#utility.yul\":4874:4892   */\n  dup3\n  add\n    /* \"#utility.yul\":4867:4910   */\n  mstore\n    /* \"#utility.yul\":4946:4949   */\n  0xc0\n    /* \"#utility.yul\":4941:4943   */\n  0x40\n    /* \"#utility.yul\":4926:4944   */\n  dup3\n  add\n    /* \"#utility.yul\":4919:4950   */\n  dup2\n  swap1\n  mstore\n    /* \"#utility.yul\":4767:4771   */\n  0x00\n  swap1\n    /* \"#utility.yul\":4973:5019   */\n  tag_90\n  swap1\n    /* \"#utility.yul\":4999:5018   */\n  dup4\n  add\n    /* \"#utility.yul\":4991:4997   */\n  dup8\n    /* \"#utility.yul\":4973:5019   */\n  tag_50\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":5067:5076   */\n  dup3\n    /* \"#utility.yul\":5059:5065   */\n  dup2\n    /* \"#utility.yul\":5055:5077   */\n  sub\n    /* \"#utility.yul\":5050:5052   */\n  0x60\n    /* \"#utility.yul\":5039:5048   */\n  dup5\n    /* \"#utility.yul\":5035:5053   */\n  add\n    /* \"#utility.yul\":5028:5078   */\n  mstore\n    /* \"#utility.yul\":5095:5128   */\n  tag_91\n    /* \"#utility.yul\":5121:5127   */\n  dup2\n    /* \"#utility.yul\":5113:5119   */\n  dup8\n    /* \"#utility.yul\":5095:5128   */\n  tag_50\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":5087:5128   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":5177:5181   */\n  0xff\n    /* \"#utility.yul\":5169:5175   */\n  dup5\n    /* \"#utility.yul\":5165:5182   */\n  and\n    /* \"#utility.yul\":5159:5162   */\n  0x80\n    /* \"#utility.yul\":5148:5157   */\n  dup4\n    /* \"#utility.yul\":5144:5163   */\n  add\n    /* \"#utility.yul\":5137:5183   */\n  mstore\n    /* \"#utility.yul\":5232:5238   */\n  0xffff\n    /* \"#utility.yul\":5224:5230   */\n  dup4\n    /* \"#utility.yul\":5220:5239   */\n  and\n    /* \"#utility.yul\":5214:5217   */\n  0xa0\n    /* \"#utility.yul\":5203:5212   */\n  dup4\n    /* \"#utility.yul\":5199:5218   */\n  add\n    /* \"#utility.yul\":5192:5240   */\n  mstore\n    /* \"#utility.yul\":4501:5246   */\n  swap8\n  swap7\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5251:5538   */\ntag_36:\n    /* \"#utility.yul\":5380:5383   */\n  0x00\n    /* \"#utility.yul\":5418:5424   */\n  dup3\n    /* \"#utility.yul\":5412:5425   */\n  mload\n    /* \"#utility.yul\":5434:5500   */\n  tag_93\n    /* \"#utility.yul\":5493:5499   */\n  dup2\n    /* \"#utility.yul\":5488:5491   */\n  dup5\n    /* \"#utility.yul\":5481:5485   */\n  0x20\n    /* \"#utility.yul\":5473:5479   */\n  dup8\n    /* \"#utility.yul\":5469:5486   */\n  add\n    /* \"#utility.yul\":5434:5500   */\n  tag_48\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":5516:5532   */\n  swap2\n  swap1\n  swap2\n  add\n  swap3\n    /* \"#utility.yul\":5251:5538   */\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5543:5889   */\ntag_51:\n    /* \"erc3643/erc3643/proxy/TokenProxy.sol\":93:2587  contract TokenProxy is AbstractProxy {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_84a68099d90273a356d72f7f1ac67971932136236b8a743afb53ffad2bcdb03d c5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7\n\nsub_0: assembly {\n        /* \"erc3643/erc3643/proxy/TokenProxy.sol\":93:2587  contract TokenProxy is AbstractProxy {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x24173669\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2d5f1187\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x6d4ce63c\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x92dd9d65\n      eq\n      tag_7\n      jumpi\n    tag_2:\n        /* \"erc3643/erc3643/proxy/TokenProxy.sol\":1762:1775  address logic */\n      0x00\n        /* \"erc3643/erc3643/proxy/TokenProxy.sol\":1787:1815  getImplementationAuthority() */\n      tag_10\n      0x00\n      dup1\n      mload\n      0x20\n      data_84a68099d90273a356d72f7f1ac67971932136236b8a743afb53ffad2bcdb03d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":1059:1162  sload(... */\n      sload\n      swap1\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":870:1205  function getImplementationAuthority()... */\n      jump\n        /* \"erc3643/erc3643/proxy/TokenProxy.sol\":1787:1815  getImplementationAuthority() */\n    tag_10:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/proxy/TokenProxy.sol\":1778:1852  Ifactory(getImplementationAuthority())... */\n      and\n      0x709bc7f3\n        /* \"erc3643/erc3643/proxy/TokenProxy.sol\":1778:1854  Ifactory(getImplementationAuthority())... */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_13\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_13:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n        /* \"erc3643/erc3643/proxy/TokenProxy.sol\":1762:1854  address logic = Ifactory(getImplementationAuthority())... */\n      swap1\n      pop\n        /* \"erc3643/erc3643/proxy/TokenProxy.sol\":1967:1981  calldatasize() */\n      calldatasize\n        /* \"erc3643/erc3643/proxy/TokenProxy.sol\":1962:1965  0x0 */\n      0x00\n        /* \"erc3643/erc3643/proxy/TokenProxy.sol\":1957:1960  0x0 */\n      dup1\n        /* \"erc3643/erc3643/proxy/TokenProxy.sol\":1944:1982  calldatacopy(0x0, 0x0, calldatasize()) */\n      calldatacopy\n        /* \"erc3643/erc3643/proxy/TokenProxy.sol\":2170:2171  0 */\n      0x00\n        /* \"erc3643/erc3643/proxy/TokenProxy.sol\":2151:2152  0 */\n      dup1\n        /* \"erc3643/erc3643/proxy/TokenProxy.sol\":2119:2133  calldatasize() */\n      calldatasize\n        /* \"erc3643/erc3643/proxy/TokenProxy.sol\":2098:2101  0x0 */\n      0x00\n        /* \"erc3643/erc3643/proxy/TokenProxy.sol\":2075:2080  logic */\n      dup5\n        /* \"erc3643/erc3643/proxy/TokenProxy.sol\":2051:2056  10000 */\n      0x2710\n        /* \"erc3643/erc3643/proxy/TokenProxy.sol\":2044:2049  gas() */\n      gas\n        /* \"erc3643/erc3643/proxy/TokenProxy.sol\":2040:2057  sub(gas(), 10000) */\n      sub\n        /* \"erc3643/erc3643/proxy/TokenProxy.sol\":2010:2185  delegatecall(... */\n      delegatecall\n        /* \"erc3643/erc3643/proxy/TokenProxy.sol\":2211:2227  returndatasize() */\n      returndatasize\n        /* \"erc3643/erc3643/proxy/TokenProxy.sol\":2261:2266  retSz */\n      dup1\n        /* \"erc3643/erc3643/proxy/TokenProxy.sol\":2258:2259  0 */\n      0x00\n        /* \"erc3643/erc3643/proxy/TokenProxy.sol\":2255:2256  0 */\n      dup1\n        /* \"erc3643/erc3643/proxy/TokenProxy.sol\":2240:2267  returndatacopy(0, 0, retSz) */\n      returndatacopy\n        /* \"erc3643/erc3643/proxy/TokenProxy.sol\":2287:2294  success */\n      dup2\n        /* \"erc3643/erc3643/proxy/TokenProxy.sol\":2307:2362  case 0 {... */\n      dup1\n      iszero\n      tag_17\n      jumpi\n        /* \"erc3643/erc3643/proxy/TokenProxy.sol\":2411:2416  retSz */\n      dup2\n        /* \"erc3643/erc3643/proxy/TokenProxy.sol\":2408:2409  0 */\n      0x00\n        /* \"erc3643/erc3643/proxy/TokenProxy.sol\":2401:2417  return(0, retSz) */\n      return\n        /* \"erc3643/erc3643/proxy/TokenProxy.sol\":2307:2362  case 0 {... */\n    tag_17:\n        /* \"erc3643/erc3643/proxy/TokenProxy.sol\":2342:2347  retSz */\n      dup2\n        /* \"erc3643/erc3643/proxy/TokenProxy.sol\":2339:2340  0 */\n      0x00\n        /* \"erc3643/erc3643/proxy/TokenProxy.sol\":2332:2348  revert(0, retSz) */\n      revert\n        /* \"erc3643/erc3643/proxy/TokenProxy.sol\":2280:2431  switch success... */\n    tag_16:\n      stop\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":1504:1630  function getslot() public pure returns (bytes32) {... */\n    tag_4:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":552:577   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":540:542   */\n      0x20\n        /* \"#utility.yul\":525:543   */\n      add\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":1504:1630  function getslot() public pure returns (bytes32) {... */\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":870:1205  function getImplementationAuthority()... */\n    tag_5:\n      0x00\n      dup1\n      mload\n      0x20\n      data_84a68099d90273a356d72f7f1ac67971932136236b8a743afb53ffad2bcdb03d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":1059:1162  sload(... */\n      sload\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":870:1205  function getImplementationAuthority()... */\n    tag_22:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":752:784   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":734:785   */\n      dup2\n      mstore\n        /* \"#utility.yul\":722:724   */\n      0x20\n        /* \"#utility.yul\":707:725   */\n      add\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":870:1205  function getImplementationAuthority()... */\n      tag_20\n        /* \"#utility.yul\":588:791   */\n      jump\n        /* \"erc3643/erc3643/proxy/TokenProxy.sol\":2453:2585  function get() public view returns (address) {... */\n    tag_6:\n      tag_22\n      tag_26\n      jump\t// in\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":303:864  function setImplementationAuthority(address _newImplementationAuthority)... */\n    tag_7:\n      tag_16\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":1504:1630  function getslot() public pure returns (bytes32) {... */\n    tag_19:\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":1544:1551  bytes32 */\n      0x00\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":1578:1622  uint256(keccak256(\"eip1967.proxy.name\")) - 1 */\n      tag_34\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":1621:1622  1 */\n      0x01\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":1586:1617  keccak256(\"eip1967.proxy.name\") */\n      0x4cd9b827ca535ceb0880425d70eff88561ecdf04dc32fcf7ff3b15c587f8a871\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":1578:1622  uint256(keccak256(\"eip1967.proxy.name\")) - 1 */\n      tag_35\n      jump\t// in\n    tag_34:\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":1570:1623  bytes32(uint256(keccak256(\"eip1967.proxy.name\")) - 1) */\n      swap2\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":1504:1630  function getslot() public pure returns (bytes32) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"erc3643/erc3643/proxy/TokenProxy.sol\":2453:2585  function get() public view returns (address) {... */\n    tag_26:\n        /* \"erc3643/erc3643/proxy/TokenProxy.sol\":2489:2496  address */\n      0x00\n        /* \"erc3643/erc3643/proxy/TokenProxy.sol\":2524:2552  getImplementationAuthority() */\n      tag_37\n      0x00\n      dup1\n      mload\n      0x20\n      data_84a68099d90273a356d72f7f1ac67971932136236b8a743afb53ffad2bcdb03d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":1059:1162  sload(... */\n      sload\n      swap1\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":870:1205  function getImplementationAuthority()... */\n      jump\n        /* \"erc3643/erc3643/proxy/TokenProxy.sol\":2524:2552  getImplementationAuthority() */\n    tag_37:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/proxy/TokenProxy.sol\":2515:2576  Ifactory(getImplementationAuthority()).getTokenImplementation */\n      and\n      0x709bc7f3\n        /* \"erc3643/erc3643/proxy/TokenProxy.sol\":2515:2578  Ifactory(getImplementationAuthority()).getTokenImplementation() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_39\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_39:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_40:\n        /* \"erc3643/erc3643/proxy/TokenProxy.sol\":2508:2578  return Ifactory(getImplementationAuthority()).getTokenImplementation() */\n      swap1\n      pop\n        /* \"erc3643/erc3643/proxy/TokenProxy.sol\":2453:2585  function get() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":303:864  function setImplementationAuthority(address _newImplementationAuthority)... */\n    tag_31:\n      0x00\n      dup1\n      mload\n      0x20\n      data_84a68099d90273a356d72f7f1ac67971932136236b8a743afb53ffad2bcdb03d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":1059:1162  sload(... */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":445:487  msg.sender == getImplementationAuthority() */\n      and\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":445:455  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":445:487  msg.sender == getImplementationAuthority() */\n      and\n      eq\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":424:558  require(... */\n      tag_43\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1480:1482   */\n      0x20\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":424:558  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1462:1483   */\n      mstore\n        /* \"#utility.yul\":1519:1521   */\n      0x2d\n        /* \"#utility.yul\":1499:1517   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1492:1522   */\n      mstore\n        /* \"#utility.yul\":1558:1592   */\n      0x6f6e6c792063757272656e7420696d706c656d656e746174696f6e417574686f\n        /* \"#utility.yul\":1538:1556   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1531:1593   */\n      mstore\n      shl(0x9a, 0x1c9a5d1e4818d85b8818d85b1b)\n        /* \"#utility.yul\":1609:1627   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":1602:1645   */\n      mstore\n        /* \"#utility.yul\":1662:1681   */\n      0x84\n      add\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":424:558  require(... */\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":589:630  _newImplementationAuthority != address(0) */\n      dup2\n      and\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":568:687  require(... */\n      tag_46\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1894:1896   */\n      0x20\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":568:687  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1876:1897   */\n      mstore\n        /* \"#utility.yul\":1933:1935   */\n      0x1f\n        /* \"#utility.yul\":1913:1931   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1906:1936   */\n      mstore\n        /* \"#utility.yul\":1972:2005   */\n      0x696e76616c696420617267756d656e74202d207a65726f206164647265737300\n        /* \"#utility.yul\":1952:1970   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1945:2006   */\n      mstore\n        /* \"#utility.yul\":2023:2041   */\n      0x64\n      add\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":568:687  require(... */\n      tag_44\n        /* \"#utility.yul\":1692:2047   */\n      jump\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":568:687  require(... */\n    tag_46:\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":698:756  _storeImplementationAuthority(_newImplementationAuthority) */\n      tag_49\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":728:755  _newImplementationAuthority */\n      dup2\n      0x00\n      dup1\n      mload\n      0x20\n      data_84a68099d90273a356d72f7f1ac67971932136236b8a743afb53ffad2bcdb03d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":1337:1482  sstore(... */\n      sstore\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":1211:1498  function _storeImplementationAuthority(address implementationAuthority)... */\n      jump\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":698:756  _storeImplementationAuthority(_newImplementationAuthority) */\n    tag_49:\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":801:856  ImplementationAuthoritySet(_newImplementationAuthority) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      swap1\n      0x3b1074392ed8e8424715d0dda2197eede67080b377fc8370e26f3e882207f6b8\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":303:864  function setImplementationAuthority(address _newImplementationAuthority)... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_52:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":89:120   */\n      dup2\n      and\n        /* \"#utility.yul\":79:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":69:139   */\n      tag_55\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":69:139   */\n    tag_55:\n        /* \"#utility.yul\":14:145   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":150:401   */\n    tag_15:\n        /* \"#utility.yul\":220:226   */\n      0x00\n        /* \"#utility.yul\":273:275   */\n      0x20\n        /* \"#utility.yul\":261:270   */\n      dup3\n        /* \"#utility.yul\":252:259   */\n      dup5\n        /* \"#utility.yul\":248:271   */\n      sub\n        /* \"#utility.yul\":244:276   */\n      slt\n        /* \"#utility.yul\":241:293   */\n      iszero\n      tag_57\n      jumpi\n        /* \"#utility.yul\":289:290   */\n      0x00\n        /* \"#utility.yul\":286:287   */\n      dup1\n        /* \"#utility.yul\":279:291   */\n      revert\n        /* \"#utility.yul\":241:293   */\n    tag_57:\n        /* \"#utility.yul\":321:330   */\n      dup2\n        /* \"#utility.yul\":315:331   */\n      mload\n        /* \"#utility.yul\":340:371   */\n      tag_58\n        /* \"#utility.yul\":365:370   */\n      dup2\n        /* \"#utility.yul\":340:371   */\n      tag_52\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":390:395   */\n      swap4\n        /* \"#utility.yul\":150:401   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":796:1043   */\n    tag_30:\n        /* \"#utility.yul\":855:861   */\n      0x00\n        /* \"#utility.yul\":908:910   */\n      0x20\n        /* \"#utility.yul\":896:905   */\n      dup3\n        /* \"#utility.yul\":887:894   */\n      dup5\n        /* \"#utility.yul\":883:906   */\n      sub\n        /* \"#utility.yul\":879:911   */\n      slt\n        /* \"#utility.yul\":876:928   */\n      iszero\n      tag_62\n      jumpi\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":921:922   */\n      dup1\n        /* \"#utility.yul\":914:926   */\n      revert\n        /* \"#utility.yul\":876:928   */\n    tag_62:\n        /* \"#utility.yul\":963:972   */\n      dup2\n        /* \"#utility.yul\":950:973   */\n      calldataload\n        /* \"#utility.yul\":982:1013   */\n      tag_58\n        /* \"#utility.yul\":1007:1012   */\n      dup2\n        /* \"#utility.yul\":982:1013   */\n      tag_52\n      jump\t// in\n        /* \"#utility.yul\":1048:1273   */\n    tag_35:\n        /* \"#utility.yul\":1115:1124   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":1136:1147   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":1133:1267   */\n      iszero\n      tag_65\n      jumpi\n        /* \"#utility.yul\":1189:1199   */\n      0x4e487b71\n        /* \"#utility.yul\":1184:1187   */\n      0xe0\n        /* \"#utility.yul\":1180:1200   */\n      shl\n        /* \"#utility.yul\":1177:1178   */\n      0x00\n        /* \"#utility.yul\":1170:1201   */\n      mstore\n        /* \"#utility.yul\":1224:1228   */\n      0x11\n        /* \"#utility.yul\":1221:1222   */\n      0x04\n        /* \"#utility.yul\":1214:1229   */\n      mstore\n        /* \"#utility.yul\":1252:1256   */\n      0x24\n        /* \"#utility.yul\":1249:1250   */\n      0x00\n        /* \"#utility.yul\":1242:1257   */\n      revert\n        /* \"#utility.yul\":1133:1267   */\n    tag_65:\n        /* \"#utility.yul\":1048:1273   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_84a68099d90273a356d72f7f1ac67971932136236b8a743afb53ffad2bcdb03d c5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7\n\n    auxdata: 0xa264697066735822122035f57acd2ccff16f7f0902c64c2c5361dce22407268bd9a0e594499d03337ad964736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_759": {
									"entryPoint": null,
									"id": 759,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@_storeImplementationAuthority_594": {
									"entryPoint": null,
									"id": 594,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getImplementationAuthority_587": {
									"entryPoint": null,
									"id": 587,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 1011,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 1100,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 1537,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_string_memory_ptrt_string_memory_ptrt_uint8t_uint16_fromMemory": {
									"entryPoint": 1245,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_encode_string": {
									"entryPoint": 1463,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1666,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_string_memory_ptr_t_string_memory_ptr_t_uint8_t_uint16__to_t_address_t_address_t_string_memory_ptr_t_string_memory_ptr_t_uint8_t_uint16__fromStack_reversed": {
									"entryPoint": 1567,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_84817bd958e2e6d9a7351828ba5fd352a3aaf3cf97a67f6d55271e39a5b3e2ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b90f43756a4f782856c713cd01f80842eeab7c1edc08be84635b711bcde2baf8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dc9856d8b4713539728c52fe152810735e90f1ce90842036c15fecf2b16c2a36__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1062,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1040,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5891:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "74:117:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "84:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "93:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "169:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "178:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "154:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "159:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "163:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "118:50:6"
															},
															"nodeType": "YulIf",
															"src": "115:70:6"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "53:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:6",
														"type": ""
													}
												],
												"src": "14:177:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "228:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "245:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "252:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "257:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "248:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "248:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "238:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "238:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "238:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "285:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "288:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "278:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "278:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "278:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "309:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "312:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "302:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "302:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "196:127:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "394:184:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "404:10:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "413:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "408:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "473:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "498:3:6"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "503:1:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "494:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "494:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "517:3:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "522:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "513:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "513:11:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "507:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "507:18:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "487:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "487:39:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "487:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "434:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "437:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "431:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "431:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "445:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "447:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "456:1:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "459:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "452:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "452:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "447:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "427:3:6",
																"statements": []
															},
															"src": "423:113:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "556:3:6"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "561:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "552:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "552:16:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "570:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "545:27:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "545:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "372:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "377:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "382:6:6",
														"type": ""
													}
												],
												"src": "328:250:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "647:635:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "696:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "705:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "708:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "698:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "698:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "698:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "675:6:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "683:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "671:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "671:17:6"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "690:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "667:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "667:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "660:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "660:35:6"
															},
															"nodeType": "YulIf",
															"src": "657:55:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "721:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "737:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "731:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "731:13:6"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "725:2:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "753:28:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "771:2:6",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "775:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "767:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "767:10:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "779:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "763:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:18:6"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "757:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "804:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "806:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "806:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "806:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "796:2:6"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "800:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "793:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "793:10:6"
															},
															"nodeType": "YulIf",
															"src": "790:36:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "835:17:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "849:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:7:6"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "839:2:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "861:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "881:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "875:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "875:9:6"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "865:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "893:71:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "915:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "939:2:6"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "943:4:6",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "935:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "935:13:6"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "950:2:6"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "931:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "931:22:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "955:2:6",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "927:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "927:31:6"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "960:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "923:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "923:40:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "911:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "911:53:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "897:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1023:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1025:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1025:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1025:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "982:10:6"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "994:2:6"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "979:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "979:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1002:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1014:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "999:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "999:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "976:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "976:46:6"
															},
															"nodeType": "YulIf",
															"src": "973:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1061:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1065:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1054:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1054:22:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1054:22:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1092:6:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1100:2:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1085:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1085:18:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1085:18:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1151:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1160:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1163:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1153:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1153:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1153:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1126:6:6"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1134:2:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1122:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1122:15:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1139:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1118:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1118:26:6"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1146:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1115:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1115:35:6"
															},
															"nodeType": "YulIf",
															"src": "1112:55:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1215:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1223:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1211:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1211:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1234:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1242:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1230:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1230:17:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1249:2:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "1176:34:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1176:76:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1176:76:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1261:15:6",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1270:6:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1261:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "621:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "629:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "637:5:6",
														"type": ""
													}
												],
												"src": "583:699:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1487:932:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1534:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1543:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1546:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1536:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1536:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1536:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1508:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1517:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1504:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1504:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1529:3:6",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1500:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1500:33:6"
															},
															"nodeType": "YulIf",
															"src": "1497:53:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1559:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1599:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1569:29:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1569:40:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1559:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1618:59:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1662:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1673:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1658:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1658:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1628:29:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1628:49:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1618:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1686:59:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1730:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1741:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1726:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1726:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1696:29:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1696:49:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1686:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1754:39:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1778:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1789:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1774:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1774:18:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1768:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1768:25:6"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1758:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1802:28:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1820:2:6",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1824:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1816:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1816:10:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1828:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1812:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1812:18:6"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1806:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1857:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1866:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1869:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1859:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1859:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1859:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1845:6:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1853:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1842:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1842:14:6"
															},
															"nodeType": "YulIf",
															"src": "1839:34:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1882:71:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1925:9:6"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1936:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1921:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1921:22:6"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1945:7:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1892:28:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1892:61:6"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1882:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1962:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1988:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1999:3:6",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1984:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1984:19:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1978:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1978:26:6"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1966:8:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2033:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2042:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2045:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2035:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2035:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2035:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "2019:8:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2029:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2016:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2016:16:6"
															},
															"nodeType": "YulIf",
															"src": "2013:36:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2058:73:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2101:9:6"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "2112:8:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2097:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2097:24:6"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2123:7:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2068:28:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2068:63:6"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "2058:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2140:39:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2163:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2174:3:6",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2159:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2159:19:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2153:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2153:26:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2144:5:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2227:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2236:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2239:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2229:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2229:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2229:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2201:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2212:5:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2219:4:6",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2208:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2208:16:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2198:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2198:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2191:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2191:35:6"
															},
															"nodeType": "YulIf",
															"src": "2188:55:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2252:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2262:5:6"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "2252:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2276:41:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2301:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2312:3:6",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2297:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2297:19:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2291:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2291:26:6"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "2280:7:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2371:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2380:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2383:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2373:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2373:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2373:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nodeType": "YulIdentifier",
																				"src": "2339:7:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value_1",
																						"nodeType": "YulIdentifier",
																						"src": "2352:7:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2361:6:6",
																						"type": "",
																						"value": "0xffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2348:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2348:20:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2336:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2336:33:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2329:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2329:41:6"
															},
															"nodeType": "YulIf",
															"src": "2326:61:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2396:17:6",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "2406:7:6"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nodeType": "YulIdentifier",
																	"src": "2396:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_string_memory_ptrt_string_memory_ptrt_uint8t_uint16_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1405:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1416:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1428:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1436:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1444:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1452:6:6",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1460:6:6",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "1468:6:6",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "1476:6:6",
														"type": ""
													}
												],
												"src": "1287:1132:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2598:181:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2615:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2626:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2608:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2608:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2608:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2649:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2660:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2645:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2645:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2665:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2638:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2638:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2638:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2688:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2699:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2684:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2684:18:6"
																	},
																	{
																		"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2704:33:6",
																		"type": "",
																		"value": "invalid argument - zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2677:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2677:61:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2677:61:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2747:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2759:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2770:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2755:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2755:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2747:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2575:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2589:4:6",
														"type": ""
													}
												],
												"src": "2424:355:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2958:110:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2975:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2986:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2968:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2968:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2968:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3009:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3020:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3005:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3005:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3025:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2998:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2998:29:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2998:29:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3036:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3048:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3059:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3044:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3044:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3036:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2935:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2949:4:6",
														"type": ""
													}
												],
												"src": "2784:284:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3123:221:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3133:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3153:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3147:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3147:12:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3137:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3175:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3180:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3168:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3168:19:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3168:19:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3235:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3242:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3231:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3231:16:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3253:3:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3258:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3249:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3249:14:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3265:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "3196:34:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3196:76:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3196:76:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3281:57:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3296:3:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "3309:6:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3317:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3305:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3305:15:6"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3326:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3322:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3322:7:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3301:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3301:29:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3292:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3292:39:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3333:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3288:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3288:50:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3281:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3100:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3107:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3115:3:6",
														"type": ""
													}
												],
												"src": "3073:271:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3470:99:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3487:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3498:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3480:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3480:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3480:21:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3510:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3536:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3548:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3559:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3544:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3544:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "3518:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3518:45:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3510:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3439:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3450:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3461:4:6",
														"type": ""
													}
												],
												"src": "3349:220:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3748:181:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3765:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3776:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3758:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3758:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3758:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3799:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3810:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3795:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3795:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3815:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3788:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3788:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3788:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3838:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3849:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3834:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3834:18:6"
																	},
																	{
																		"hexValue": "696e76616c696420617267756d656e74202d20656d70747920737472696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3854:33:6",
																		"type": "",
																		"value": "invalid argument - empty string"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3827:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3827:61:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3827:61:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3897:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3909:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3920:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3905:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3905:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3897:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dc9856d8b4713539728c52fe152810735e90f1ce90842036c15fecf2b16c2a36__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3725:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3739:4:6",
														"type": ""
													}
												],
												"src": "3574:355:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4108:175:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4125:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4136:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4118:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4118:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4118:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4159:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4170:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4155:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4155:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4175:2:6",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4148:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4148:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4148:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4198:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4209:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4194:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4194:18:6"
																	},
																	{
																		"hexValue": "646563696d616c73206265747765656e203020616e64203138",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4214:27:6",
																		"type": "",
																		"value": "decimals between 0 and 18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4187:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4187:55:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4187:55:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4251:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4263:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4274:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4259:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4259:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4251:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b90f43756a4f782856c713cd01f80842eeab7c1edc08be84635b711bcde2baf8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4085:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4099:4:6",
														"type": ""
													}
												],
												"src": "3934:349:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4369:127:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4415:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4424:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4427:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4417:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4417:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4417:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4390:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4399:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4386:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4386:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4411:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4382:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4382:32:6"
															},
															"nodeType": "YulIf",
															"src": "4379:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4440:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4480:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "4450:29:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4450:40:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4440:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4335:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4346:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4358:6:6",
														"type": ""
													}
												],
												"src": "4288:208:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4776:470:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4786:29:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4804:3:6",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4809:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4800:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4800:11:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4813:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4796:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4796:19:6"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4790:2:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4831:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4846:6:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4854:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4842:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4842:15:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4824:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4824:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4824:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4878:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4889:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4874:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4874:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4898:6:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4906:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4894:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4894:15:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4867:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4867:43:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4867:43:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4930:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4941:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4926:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4926:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4946:3:6",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4919:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4919:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4919:31:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4959:60:6",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4991:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5003:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5014:3:6",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4999:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4999:19:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "4973:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4973:46:6"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "4963:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5039:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5050:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5035:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5035:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "5059:6:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5067:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5055:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5055:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5028:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5028:50:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5028:50:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5087:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "5113:6:6"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "5121:6:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "5095:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5095:33:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5087:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5148:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5159:3:6",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5144:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5144:19:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nodeType": "YulIdentifier",
																				"src": "5169:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5177:4:6",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5165:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5165:17:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5137:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5137:46:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5137:46:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5203:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5214:3:6",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5199:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5199:19:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value5",
																				"nodeType": "YulIdentifier",
																				"src": "5224:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5232:6:6",
																				"type": "",
																				"value": "0xffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5220:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5220:19:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5192:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5192:48:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5192:48:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_string_memory_ptr_t_string_memory_ptr_t_uint8_t_uint16__to_t_address_t_address_t_string_memory_ptr_t_string_memory_ptr_t_uint8_t_uint16__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4705:9:6",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "4716:6:6",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4724:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4732:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4740:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4748:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4756:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4767:4:6",
														"type": ""
													}
												],
												"src": "4501:745:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5388:150:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5398:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5418:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5412:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5412:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5402:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5473:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5481:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5469:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5469:17:6"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5488:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5493:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "5434:34:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5434:66:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5434:66:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5509:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5520:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5525:6:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5516:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5516:16:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5509:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5364:3:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5369:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5380:3:6",
														"type": ""
													}
												],
												"src": "5251:287:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5717:172:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5734:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5745:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5727:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5727:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5727:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5768:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5779:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5764:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5764:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5784:2:6",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5757:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5757:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5757:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5807:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5818:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5803:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5803:18:6"
																	},
																	{
																		"hexValue": "496e697469616c697a6174696f6e206661696c65642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5823:24:6",
																		"type": "",
																		"value": "Initialization failed."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5796:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5796:52:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5796:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5857:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5869:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5880:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5865:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5865:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5857:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_84817bd958e2e6d9a7351828ba5fd352a3aaf3cf97a67f6d55271e39a5b3e2ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5694:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5708:4:6",
														"type": ""
													}
												],
												"src": "5543:346:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        copy_memory_to_memory_with_cleanup(add(offset, 0x20), add(memPtr, 0x20), _1)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_string_memory_ptrt_string_memory_ptrt_uint8t_uint16_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n        let offset := mload(add(headStart, 96))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value3 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 128))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value4 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        let value := mload(add(headStart, 160))\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value5 := value\n        let value_1 := mload(add(headStart, 192))\n        if iszero(eq(value_1, and(value_1, 0xffff))) { revert(0, 0) }\n        value6 := value_1\n    }\n    function abi_encode_tuple_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"invalid argument - zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 0)\n        tail := add(headStart, 64)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_dc9856d8b4713539728c52fe152810735e90f1ce90842036c15fecf2b16c2a36__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"invalid argument - empty string\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b90f43756a4f782856c713cd01f80842eeab7c1edc08be84635b711bcde2baf8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"decimals between 0 and 18\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n    }\n    function abi_encode_tuple_t_address_t_address_t_string_memory_ptr_t_string_memory_ptr_t_uint8_t_uint16__to_t_address_t_address_t_string_memory_ptr_t_string_memory_ptr_t_uint8_t_uint16__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 192)\n        let tail_1 := abi_encode_string(value2, add(headStart, 192))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        tail := abi_encode_string(value3, tail_1)\n        mstore(add(headStart, 128), and(value4, 0xff))\n        mstore(add(headStart, 160), and(value5, 0xffff))\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_84817bd958e2e6d9a7351828ba5fd352a3aaf3cf97a67f6d55271e39a5b3e2ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Initialization failed.\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000ad538038062000ad58339810160408190526200003491620004dd565b6001600160a01b038716158015906200005557506001600160a01b03861615155b80156200006a57506001600160a01b03851615155b620000bc5760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f20616464726573730060448201526064015b60405180910390fd5b604051602001620000d890602080825260009082015260400190565b6040516020818303038152906040528051906020012084604051602001620001019190620005e5565b60405160208183030381529060405280519060200120141580156200017f57506040516020016200013d90602080825260009082015260400190565b6040516020818303038152906040528051906020012083604051602001620001669190620005e5565b6040516020818303038152906040528051906020012014155b620001cd5760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d20656d70747920737472696e67006044820152606401620000b3565b60128260ff161115620002235760405162461bcd60e51b815260206004820152601960248201527f646563696d616c73206265747765656e203020616e64203138000000000000006044820152606401620000b3565b6200023b8760008051602062000ab583398151915255565b6040516001600160a01b038816907f3b1074392ed8e8424715d0dda2197eede67080b377fc8370e26f3e882207f6b890600090a260006200028960008051602062000ab58339815191525490565b6001600160a01b031663709bc7f36040518163ffffffff1660e01b8152600401602060405180830381865afa158015620002c7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002ed919062000601565b90506000816001600160a01b031688888888888860405160240162000318969594939291906200061f565b60408051601f198184030181529181526020820180516001600160e01b03166341aef41360e01b179052516200034f919062000682565b600060405180830381855af49150503d80600081146200038c576040519150601f19603f3d011682016040523d82523d6000602084013e62000391565b606091505b5050905080620003e45760405162461bcd60e51b815260206004820152601660248201527f496e697469616c697a6174696f6e206661696c65642e000000000000000000006044820152606401620000b3565b505050505050505050620006a0565b80516001600160a01b03811681146200040b57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b838110156200044357818101518382015260200162000429565b50506000910152565b600082601f8301126200045e57600080fd5b81516001600160401b03808211156200047b576200047b62000410565b604051601f8301601f19908116603f01168101908282118183101715620004a657620004a662000410565b81604052838152866020858801011115620004c057600080fd5b620004d384602083016020890162000426565b9695505050505050565b600080600080600080600060e0888a031215620004f957600080fd5b6200050488620003f3565b96506200051460208901620003f3565b95506200052460408901620003f3565b60608901519095506001600160401b03808211156200054257600080fd5b620005508b838c016200044c565b955060808a01519150808211156200056757600080fd5b50620005768a828b016200044c565b93505060a088015160ff811681146200058e57600080fd5b60c089015190925061ffff81168114620005a757600080fd5b8091505092959891949750929550565b60008151808452620005d181602086016020860162000426565b601f01601f19169290920160200192915050565b602081526000620005fa6020830184620005b7565b9392505050565b6000602082840312156200061457600080fd5b620005fa82620003f3565b6001600160a01b0387811682528616602082015260c0604082018190526000906200064d90830187620005b7565b8281036060840152620006618187620005b7565b91505060ff8416608083015261ffff831660a0830152979650505050505050565b600082516200069681846020870162000426565b9190910192915050565b61040580620006b06000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806324173669146100f25780632d5f11871461010d5780636d4ce63c1461013657806392dd9d651461013e575b60006100646000805160206103b08339815191525490565b6001600160a01b031663709bc7f36040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100c59190610347565b90503660008037600080366000846127105a03f43d806000803e8180156100eb57816000f35b816000fd5b005b6100fa610151565b6040519081526020015b60405180910390f35b6000805160206103b0833981519152545b6040516001600160a01b039091168152602001610104565b61011e610183565b6100f061014c36600461036b565b610201565b600061017e60017f4cd9b827ca535ceb0880425d70eff88561ecdf04dc32fcf7ff3b15c587f8a871610388565b919050565b600061019b6000805160206103b08339815191525490565b6001600160a01b031663709bc7f36040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101fc9190610347565b905090565b6000805160206103b0833981519152546001600160a01b0316336001600160a01b03161461028c5760405162461bcd60e51b815260206004820152602d60248201527f6f6e6c792063757272656e7420696d706c656d656e746174696f6e417574686f60448201526c1c9a5d1e4818d85b8818d85b1b609a1b60648201526084015b60405180910390fd5b6001600160a01b0381166102e25760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f2061646472657373006044820152606401610283565b6102f8816000805160206103b083398151915255565b6040516001600160a01b038216907f3b1074392ed8e8424715d0dda2197eede67080b377fc8370e26f3e882207f6b890600090a250565b6001600160a01b038116811461034457600080fd5b50565b60006020828403121561035957600080fd5b81516103648161032f565b9392505050565b60006020828403121561037d57600080fd5b81356103648161032f565b818103818111156103a957634e487b7160e01b600052601160045260246000fd5b9291505056fec5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7a264697066735822122035f57acd2ccff16f7f0902c64c2c5361dce22407268bd9a0e594499d03337ad964736f6c63430008110033c5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xAD5 CODESIZE SUB DUP1 PUSH3 0xAD5 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x4DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND ISZERO DUP1 ISZERO SWAP1 PUSH3 0x55 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH3 0x6A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO ISZERO JUMPDEST PUSH3 0xBC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E74202D207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0xD8 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x0 SWAP1 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x101 SWAP2 SWAP1 PUSH3 0x5E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ ISZERO DUP1 ISZERO PUSH3 0x17F JUMPI POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x13D SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x0 SWAP1 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x166 SWAP2 SWAP1 PUSH3 0x5E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ ISZERO JUMPDEST PUSH3 0x1CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E74202D20656D70747920737472696E6700 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xB3 JUMP JUMPDEST PUSH1 0x12 DUP3 PUSH1 0xFF AND GT ISZERO PUSH3 0x223 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x646563696D616C73206265747765656E203020616E6420313800000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xB3 JUMP JUMPDEST PUSH3 0x23B DUP8 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0xAB5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH32 0x3B1074392ED8E8424715D0DDA2197EEDE67080B377FC8370E26F3E882207F6B8 SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH1 0x0 PUSH3 0x289 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0xAB5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x709BC7F3 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x2C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x2ED SWAP2 SWAP1 PUSH3 0x601 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH3 0x318 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x61F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x41AEF413 PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH3 0x34F SWAP2 SWAP1 PUSH3 0x682 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH3 0x38C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH3 0x391 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH3 0x3E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A6174696F6E206661696C65642E00000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xB3 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP PUSH3 0x6A0 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x40B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x443 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x429 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x45E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x47B JUMPI PUSH3 0x47B PUSH3 0x410 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x4A6 JUMPI PUSH3 0x4A6 PUSH3 0x410 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x4C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x4D3 DUP5 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP10 ADD PUSH3 0x426 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH3 0x4F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x504 DUP9 PUSH3 0x3F3 JUMP JUMPDEST SWAP7 POP PUSH3 0x514 PUSH1 0x20 DUP10 ADD PUSH3 0x3F3 JUMP JUMPDEST SWAP6 POP PUSH3 0x524 PUSH1 0x40 DUP10 ADD PUSH3 0x3F3 JUMP JUMPDEST PUSH1 0x60 DUP10 ADD MLOAD SWAP1 SWAP6 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x542 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x550 DUP12 DUP4 DUP13 ADD PUSH3 0x44C JUMP JUMPDEST SWAP6 POP PUSH1 0x80 DUP11 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x567 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x576 DUP11 DUP3 DUP12 ADD PUSH3 0x44C JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 DUP9 ADD MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH3 0x58E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xC0 DUP10 ADD MLOAD SWAP1 SWAP3 POP PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH3 0x5A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH3 0x5D1 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH3 0x426 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH3 0x5FA PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x5B7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x614 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x5FA DUP3 PUSH3 0x3F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP3 MSTORE DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xC0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH3 0x64D SWAP1 DUP4 ADD DUP8 PUSH3 0x5B7 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH3 0x661 DUP2 DUP8 PUSH3 0x5B7 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xFF DUP5 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0xFFFF DUP4 AND PUSH1 0xA0 DUP4 ADD MSTORE SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH3 0x696 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH3 0x426 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x405 DUP1 PUSH3 0x6B0 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x24173669 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x2D5F1187 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x6D4CE63C EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x92DD9D65 EQ PUSH2 0x13E JUMPI JUMPDEST PUSH1 0x0 PUSH2 0x64 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3B0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x709BC7F3 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC5 SWAP2 SWAP1 PUSH2 0x347 JUMP JUMPDEST SWAP1 POP CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 PUSH2 0x2710 GAS SUB DELEGATECALL RETURNDATASIZE DUP1 PUSH1 0x0 DUP1 RETURNDATACOPY DUP2 DUP1 ISZERO PUSH2 0xEB JUMPI DUP2 PUSH1 0x0 RETURN JUMPDEST DUP2 PUSH1 0x0 REVERT JUMPDEST STOP JUMPDEST PUSH2 0xFA PUSH2 0x151 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3B0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH2 0x11E PUSH2 0x183 JUMP JUMPDEST PUSH2 0xF0 PUSH2 0x14C CALLDATASIZE PUSH1 0x4 PUSH2 0x36B JUMP JUMPDEST PUSH2 0x201 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17E PUSH1 0x1 PUSH32 0x4CD9B827CA535CEB0880425D70EFF88561ECDF04DC32FCF7FF3B15C587F8A871 PUSH2 0x388 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3B0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x709BC7F3 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x347 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3B0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x28C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C792063757272656E7420696D706C656D656E746174696F6E417574686F PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1C9A5D1E4818D85B8818D85B1B PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E74202D207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x283 JUMP JUMPDEST PUSH2 0x2F8 DUP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3B0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x3B1074392ED8E8424715D0DDA2197EEDE67080B377FC8370E26F3E882207F6B8 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x359 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x364 DUP2 PUSH2 0x32F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x364 DUP2 PUSH2 0x32F JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x3A9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID 0xC5 CALL PUSH16 0xFCC639FA48A6947836D9850F5047985 0x23 0xBF DUP13 SWAP11 GASPRICE DUP8 0xD5 DUP8 PUSH13 0xF622BCF7A26469706673582212 KECCAK256 CALLDATALOAD CREATE2 PUSH27 0xCD2CCFF16F7F0902C64C2C5361DCE22407268BD9A0E594499D0333 PUSH27 0xD964736F6C63430008110033C5F16F0FCC639FA48A6947836D9850 CREATE2 DIV PUSH26 0x8523BF8C9A3A87D5876CF622BCF7000000000000000000000000 ",
							"sourceMap": "93:2494:5:-:0;;;136:1537;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;401:37:5;;;;;;:88;;-1:-1:-1;;;;;;458:31:5;;;;401:88;:133;;;;-1:-1:-1;;;;;;509:25:5;;;;401:133;380:211;;;;-1:-1:-1;;;380:211:5;;2626:2:6;380:211:5;;;2608:21:6;2665:2;2645:18;;;2638:30;2704:33;2684:18;;;2677:61;2755:18;;380:211:5;;;;;;;;;664:14;;;;;;2986:2:6;2968:21;;;3025:1;3005:18;;;2998:29;3059:2;3044:18;;2784:284;664:14:5;;;;;;;;;;;;;654:25;;;;;;643:5;632:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;622:28;;;;;;:57;;:136;;;;;743:14;;;;;;2986:2:6;2968:21;;;3025:1;3005:18;;;2998:29;3059:2;3044:18;;2784:284;743:14:5;;;;;;;;;;;;;733:25;;;;;;720:7;709:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;699:30;;;;;;:59;;622:136;601:214;;;;-1:-1:-1;;;601:214:5;;3776:2:6;601:214:5;;;3758:21:6;3815:2;3795:18;;;3788:30;3854:33;3834:18;;;3827:61;3905:18;;601:214:5;3574:355:6;601:214:5;864:2;851:9;:15;;;;825:71;;;;-1:-1:-1;;;825:71:5;;4136:2:6;825:71:5;;;4118:21:6;4175:2;4155:18;;;4148:30;4214:27;4194:18;;;4187:55;4259:18;;825:71:5;3934:349:6;825:71:5;906:54;936:23;-1:-1:-1;;;;;;;;;;;1337:145:3;1211:287;906:54:5;975:51;;-1:-1:-1;;;;;975:51:5;;;;;;;;1037:13;1062:28;-1:-1:-1;;;;;;;;;;;1059:103:3;;870:335;1062:28:5;-1:-1:-1;;;;;1053:74:5;;:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1037:92;;1283:12;1301:5;-1:-1:-1;;;;;1301:18:5;1442:17;1477:11;1506:5;1529:7;1554:9;1581;1333:271;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1333:271:5;;;;;;;;;;;;;;-1:-1:-1;;;;;1333:271:5;-1:-1:-1;;;1333:271:5;;;1301:313;;;1333:271;1301:313;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1282:332;;;1632:7;1624:42;;;;-1:-1:-1;;;1624:42:5;;5745:2:6;1624:42:5;;;5727:21:6;5784:2;5764:18;;;5757:30;5823:24;5803:18;;;5796:52;5865:18;;1624:42:5;5543:346:6;1624:42:5;370:1303;;136:1537;;;;;;;93:2494;;14:177:6;93:13;;-1:-1:-1;;;;;135:31:6;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:250;413:1;423:113;437:6;434:1;431:13;423:113;;;513:11;;;507:18;494:11;;;487:39;459:2;452:10;423:113;;;-1:-1:-1;;570:1:6;552:16;;545:27;328:250::o;583:699::-;637:5;690:3;683:4;675:6;671:17;667:27;657:55;;708:1;705;698:12;657:55;731:13;;-1:-1:-1;;;;;793:10:6;;;790:36;;;806:18;;:::i;:::-;881:2;875:9;849:2;935:13;;-1:-1:-1;;931:22:6;;;955:2;927:31;923:40;911:53;;;979:18;;;999:22;;;976:46;973:72;;;1025:18;;:::i;:::-;1065:10;1061:2;1054:22;1100:2;1092:6;1085:18;1146:3;1139:4;1134:2;1126:6;1122:15;1118:26;1115:35;1112:55;;;1163:1;1160;1153:12;1112:55;1176:76;1249:2;1242:4;1234:6;1230:17;1223:4;1215:6;1211:17;1176:76;:::i;:::-;1270:6;583:699;-1:-1:-1;;;;;;583:699:6:o;1287:1132::-;1428:6;1436;1444;1452;1460;1468;1476;1529:3;1517:9;1508:7;1504:23;1500:33;1497:53;;;1546:1;1543;1536:12;1497:53;1569:40;1599:9;1569:40;:::i;:::-;1559:50;;1628:49;1673:2;1662:9;1658:18;1628:49;:::i;:::-;1618:59;;1696:49;1741:2;1730:9;1726:18;1696:49;:::i;:::-;1789:2;1774:18;;1768:25;1686:59;;-1:-1:-1;;;;;;1842:14:6;;;1839:34;;;1869:1;1866;1859:12;1839:34;1892:61;1945:7;1936:6;1925:9;1921:22;1892:61;:::i;:::-;1882:71;;1999:3;1988:9;1984:19;1978:26;1962:42;;2029:2;2019:8;2016:16;2013:36;;;2045:1;2042;2035:12;2013:36;;2068:63;2123:7;2112:8;2101:9;2097:24;2068:63;:::i;:::-;2058:73;;;2174:3;2163:9;2159:19;2153:26;2219:4;2212:5;2208:16;2201:5;2198:27;2188:55;;2239:1;2236;2229:12;2188:55;2312:3;2297:19;;2291:26;2262:5;;-1:-1:-1;2361:6:6;2348:20;;2336:33;;2326:61;;2383:1;2380;2373:12;2326:61;2406:7;2396:17;;;1287:1132;;;;;;;;;;:::o;3073:271::-;3115:3;3153:5;3147:12;3180:6;3175:3;3168:19;3196:76;3265:6;3258:4;3253:3;3249:14;3242:4;3235:5;3231:16;3196:76;:::i;:::-;3326:2;3305:15;-1:-1:-1;;3301:29:6;3292:39;;;;3333:4;3288:50;;3073:271;-1:-1:-1;;3073:271:6:o;3349:220::-;3498:2;3487:9;3480:21;3461:4;3518:45;3559:2;3548:9;3544:18;3536:6;3518:45;:::i;:::-;3510:53;3349:220;-1:-1:-1;;;3349:220:6:o;4288:208::-;4358:6;4411:2;4399:9;4390:7;4386:23;4382:32;4379:52;;;4427:1;4424;4417:12;4379:52;4450:40;4480:9;4450:40;:::i;4501:745::-;-1:-1:-1;;;;;4842:15:6;;;4824:34;;4894:15;;4889:2;4874:18;;4867:43;4946:3;4941:2;4926:18;;4919:31;;;4767:4;;4973:46;;4999:19;;4991:6;4973:46;:::i;:::-;5067:9;5059:6;5055:22;5050:2;5039:9;5035:18;5028:50;5095:33;5121:6;5113;5095:33;:::i;:::-;5087:41;;;5177:4;5169:6;5165:17;5159:3;5148:9;5144:19;5137:46;5232:6;5224;5220:19;5214:3;5203:9;5199:19;5192:48;4501:745;;;;;;;;;:::o;5251:287::-;5380:3;5418:6;5412:13;5434:66;5493:6;5488:3;5481:4;5473:6;5469:17;5434:66;:::i;:::-;5516:16;;;;;5251:287;-1:-1:-1;;5251:287:6:o;5543:346::-;93:2494:5;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_773": {
									"entryPoint": null,
									"id": 773,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_storeImplementationAuthority_594": {
									"entryPoint": null,
									"id": 594,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getImplementationAuthority_587": {
									"entryPoint": null,
									"id": 587,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@get_786": {
									"entryPoint": 387,
									"id": 786,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getslot_612": {
									"entryPoint": 337,
									"id": 612,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@setImplementationAuthority_574": {
									"entryPoint": 513,
									"id": 574,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 875,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 839,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9b0411664657bdf301d39de4dc1d8c8916476c6a591c7fcd5f6e535fa22de2ca__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 904,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"validator_revert_address": {
									"entryPoint": 815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2049:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:86:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "123:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "132:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "135:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "82:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "93:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "108:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "113:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "104:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "104:11:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "117:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "100:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "100:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "89:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "89:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "79:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "79:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "72:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "72:50:6"
															},
															"nodeType": "YulIf",
															"src": "69:70:6"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "48:5:6",
														"type": ""
													}
												],
												"src": "14:131:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "231:170:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "277:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "286:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "289:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "279:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "279:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "279:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "252:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "261:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "248:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "248:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "273:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "244:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "244:32:6"
															},
															"nodeType": "YulIf",
															"src": "241:52:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "302:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "321:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "315:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "315:16:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "306:5:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "365:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "340:24:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "340:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "340:31:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "380:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "390:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "380:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "197:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "208:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "220:6:6",
														"type": ""
													}
												],
												"src": "150:251:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "507:76:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "517:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "529:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "540:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "525:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "525:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "517:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "559:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "570:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "552:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "552:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "552:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "476:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "487:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "498:4:6",
														"type": ""
													}
												],
												"src": "406:177:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "689:102:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "699:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "711:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "722:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "707:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "707:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "699:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "741:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "756:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "772:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "777:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "768:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "768:11:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "781:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "764:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "764:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "752:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "752:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "734:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "734:51:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "734:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "658:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "669:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "680:4:6",
														"type": ""
													}
												],
												"src": "588:203:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "866:177:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "912:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "921:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "924:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "914:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "914:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "914:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "887:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "896:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "883:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "883:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "908:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "879:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "879:32:6"
															},
															"nodeType": "YulIf",
															"src": "876:52:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "937:36:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "963:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "950:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "950:23:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "941:5:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1007:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "982:24:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "982:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "982:31:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1022:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1032:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1022:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "832:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "843:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "855:6:6",
														"type": ""
													}
												],
												"src": "796:247:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1097:176:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1107:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1119:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1122:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1115:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1115:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "1107:4:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1156:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1177:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1184:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1189:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1180:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1180:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1170:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1170:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1170:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1221:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1224:4:6",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1214:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1214:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1214:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1249:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1252:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1242:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1242:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1242:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "1139:4:6"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1145:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1136:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1136:11:6"
															},
															"nodeType": "YulIf",
															"src": "1133:134:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1079:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1082:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "1088:4:6",
														"type": ""
													}
												],
												"src": "1048:225:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1452:235:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1469:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1480:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1462:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1462:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1462:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1503:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1514:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1499:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1519:2:6",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1492:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1492:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1492:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1542:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1553:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1538:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1538:18:6"
																	},
																	{
																		"hexValue": "6f6e6c792063757272656e7420696d706c656d656e746174696f6e417574686f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1558:34:6",
																		"type": "",
																		"value": "only current implementationAutho"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1531:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1531:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1613:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1624:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1609:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1609:18:6"
																	},
																	{
																		"hexValue": "726974792063616e2063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1629:15:6",
																		"type": "",
																		"value": "rity can call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1602:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1602:43:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1602:43:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1654:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1666:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1677:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1662:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1662:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1654:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9b0411664657bdf301d39de4dc1d8c8916476c6a591c7fcd5f6e535fa22de2ca__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1429:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1443:4:6",
														"type": ""
													}
												],
												"src": "1278:409:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1866:181:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1883:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1894:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1876:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1876:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1876:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1917:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1928:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1913:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1913:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1933:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1906:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1906:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1906:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1956:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1967:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1952:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1952:18:6"
																	},
																	{
																		"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1972:33:6",
																		"type": "",
																		"value": "invalid argument - zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1945:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1945:61:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1945:61:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2015:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2027:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2038:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2023:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2023:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2015:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1843:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1857:4:6",
														"type": ""
													}
												],
												"src": "1692:355:6"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_9b0411664657bdf301d39de4dc1d8c8916476c6a591c7fcd5f6e535fa22de2ca__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"only current implementationAutho\")\n        mstore(add(headStart, 96), \"rity can call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"invalid argument - zero address\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c806324173669146100f25780632d5f11871461010d5780636d4ce63c1461013657806392dd9d651461013e575b60006100646000805160206103b08339815191525490565b6001600160a01b031663709bc7f36040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100c59190610347565b90503660008037600080366000846127105a03f43d806000803e8180156100eb57816000f35b816000fd5b005b6100fa610151565b6040519081526020015b60405180910390f35b6000805160206103b0833981519152545b6040516001600160a01b039091168152602001610104565b61011e610183565b6100f061014c36600461036b565b610201565b600061017e60017f4cd9b827ca535ceb0880425d70eff88561ecdf04dc32fcf7ff3b15c587f8a871610388565b919050565b600061019b6000805160206103b08339815191525490565b6001600160a01b031663709bc7f36040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101fc9190610347565b905090565b6000805160206103b0833981519152546001600160a01b0316336001600160a01b03161461028c5760405162461bcd60e51b815260206004820152602d60248201527f6f6e6c792063757272656e7420696d706c656d656e746174696f6e417574686f60448201526c1c9a5d1e4818d85b8818d85b1b609a1b60648201526084015b60405180910390fd5b6001600160a01b0381166102e25760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f2061646472657373006044820152606401610283565b6102f8816000805160206103b083398151915255565b6040516001600160a01b038216907f3b1074392ed8e8424715d0dda2197eede67080b377fc8370e26f3e882207f6b890600090a250565b6001600160a01b038116811461034457600080fd5b50565b60006020828403121561035957600080fd5b81516103648161032f565b9392505050565b60006020828403121561037d57600080fd5b81356103648161032f565b818103818111156103a957634e487b7160e01b600052601160045260246000fd5b9291505056fec5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7a264697066735822122035f57acd2ccff16f7f0902c64c2c5361dce22407268bd9a0e594499d03337ad964736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x24173669 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x2D5F1187 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x6D4CE63C EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x92DD9D65 EQ PUSH2 0x13E JUMPI JUMPDEST PUSH1 0x0 PUSH2 0x64 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3B0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x709BC7F3 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC5 SWAP2 SWAP1 PUSH2 0x347 JUMP JUMPDEST SWAP1 POP CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 PUSH2 0x2710 GAS SUB DELEGATECALL RETURNDATASIZE DUP1 PUSH1 0x0 DUP1 RETURNDATACOPY DUP2 DUP1 ISZERO PUSH2 0xEB JUMPI DUP2 PUSH1 0x0 RETURN JUMPDEST DUP2 PUSH1 0x0 REVERT JUMPDEST STOP JUMPDEST PUSH2 0xFA PUSH2 0x151 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3B0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH2 0x11E PUSH2 0x183 JUMP JUMPDEST PUSH2 0xF0 PUSH2 0x14C CALLDATASIZE PUSH1 0x4 PUSH2 0x36B JUMP JUMPDEST PUSH2 0x201 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17E PUSH1 0x1 PUSH32 0x4CD9B827CA535CEB0880425D70EFF88561ECDF04DC32FCF7FF3B15C587F8A871 PUSH2 0x388 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3B0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x709BC7F3 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x347 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3B0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x28C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C792063757272656E7420696D706C656D656E746174696F6E417574686F PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1C9A5D1E4818D85B8818D85B1B PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E74202D207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x283 JUMP JUMPDEST PUSH2 0x2F8 DUP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3B0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x3B1074392ED8E8424715D0DDA2197EEDE67080B377FC8370E26F3E882207F6B8 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x359 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x364 DUP2 PUSH2 0x32F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x364 DUP2 PUSH2 0x32F JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x3A9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID 0xC5 CALL PUSH16 0xFCC639FA48A6947836D9850F5047985 0x23 0xBF DUP13 SWAP11 GASPRICE DUP8 0xD5 DUP8 PUSH13 0xF622BCF7A26469706673582212 KECCAK256 CALLDATALOAD CREATE2 PUSH27 0xCD2CCFF16F7F0902C64C2C5361DCE22407268BD9A0E594499D0333 PUSH27 0xD964736F6C63430008110033000000000000000000000000000000 ",
							"sourceMap": "93:2494:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1762:13;1787:28;-1:-1:-1;;;;;;;;;;;1059:103:3;;870:335;1787:28:5;-1:-1:-1;;;;;1778:74:5;;:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1762:92;;1967:14;1962:3;1957;1944:38;2170:1;2151;2119:14;2098:3;2075:5;2051;2044;2040:17;2010:175;2211:16;2261:5;2258:1;2255;2240:27;2287:7;2307:55;;;;2411:5;2408:1;2401:16;2307:55;2342:5;2339:1;2332:16;2280:151;;1504:126:3;;;:::i;:::-;;;552:25:6;;;540:2;525:18;1504:126:3;;;;;;;;870:335;-1:-1:-1;;;;;;;;;;;1059:103:3;870:335;;;-1:-1:-1;;;;;752:32:6;;;734:51;;722:2;707:18;870:335:3;588:203:6;2453:132:5;;;:::i;303:561:3:-;;;;;;:::i;:::-;;:::i;1504:126::-;1544:7;1578:44;1621:1;1586:31;1578:44;:::i;:::-;1570:53;1504:126;-1:-1:-1;1504:126:3:o;2453:132:5:-;2489:7;2524:28;-1:-1:-1;;;;;;;;;;;1059:103:3;;870:335;2524:28:5;-1:-1:-1;;;;;2515:61:5;;:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2508:70;;2453:132;:::o;303:561:3:-;-1:-1:-1;;;;;;;;;;;1059:103:3;-1:-1:-1;;;;;445:42:3;:10;-1:-1:-1;;;;;445:42:3;;424:134;;;;-1:-1:-1;;;424:134:3;;1480:2:6;424:134:3;;;1462:21:6;1519:2;1499:18;;;1492:30;1558:34;1538:18;;;1531:62;-1:-1:-1;;;1609:18:6;;;1602:43;1662:19;;424:134:3;;;;;;;;;-1:-1:-1;;;;;589:41:3;;568:119;;;;-1:-1:-1;;;568:119:3;;1894:2:6;568:119:3;;;1876:21:6;1933:2;1913:18;;;1906:30;1972:33;1952:18;;;1945:61;2023:18;;568:119:3;1692:355:6;568:119:3;698:58;728:27;-1:-1:-1;;;;;;;;;;;1337:145:3;1211:287;698:58;801:55;;-1:-1:-1;;;;;801:55:3;;;;;;;;303:561;:::o;14:131:6:-;-1:-1:-1;;;;;89:31:6;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:251::-;220:6;273:2;261:9;252:7;248:23;244:32;241:52;;;289:1;286;279:12;241:52;321:9;315:16;340:31;365:5;340:31;:::i;:::-;390:5;150:251;-1:-1:-1;;;150:251:6:o;796:247::-;855:6;908:2;896:9;887:7;883:23;879:32;876:52;;;924:1;921;914:12;876:52;963:9;950:23;982:31;1007:5;982:31;:::i;1048:225::-;1115:9;;;1136:11;;;1133:134;;;1189:10;1184:3;1180:20;1177:1;1170:31;1224:4;1221:1;1214:15;1252:4;1249:1;1242:15;1133:134;1048:225;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "205800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite",
								"get()": "infinite",
								"getImplementationAuthority()": "infinite",
								"getslot()": "254",
								"setImplementationAuthority(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 93,
									"end": 2587,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 93,
									"end": 2587,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 93,
									"end": 2587,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 136,
									"end": 1673,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 136,
									"end": 1673,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 136,
									"end": 1673,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 136,
									"end": 1673,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 136,
									"end": 1673,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 136,
									"end": 1673,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 136,
									"end": 1673,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 136,
									"end": 1673,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 136,
									"end": 1673,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 136,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 136,
									"end": 1673,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 136,
									"end": 1673,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 136,
									"end": 1673,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 136,
									"end": 1673,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 136,
									"end": 1673,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 136,
									"end": 1673,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 136,
									"end": 1673,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 136,
									"end": 1673,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 136,
									"end": 1673,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 136,
									"end": 1673,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 136,
									"end": 1673,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 136,
									"end": 1673,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 136,
									"end": 1673,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 136,
									"end": 1673,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 136,
									"end": 1673,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 136,
									"end": 1673,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 136,
									"end": 1673,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 136,
									"end": 1673,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 136,
									"end": 1673,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 136,
									"end": 1673,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 136,
									"end": 1673,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 136,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 401,
									"end": 438,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 401,
									"end": 438,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 401,
									"end": 438,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 401,
									"end": 438,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 401,
									"end": 438,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 401,
									"end": 438,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 401,
									"end": 489,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 401,
									"end": 489,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 458,
									"end": 489,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 458,
									"end": 489,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 458,
									"end": 489,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 458,
									"end": 489,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 401,
									"end": 489,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 401,
									"end": 489,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 401,
									"end": 534,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 401,
									"end": 534,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 401,
									"end": 534,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 401,
									"end": 534,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 509,
									"end": 534,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 509,
									"end": 534,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 509,
									"end": 534,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 509,
									"end": 534,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 401,
									"end": 534,
									"name": "tag",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 401,
									"end": 534,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 380,
									"end": 591,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 380,
									"end": 591,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 380,
									"end": 591,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 380,
									"end": 591,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 380,
									"end": 591,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 380,
									"end": 591,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2626,
									"end": 2628,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 380,
									"end": 591,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 380,
									"end": 591,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 380,
									"end": 591,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2608,
									"end": 2629,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2665,
									"end": 2667,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2645,
									"end": 2663,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 2645,
									"end": 2663,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2645,
									"end": 2663,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2638,
									"end": 2668,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2704,
									"end": 2737,
									"name": "PUSH",
									"source": 6,
									"value": "696E76616C696420617267756D656E74202D207A65726F206164647265737300"
								},
								{
									"begin": 2684,
									"end": 2702,
									"name": "PUSH",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 2684,
									"end": 2702,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2684,
									"end": 2702,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2677,
									"end": 2738,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2755,
									"end": 2773,
									"name": "PUSH",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 2755,
									"end": 2773,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 380,
									"end": 591,
									"name": "tag",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 380,
									"end": 591,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 380,
									"end": 591,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 380,
									"end": 591,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 380,
									"end": 591,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 380,
									"end": 591,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 380,
									"end": 591,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 380,
									"end": 591,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 380,
									"end": 591,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 380,
									"end": 591,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 380,
									"end": 591,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 664,
									"end": 678,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 664,
									"end": 678,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 664,
									"end": 678,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 664,
									"end": 678,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 664,
									"end": 678,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 664,
									"end": 678,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2986,
									"end": 2988,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2968,
									"end": 2989,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2968,
									"end": 2989,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2968,
									"end": 2989,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3025,
									"end": 3026,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3005,
									"end": 3023,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3005,
									"end": 3023,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3005,
									"end": 3023,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2998,
									"end": 3027,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3059,
									"end": 3061,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3044,
									"end": 3062,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3044,
									"end": 3062,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2784,
									"end": 3068,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 664,
									"end": 678,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 664,
									"end": 678,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 664,
									"end": 678,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 664,
									"end": 678,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 664,
									"end": 678,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 664,
									"end": 678,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 664,
									"end": 678,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 664,
									"end": 678,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 664,
									"end": 678,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 664,
									"end": 678,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 664,
									"end": 678,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 664,
									"end": 678,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 664,
									"end": 678,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 664,
									"end": 678,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 654,
									"end": 679,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 654,
									"end": 679,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 654,
									"end": 679,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 654,
									"end": 679,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 654,
									"end": 679,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 654,
									"end": 679,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 643,
									"end": 648,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 632,
									"end": 649,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 632,
									"end": 649,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 632,
									"end": 649,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 632,
									"end": 649,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 632,
									"end": 649,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 632,
									"end": 649,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 632,
									"end": 649,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 632,
									"end": 649,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 632,
									"end": 649,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 632,
									"end": 649,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 632,
									"end": 649,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 632,
									"end": 649,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 632,
									"end": 649,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 632,
									"end": 649,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 632,
									"end": 649,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 632,
									"end": 649,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 632,
									"end": 649,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 632,
									"end": 649,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 632,
									"end": 649,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 632,
									"end": 649,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 632,
									"end": 649,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 632,
									"end": 649,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 632,
									"end": 649,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 622,
									"end": 650,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 622,
									"end": 650,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 622,
									"end": 650,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 622,
									"end": 650,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 622,
									"end": 650,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 622,
									"end": 650,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 622,
									"end": 679,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 622,
									"end": 679,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 622,
									"end": 758,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 622,
									"end": 758,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 622,
									"end": 758,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 622,
									"end": 758,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 622,
									"end": 758,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 743,
									"end": 757,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 743,
									"end": 757,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 743,
									"end": 757,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 757,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 743,
									"end": 757,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 743,
									"end": 757,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2986,
									"end": 2988,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2968,
									"end": 2989,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2968,
									"end": 2989,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2968,
									"end": 2989,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3025,
									"end": 3026,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3005,
									"end": 3023,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3005,
									"end": 3023,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3005,
									"end": 3023,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2998,
									"end": 3027,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3059,
									"end": 3061,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3044,
									"end": 3062,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3044,
									"end": 3062,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2784,
									"end": 3068,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 743,
									"end": 757,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 743,
									"end": 757,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 743,
									"end": 757,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 743,
									"end": 757,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 743,
									"end": 757,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 757,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 743,
									"end": 757,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 743,
									"end": 757,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 743,
									"end": 757,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 743,
									"end": 757,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 743,
									"end": 757,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 743,
									"end": 757,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 743,
									"end": 757,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 743,
									"end": 757,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 733,
									"end": 758,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 733,
									"end": 758,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 733,
									"end": 758,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 733,
									"end": 758,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 733,
									"end": 758,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 733,
									"end": 758,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 720,
									"end": 727,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 709,
									"end": 728,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 709,
									"end": 728,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 709,
									"end": 728,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 709,
									"end": 728,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 709,
									"end": 728,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 709,
									"end": 728,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 709,
									"end": 728,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 709,
									"end": 728,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 709,
									"end": 728,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 709,
									"end": 728,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 709,
									"end": 728,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 709,
									"end": 728,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 709,
									"end": 728,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 709,
									"end": 728,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 709,
									"end": 728,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 709,
									"end": 728,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 709,
									"end": 728,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 709,
									"end": 728,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 709,
									"end": 728,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 709,
									"end": 728,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 709,
									"end": 728,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 709,
									"end": 728,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 709,
									"end": 728,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 699,
									"end": 729,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 699,
									"end": 729,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 699,
									"end": 729,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 699,
									"end": 729,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 699,
									"end": 729,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 699,
									"end": 729,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 699,
									"end": 758,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 699,
									"end": 758,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 622,
									"end": 758,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 622,
									"end": 758,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 601,
									"end": 815,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 601,
									"end": 815,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 601,
									"end": 815,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 601,
									"end": 815,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 601,
									"end": 815,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 601,
									"end": 815,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3776,
									"end": 3778,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 601,
									"end": 815,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 601,
									"end": 815,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 601,
									"end": 815,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3758,
									"end": 3779,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3815,
									"end": 3817,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 3795,
									"end": 3813,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 3795,
									"end": 3813,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3795,
									"end": 3813,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3788,
									"end": 3818,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3854,
									"end": 3887,
									"name": "PUSH",
									"source": 6,
									"value": "696E76616C696420617267756D656E74202D20656D70747920737472696E6700"
								},
								{
									"begin": 3834,
									"end": 3852,
									"name": "PUSH",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 3834,
									"end": 3852,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3834,
									"end": 3852,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3827,
									"end": 3888,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3905,
									"end": 3923,
									"name": "PUSH",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 3905,
									"end": 3923,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 601,
									"end": 815,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 3574,
									"end": 3929,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 601,
									"end": 815,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 601,
									"end": 815,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 864,
									"end": 866,
									"name": "PUSH",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 851,
									"end": 860,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 851,
									"end": 866,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 851,
									"end": 866,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 851,
									"end": 866,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 851,
									"end": 866,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 825,
									"end": 896,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 825,
									"end": 896,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 825,
									"end": 896,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 825,
									"end": 896,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 825,
									"end": 896,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 825,
									"end": 896,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4136,
									"end": 4138,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 825,
									"end": 896,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 825,
									"end": 896,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 825,
									"end": 896,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4118,
									"end": 4139,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4175,
									"end": 4177,
									"name": "PUSH",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 4155,
									"end": 4173,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 4155,
									"end": 4173,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4155,
									"end": 4173,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4148,
									"end": 4178,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4214,
									"end": 4241,
									"name": "PUSH",
									"source": 6,
									"value": "646563696D616C73206265747765656E203020616E6420313800000000000000"
								},
								{
									"begin": 4194,
									"end": 4212,
									"name": "PUSH",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 4194,
									"end": 4212,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4194,
									"end": 4212,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4187,
									"end": 4242,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4259,
									"end": 4277,
									"name": "PUSH",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 4259,
									"end": 4277,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 825,
									"end": 896,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 3934,
									"end": 4283,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 825,
									"end": 896,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 825,
									"end": 896,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 906,
									"end": 960,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 936,
									"end": 959,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "84A68099D90273A356D72F7F1AC67971932136236B8A743AFB53FFAD2BCDB03D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 1337,
									"end": 1482,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1211,
									"end": 1498,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 906,
									"end": 960,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 906,
									"end": 960,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 975,
									"end": 1026,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 975,
									"end": 1026,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 975,
									"end": 1026,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 975,
									"end": 1026,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 975,
									"end": 1026,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 975,
									"end": 1026,
									"name": "PUSH",
									"source": 5,
									"value": "3B1074392ED8E8424715D0DDA2197EEDE67080B377FC8370E26F3E882207F6B8"
								},
								{
									"begin": 975,
									"end": 1026,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 975,
									"end": 1026,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 975,
									"end": 1026,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 975,
									"end": 1026,
									"name": "LOG2",
									"source": 5
								},
								{
									"begin": 1037,
									"end": 1050,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1062,
									"end": 1090,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "84A68099D90273A356D72F7F1AC67971932136236B8A743AFB53FFAD2BCDB03D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 1059,
									"end": 1162,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1059,
									"end": 1162,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 870,
									"end": 1205,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1062,
									"end": 1090,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 1062,
									"end": 1090,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1053,
									"end": 1127,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1053,
									"end": 1127,
									"name": "PUSH",
									"source": 5,
									"value": "709BC7F3"
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "GAS",
									"source": 5
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "STATICCALL",
									"source": 5
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "RETURNDATASIZE",
									"source": 5
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "RETURNDATACOPY",
									"source": 5
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "RETURNDATASIZE",
									"source": 5
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "RETURNDATASIZE",
									"source": 5
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1053,
									"end": 1129,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1053,
									"end": 1129,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1037,
									"end": 1129,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1037,
									"end": 1129,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1283,
									"end": 1295,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1301,
									"end": 1306,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1301,
									"end": 1319,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1442,
									"end": 1459,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 1477,
									"end": 1488,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 1506,
									"end": 1511,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 1529,
									"end": 1536,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 1554,
									"end": 1563,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 1581,
									"end": 1590,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 1333,
									"end": 1604,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1333,
									"end": 1604,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1333,
									"end": 1604,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1333,
									"end": 1604,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1333,
									"end": 1604,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 1333,
									"end": 1604,
									"name": "SWAP7",
									"source": 5
								},
								{
									"begin": 1333,
									"end": 1604,
									"name": "SWAP6",
									"source": 5
								},
								{
									"begin": 1333,
									"end": 1604,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 1333,
									"end": 1604,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1333,
									"end": 1604,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1333,
									"end": 1604,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1333,
									"end": 1604,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1333,
									"end": 1604,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 1333,
									"end": 1604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1333,
									"end": 1604,
									"name": "tag",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 1333,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1333,
									"end": 1604,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1333,
									"end": 1604,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1333,
									"end": 1604,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1333,
									"end": 1604,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1333,
									"end": 1604,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1333,
									"end": 1604,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1333,
									"end": 1604,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1333,
									"end": 1604,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1333,
									"end": 1604,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1333,
									"end": 1604,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1333,
									"end": 1604,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1333,
									"end": 1604,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1333,
									"end": 1604,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1333,
									"end": 1604,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1333,
									"end": 1604,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1333,
									"end": 1604,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1333,
									"end": 1604,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1333,
									"end": 1604,
									"name": "AND",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "41AEF413"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1333,
									"end": 1604,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1333,
									"end": 1604,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1333,
									"end": 1604,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1333,
									"end": 1604,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 1301,
									"end": 1614,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "tag",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "GAS",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "DELEGATECALL",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "RETURNDATASIZE",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "PUSH",
									"source": 5,
									"value": "3F"
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "RETURNDATASIZE",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "RETURNDATASIZE",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "RETURNDATASIZE",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "RETURNDATACOPY",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "PUSH",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1614,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1282,
									"end": 1614,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1282,
									"end": 1614,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1282,
									"end": 1614,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1632,
									"end": 1639,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1624,
									"end": 1666,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1624,
									"end": 1666,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1624,
									"end": 1666,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1624,
									"end": 1666,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1624,
									"end": 1666,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1624,
									"end": 1666,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 5745,
									"end": 5747,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1624,
									"end": 1666,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1624,
									"end": 1666,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1624,
									"end": 1666,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5727,
									"end": 5748,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5784,
									"end": 5786,
									"name": "PUSH",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 5764,
									"end": 5782,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 5764,
									"end": 5782,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5764,
									"end": 5782,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5757,
									"end": 5787,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5823,
									"end": 5847,
									"name": "PUSH",
									"source": 6,
									"value": "496E697469616C697A6174696F6E206661696C65642E00000000000000000000"
								},
								{
									"begin": 5803,
									"end": 5821,
									"name": "PUSH",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 5803,
									"end": 5821,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5803,
									"end": 5821,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5796,
									"end": 5848,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5865,
									"end": 5883,
									"name": "PUSH",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 5865,
									"end": 5883,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1624,
									"end": 1666,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 5543,
									"end": 5889,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1624,
									"end": 1666,
									"name": "tag",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1624,
									"end": 1666,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 370,
									"end": 1673,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 370,
									"end": 1673,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 136,
									"end": 1673,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 136,
									"end": 1673,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 136,
									"end": 1673,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 136,
									"end": 1673,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 136,
									"end": 1673,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 136,
									"end": 1673,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 136,
									"end": 1673,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 93,
									"end": 2587,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 93,
									"end": 2587,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 196,
									"end": 323,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 196,
									"end": 323,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 257,
									"end": 267,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 252,
									"end": 255,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 248,
									"end": 268,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 245,
									"end": 246,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 238,
									"end": 269,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 288,
									"end": 292,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 285,
									"end": 286,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 278,
									"end": 293,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 312,
									"end": 316,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 309,
									"end": 310,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 302,
									"end": 317,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 328,
									"end": 578,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 328,
									"end": 578,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 413,
									"end": 414,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 536,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 423,
									"end": 536,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 437,
									"end": 443,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 434,
									"end": 435,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 431,
									"end": 444,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 423,
									"end": 536,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 423,
									"end": 536,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 423,
									"end": 536,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 513,
									"end": 524,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 513,
									"end": 524,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 513,
									"end": 524,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 507,
									"end": 525,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 494,
									"end": 505,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 494,
									"end": 505,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 494,
									"end": 505,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 487,
									"end": 526,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 459,
									"end": 461,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 452,
									"end": 462,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 423,
									"end": 536,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 423,
									"end": 536,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 423,
									"end": 536,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 423,
									"end": 536,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 570,
									"end": 571,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 552,
									"end": 568,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 552,
									"end": 568,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 545,
									"end": 572,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 328,
									"end": 578,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 583,
									"end": 1282,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 583,
									"end": 1282,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 637,
									"end": 642,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 690,
									"end": 693,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 683,
									"end": 687,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 675,
									"end": 681,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 671,
									"end": 688,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 657,
									"end": 712,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 657,
									"end": 712,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 708,
									"end": 709,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 705,
									"end": 706,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 698,
									"end": 710,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 657,
									"end": 712,
									"name": "tag",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 657,
									"end": 712,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 731,
									"end": 744,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 731,
									"end": 744,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 793,
									"end": 803,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 793,
									"end": 803,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 793,
									"end": 803,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 790,
									"end": 826,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 790,
									"end": 826,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 790,
									"end": 826,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 806,
									"end": 824,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 806,
									"end": 824,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 806,
									"end": 824,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 806,
									"end": 824,
									"name": "tag",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 806,
									"end": 824,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 881,
									"end": 883,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 875,
									"end": 884,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 849,
									"end": 851,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 935,
									"end": 948,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 935,
									"end": 948,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 931,
									"end": 953,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 931,
									"end": 953,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 931,
									"end": 953,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 955,
									"end": 957,
									"name": "PUSH",
									"source": 6,
									"value": "3F"
								},
								{
									"begin": 927,
									"end": 958,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 923,
									"end": 963,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 911,
									"end": 964,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 911,
									"end": 964,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 911,
									"end": 964,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 979,
									"end": 997,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 979,
									"end": 997,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 979,
									"end": 997,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 999,
									"end": 1021,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 999,
									"end": 1021,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 999,
									"end": 1021,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 976,
									"end": 1022,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 973,
									"end": 1045,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 973,
									"end": 1045,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 973,
									"end": 1045,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1025,
									"end": 1043,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 1025,
									"end": 1043,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1025,
									"end": 1043,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1025,
									"end": 1043,
									"name": "tag",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 1025,
									"end": 1043,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1065,
									"end": 1075,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1061,
									"end": 1063,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1054,
									"end": 1076,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1100,
									"end": 1102,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1092,
									"end": 1098,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1085,
									"end": 1103,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1146,
									"end": 1149,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1139,
									"end": 1143,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1126,
									"end": 1132,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 1122,
									"end": 1137,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1118,
									"end": 1144,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1115,
									"end": 1150,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1112,
									"end": 1167,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1112,
									"end": 1167,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 1112,
									"end": 1167,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1163,
									"end": 1164,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1160,
									"end": 1161,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1153,
									"end": 1165,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1112,
									"end": 1167,
									"name": "tag",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 1112,
									"end": 1167,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1176,
									"end": 1252,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 1249,
									"end": 1251,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1242,
									"end": 1246,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1234,
									"end": 1240,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1230,
									"end": 1247,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1223,
									"end": 1227,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1215,
									"end": 1221,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 1211,
									"end": 1228,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1176,
									"end": 1252,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 1176,
									"end": 1252,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1176,
									"end": 1252,
									"name": "tag",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 1176,
									"end": 1252,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1270,
									"end": 1276,
									"name": "SWAP7",
									"source": 6
								},
								{
									"begin": 583,
									"end": 1282,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 583,
									"end": 1282,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1287,
									"end": 2419,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1287,
									"end": 2419,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1428,
									"end": 1434,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1436,
									"end": 1442,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1444,
									"end": 1450,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1452,
									"end": 1458,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1460,
									"end": 1466,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1468,
									"end": 1474,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1476,
									"end": 1482,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1529,
									"end": 1532,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 1517,
									"end": 1526,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1515,
									"name": "DUP11",
									"source": 6
								},
								{
									"begin": 1504,
									"end": 1527,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1500,
									"end": 1533,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 1497,
									"end": 1550,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1497,
									"end": 1550,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 1497,
									"end": 1550,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1546,
									"end": 1547,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1543,
									"end": 1544,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1536,
									"end": 1548,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1497,
									"end": 1550,
									"name": "tag",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 1497,
									"end": 1550,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1569,
									"end": 1609,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 1599,
									"end": 1608,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 1569,
									"end": 1609,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 1569,
									"end": 1609,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1569,
									"end": 1609,
									"name": "tag",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 1569,
									"end": 1609,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1559,
									"end": 1609,
									"name": "SWAP7",
									"source": 6
								},
								{
									"begin": 1559,
									"end": 1609,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1628,
									"end": 1677,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 1673,
									"end": 1675,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1662,
									"end": 1671,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 1658,
									"end": 1676,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1628,
									"end": 1677,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 1628,
									"end": 1677,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1628,
									"end": 1677,
									"name": "tag",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 1628,
									"end": 1677,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1618,
									"end": 1677,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 1618,
									"end": 1677,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1696,
									"end": 1745,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 1741,
									"end": 1743,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1730,
									"end": 1739,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 1726,
									"end": 1744,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1696,
									"end": 1745,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 1696,
									"end": 1745,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1696,
									"end": 1745,
									"name": "tag",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 1696,
									"end": 1745,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1789,
									"end": 1791,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1774,
									"end": 1792,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 1774,
									"end": 1792,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1768,
									"end": 1793,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1686,
									"end": 1745,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1686,
									"end": 1745,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1842,
									"end": 1856,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1842,
									"end": 1856,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1842,
									"end": 1856,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1839,
									"end": 1873,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1839,
									"end": 1873,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 1839,
									"end": 1873,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1869,
									"end": 1870,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1866,
									"end": 1867,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1859,
									"end": 1871,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1839,
									"end": 1873,
									"name": "tag",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 1839,
									"end": 1873,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1892,
									"end": 1953,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 1945,
									"end": 1952,
									"name": "DUP12",
									"source": 6
								},
								{
									"begin": 1936,
									"end": 1942,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1925,
									"end": 1934,
									"name": "DUP13",
									"source": 6
								},
								{
									"begin": 1921,
									"end": 1943,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1892,
									"end": 1953,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 1892,
									"end": 1953,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1892,
									"end": 1953,
									"name": "tag",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 1892,
									"end": 1953,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1882,
									"end": 1953,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 1882,
									"end": 1953,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1999,
									"end": 2002,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 1988,
									"end": 1997,
									"name": "DUP11",
									"source": 6
								},
								{
									"begin": 1984,
									"end": 2003,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1978,
									"end": 2004,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1962,
									"end": 2004,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1962,
									"end": 2004,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2029,
									"end": 2031,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2019,
									"end": 2027,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2016,
									"end": 2032,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2013,
									"end": 2049,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2013,
									"end": 2049,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 2013,
									"end": 2049,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2045,
									"end": 2046,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2042,
									"end": 2043,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2035,
									"end": 2047,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2013,
									"end": 2049,
									"name": "tag",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 2013,
									"end": 2049,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2013,
									"end": 2049,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2068,
									"end": 2131,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 2123,
									"end": 2130,
									"name": "DUP11",
									"source": 6
								},
								{
									"begin": 2112,
									"end": 2120,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2101,
									"end": 2110,
									"name": "DUP12",
									"source": 6
								},
								{
									"begin": 2097,
									"end": 2121,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2068,
									"end": 2131,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 2068,
									"end": 2131,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2068,
									"end": 2131,
									"name": "tag",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 2068,
									"end": 2131,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2058,
									"end": 2131,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 2058,
									"end": 2131,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2058,
									"end": 2131,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2174,
									"end": 2177,
									"name": "PUSH",
									"source": 6,
									"value": "A0"
								},
								{
									"begin": 2163,
									"end": 2172,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 2159,
									"end": 2178,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2153,
									"end": 2179,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2219,
									"end": 2223,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 2212,
									"end": 2217,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2208,
									"end": 2224,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2201,
									"end": 2206,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2198,
									"end": 2225,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 2188,
									"end": 2243,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "76"
								},
								{
									"begin": 2188,
									"end": 2243,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2239,
									"end": 2240,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2236,
									"end": 2237,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2229,
									"end": 2241,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2188,
									"end": 2243,
									"name": "tag",
									"source": 6,
									"value": "76"
								},
								{
									"begin": 2188,
									"end": 2243,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2312,
									"end": 2315,
									"name": "PUSH",
									"source": 6,
									"value": "C0"
								},
								{
									"begin": 2297,
									"end": 2316,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 2297,
									"end": 2316,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2291,
									"end": 2317,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2267,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2262,
									"end": 2267,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2361,
									"end": 2367,
									"name": "PUSH",
									"source": 6,
									"value": "FFFF"
								},
								{
									"begin": 2348,
									"end": 2368,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2348,
									"end": 2368,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2336,
									"end": 2369,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2336,
									"end": 2369,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 2326,
									"end": 2387,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 2326,
									"end": 2387,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2383,
									"end": 2384,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2380,
									"end": 2381,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2373,
									"end": 2385,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2326,
									"end": 2387,
									"name": "tag",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 2326,
									"end": 2387,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2406,
									"end": 2413,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2396,
									"end": 2413,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2396,
									"end": 2413,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2396,
									"end": 2413,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1287,
									"end": 2419,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1287,
									"end": 2419,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 1287,
									"end": 2419,
									"name": "SWAP9",
									"source": 6
								},
								{
									"begin": 1287,
									"end": 2419,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1287,
									"end": 2419,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 1287,
									"end": 2419,
									"name": "SWAP8",
									"source": 6
								},
								{
									"begin": 1287,
									"end": 2419,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1287,
									"end": 2419,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1287,
									"end": 2419,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 1287,
									"end": 2419,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1287,
									"end": 2419,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3073,
									"end": 3344,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 3073,
									"end": 3344,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3115,
									"end": 3118,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3153,
									"end": 3158,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3147,
									"end": 3159,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3180,
									"end": 3186,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3175,
									"end": 3178,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3168,
									"end": 3187,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3196,
									"end": 3272,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 3265,
									"end": 3271,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3258,
									"end": 3262,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3253,
									"end": 3256,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3249,
									"end": 3263,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3242,
									"end": 3246,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3235,
									"end": 3240,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3231,
									"end": 3247,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3196,
									"end": 3272,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 3196,
									"end": 3272,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3196,
									"end": 3272,
									"name": "tag",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 3196,
									"end": 3272,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3326,
									"end": 3328,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 3305,
									"end": 3320,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3301,
									"end": 3330,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3292,
									"end": 3331,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3292,
									"end": 3331,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3292,
									"end": 3331,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3292,
									"end": 3331,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3333,
									"end": 3337,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3288,
									"end": 3338,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3288,
									"end": 3338,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3073,
									"end": 3344,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3073,
									"end": 3344,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3349,
									"end": 3569,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 3349,
									"end": 3569,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3498,
									"end": 3500,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3487,
									"end": 3496,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3480,
									"end": 3501,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3461,
									"end": 3465,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3518,
									"end": 3563,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 3559,
									"end": 3561,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3548,
									"end": 3557,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3544,
									"end": 3562,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3536,
									"end": 3542,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3518,
									"end": 3563,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 3518,
									"end": 3563,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3518,
									"end": 3563,
									"name": "tag",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 3518,
									"end": 3563,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3510,
									"end": 3563,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 3349,
									"end": 3569,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3349,
									"end": 3569,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4288,
									"end": 4496,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 4288,
									"end": 4496,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4358,
									"end": 4364,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4411,
									"end": 4413,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4399,
									"end": 4408,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4390,
									"end": 4397,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4386,
									"end": 4409,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 4382,
									"end": 4414,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 4379,
									"end": 4431,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4379,
									"end": 4431,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 4379,
									"end": 4431,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4427,
									"end": 4428,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4424,
									"end": 4425,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4417,
									"end": 4429,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 4379,
									"end": 4431,
									"name": "tag",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 4379,
									"end": 4431,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4450,
									"end": 4490,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 4480,
									"end": 4489,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4450,
									"end": 4490,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 4450,
									"end": 4490,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4501,
									"end": 5246,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 4501,
									"end": 5246,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4842,
									"end": 4857,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 4842,
									"end": 4857,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4842,
									"end": 4857,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4824,
									"end": 4858,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4824,
									"end": 4858,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4894,
									"end": 4909,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 4894,
									"end": 4909,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4889,
									"end": 4891,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4874,
									"end": 4892,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4874,
									"end": 4892,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4867,
									"end": 4910,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4946,
									"end": 4949,
									"name": "PUSH",
									"source": 6,
									"value": "C0"
								},
								{
									"begin": 4941,
									"end": 4943,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 4926,
									"end": 4944,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4926,
									"end": 4944,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4919,
									"end": 4950,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4919,
									"end": 4950,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4919,
									"end": 4950,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4767,
									"end": 4771,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4767,
									"end": 4771,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4973,
									"end": 5019,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 4973,
									"end": 5019,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4999,
									"end": 5018,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4999,
									"end": 5018,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4991,
									"end": 4997,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 4973,
									"end": 5019,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 4973,
									"end": 5019,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4973,
									"end": 5019,
									"name": "tag",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 4973,
									"end": 5019,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5067,
									"end": 5076,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5059,
									"end": 5065,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5055,
									"end": 5077,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 5050,
									"end": 5052,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 5039,
									"end": 5048,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5028,
									"end": 5078,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5095,
									"end": 5128,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 5121,
									"end": 5127,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5113,
									"end": 5119,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 5095,
									"end": 5128,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 5095,
									"end": 5128,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5095,
									"end": 5128,
									"name": "tag",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 5095,
									"end": 5128,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5087,
									"end": 5128,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5087,
									"end": 5128,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5087,
									"end": 5128,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5177,
									"end": 5181,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 5169,
									"end": 5175,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5165,
									"end": 5182,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5159,
									"end": 5162,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 5148,
									"end": 5157,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5144,
									"end": 5163,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5137,
									"end": 5183,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5232,
									"end": 5238,
									"name": "PUSH",
									"source": 6,
									"value": "FFFF"
								},
								{
									"begin": 5224,
									"end": 5230,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5220,
									"end": 5239,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5214,
									"end": 5217,
									"name": "PUSH",
									"source": 6,
									"value": "A0"
								},
								{
									"begin": 5203,
									"end": 5212,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5199,
									"end": 5218,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5192,
									"end": 5240,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4501,
									"end": 5246,
									"name": "SWAP8",
									"source": 6
								},
								{
									"begin": 4501,
									"end": 5246,
									"name": "SWAP7",
									"source": 6
								},
								{
									"begin": 4501,
									"end": 5246,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4501,
									"end": 5246,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4501,
									"end": 5246,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4501,
									"end": 5246,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4501,
									"end": 5246,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4501,
									"end": 5246,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4501,
									"end": 5246,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4501,
									"end": 5246,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5251,
									"end": 5538,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 5251,
									"end": 5538,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5380,
									"end": 5383,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5418,
									"end": 5424,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5412,
									"end": 5425,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 5434,
									"end": 5500,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 5493,
									"end": 5499,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5488,
									"end": 5491,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5481,
									"end": 5485,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5473,
									"end": 5479,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 5469,
									"end": 5486,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5434,
									"end": 5500,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 5434,
									"end": 5500,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5434,
									"end": 5500,
									"name": "tag",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 5434,
									"end": 5500,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5516,
									"end": 5532,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5516,
									"end": 5532,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5516,
									"end": 5532,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5516,
									"end": 5532,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5516,
									"end": 5532,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 5251,
									"end": 5538,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5251,
									"end": 5538,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5543,
									"end": 5889,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 5543,
									"end": 5889,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 93,
									"end": 2587,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 93,
									"end": 2587,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 93,
									"end": 2587,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 93,
									"end": 2587,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 2587,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 93,
									"end": 2587,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 2587,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122035f57acd2ccff16f7f0902c64c2c5361dce22407268bd9a0e594499d03337ad964736f6c63430008110033",
									".code": [
										{
											"begin": 93,
											"end": 2587,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 93,
											"end": 2587,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 93,
											"end": 2587,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 93,
											"end": 2587,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 93,
											"end": 2587,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 93,
											"end": 2587,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 93,
											"end": 2587,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 93,
											"end": 2587,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 93,
											"end": 2587,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 2587,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 93,
											"end": 2587,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 93,
											"end": 2587,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 93,
											"end": 2587,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 93,
											"end": 2587,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 93,
											"end": 2587,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 93,
											"end": 2587,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 93,
											"end": 2587,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 93,
											"end": 2587,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 93,
											"end": 2587,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 93,
											"end": 2587,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 2587,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 93,
											"end": 2587,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 93,
											"end": 2587,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 93,
											"end": 2587,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 93,
											"end": 2587,
											"name": "PUSH",
											"source": 5,
											"value": "24173669"
										},
										{
											"begin": 93,
											"end": 2587,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 93,
											"end": 2587,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 93,
											"end": 2587,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 93,
											"end": 2587,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 93,
											"end": 2587,
											"name": "PUSH",
											"source": 5,
											"value": "2D5F1187"
										},
										{
											"begin": 93,
											"end": 2587,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 93,
											"end": 2587,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 93,
											"end": 2587,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 93,
											"end": 2587,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 93,
											"end": 2587,
											"name": "PUSH",
											"source": 5,
											"value": "6D4CE63C"
										},
										{
											"begin": 93,
											"end": 2587,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 93,
											"end": 2587,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 93,
											"end": 2587,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 93,
											"end": 2587,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 93,
											"end": 2587,
											"name": "PUSH",
											"source": 5,
											"value": "92DD9D65"
										},
										{
											"begin": 93,
											"end": 2587,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 93,
											"end": 2587,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 93,
											"end": 2587,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 93,
											"end": 2587,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 93,
											"end": 2587,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 1775,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1787,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "84A68099D90273A356D72F7F1AC67971932136236B8A743AFB53FFAD2BCDB03D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1059,
											"end": 1162,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1059,
											"end": 1162,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 870,
											"end": 1205,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1787,
											"end": 1815,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1787,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1778,
											"end": 1852,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1852,
											"name": "PUSH",
											"source": 5,
											"value": "709BC7F3"
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1778,
											"end": 1854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1778,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 1854,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 1854,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1967,
											"end": 1981,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 1965,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1957,
											"end": 1960,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1944,
											"end": 1982,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 2170,
											"end": 2171,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2151,
											"end": 2152,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2119,
											"end": 2133,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2101,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2075,
											"end": 2080,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2051,
											"end": 2056,
											"name": "PUSH",
											"source": 5,
											"value": "2710"
										},
										{
											"begin": 2044,
											"end": 2049,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2040,
											"end": 2057,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2010,
											"end": 2185,
											"name": "DELEGATECALL",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2227,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2266,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2258,
											"end": 2259,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2255,
											"end": 2256,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2240,
											"end": 2267,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2294,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2307,
											"end": 2362,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2307,
											"end": 2362,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2307,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 2307,
											"end": 2362,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2411,
											"end": 2416,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2408,
											"end": 2409,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2401,
											"end": 2417,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2307,
											"end": 2362,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 2307,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2342,
											"end": 2347,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2339,
											"end": 2340,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2332,
											"end": 2348,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2280,
											"end": 2431,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 2280,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2280,
											"end": 2431,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1504,
											"end": 1630,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1504,
											"end": 1630,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1504,
											"end": 1630,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1504,
											"end": 1630,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1504,
											"end": 1630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1504,
											"end": 1630,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1504,
											"end": 1630,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1504,
											"end": 1630,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1504,
											"end": 1630,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 552,
											"end": 577,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 552,
											"end": 577,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 552,
											"end": 577,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 540,
											"end": 542,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 525,
											"end": 543,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1504,
											"end": 1630,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1504,
											"end": 1630,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1504,
											"end": 1630,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1504,
											"end": 1630,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1504,
											"end": 1630,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1504,
											"end": 1630,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1504,
											"end": 1630,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1504,
											"end": 1630,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1504,
											"end": 1630,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 870,
											"end": 1205,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 870,
											"end": 1205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "84A68099D90273A356D72F7F1AC67971932136236B8A743AFB53FFAD2BCDB03D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1059,
											"end": 1162,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 870,
											"end": 1205,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 870,
											"end": 1205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 870,
											"end": 1205,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 870,
											"end": 1205,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 752,
											"end": 784,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 752,
											"end": 784,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 752,
											"end": 784,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 734,
											"end": 785,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 734,
											"end": 785,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 722,
											"end": 724,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 707,
											"end": 725,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 870,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 588,
											"end": 791,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2453,
											"end": 2585,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2453,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2453,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2453,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 2453,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 303,
											"end": 864,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 303,
											"end": 864,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 303,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 303,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 303,
											"end": 864,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 303,
											"end": 864,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 303,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 303,
											"end": 864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 303,
											"end": 864,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 303,
											"end": 864,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 303,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 303,
											"end": 864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1504,
											"end": 1630,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1504,
											"end": 1630,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1544,
											"end": 1551,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1578,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1621,
											"end": 1622,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1586,
											"end": 1617,
											"name": "PUSH",
											"source": 3,
											"value": "4CD9B827CA535CEB0880425D70EFF88561ECDF04DC32FCF7FF3B15C587F8A871"
										},
										{
											"begin": 1578,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1578,
											"end": 1622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1578,
											"end": 1622,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1578,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1570,
											"end": 1623,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1504,
											"end": 1630,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1504,
											"end": 1630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2453,
											"end": 2585,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 2453,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2489,
											"end": 2496,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2524,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "84A68099D90273A356D72F7F1AC67971932136236B8A743AFB53FFAD2BCDB03D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1059,
											"end": 1162,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1059,
											"end": 1162,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 870,
											"end": 1205,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2524,
											"end": 2552,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 2524,
											"end": 2552,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2515,
											"end": 2576,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2576,
											"name": "PUSH",
											"source": 5,
											"value": "709BC7F3"
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 2515,
											"end": 2578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2508,
											"end": 2578,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2508,
											"end": 2578,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2453,
											"end": 2585,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2453,
											"end": 2585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 303,
											"end": 864,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 303,
											"end": 864,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "84A68099D90273A356D72F7F1AC67971932136236B8A743AFB53FFAD2BCDB03D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1059,
											"end": 1162,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 445,
											"end": 487,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 445,
											"end": 455,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 445,
											"end": 487,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 445,
											"end": 487,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 424,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 424,
											"end": 558,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 424,
											"end": 558,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 558,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 424,
											"end": 558,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 424,
											"end": 558,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1480,
											"end": 1482,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 424,
											"end": 558,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 424,
											"end": 558,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 424,
											"end": 558,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1462,
											"end": 1483,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1519,
											"end": 1521,
											"name": "PUSH",
											"source": 6,
											"value": "2D"
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1492,
											"end": 1522,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "PUSH",
											"source": 6,
											"value": "6F6E6C792063757272656E7420696D706C656D656E746174696F6E417574686F"
										},
										{
											"begin": 1538,
											"end": 1556,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1538,
											"end": 1556,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1538,
											"end": 1556,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1593,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C9A5D1E4818D85B8818D85B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1609,
											"end": 1627,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1609,
											"end": 1627,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1609,
											"end": 1627,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1602,
											"end": 1645,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1662,
											"end": 1681,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 1662,
											"end": 1681,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 424,
											"end": 558,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 424,
											"end": 558,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 424,
											"end": 558,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 558,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 424,
											"end": 558,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 424,
											"end": 558,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 424,
											"end": 558,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 424,
											"end": 558,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 424,
											"end": 558,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 424,
											"end": 558,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 424,
											"end": 558,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 589,
											"end": 630,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 589,
											"end": 630,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 568,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 568,
											"end": 687,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 568,
											"end": 687,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 568,
											"end": 687,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 568,
											"end": 687,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 568,
											"end": 687,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 1896,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 568,
											"end": 687,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 568,
											"end": 687,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 568,
											"end": 687,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1876,
											"end": 1897,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1933,
											"end": 1935,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1913,
											"end": 1931,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1913,
											"end": 1931,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1913,
											"end": 1931,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1936,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1972,
											"end": 2005,
											"name": "PUSH",
											"source": 6,
											"value": "696E76616C696420617267756D656E74202D207A65726F206164647265737300"
										},
										{
											"begin": 1952,
											"end": 1970,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1952,
											"end": 1970,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1952,
											"end": 1970,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1945,
											"end": 2006,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2023,
											"end": 2041,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2023,
											"end": 2041,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 568,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1692,
											"end": 2047,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 568,
											"end": 687,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 568,
											"end": 687,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 698,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 728,
											"end": 755,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "84A68099D90273A356D72F7F1AC67971932136236B8A743AFB53FFAD2BCDB03D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1337,
											"end": 1482,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1211,
											"end": 1498,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 698,
											"end": 756,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 698,
											"end": 756,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 801,
											"end": 856,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 801,
											"end": 856,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 801,
											"end": 856,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 801,
											"end": 856,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 801,
											"end": 856,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 801,
											"end": 856,
											"name": "PUSH",
											"source": 3,
											"value": "3B1074392ED8E8424715D0DDA2197EEDE67080B377FC8370E26F3E882207F6B8"
										},
										{
											"begin": 801,
											"end": 856,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 801,
											"end": 856,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 801,
											"end": 856,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 801,
											"end": 856,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 303,
											"end": 864,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 303,
											"end": 864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 89,
											"end": 120,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 89,
											"end": 120,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 79,
											"end": 121,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 79,
											"end": 121,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 69,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 69,
											"end": 139,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 69,
											"end": 139,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 69,
											"end": 139,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14,
											"end": 145,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 150,
											"end": 401,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 150,
											"end": 401,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 220,
											"end": 226,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 273,
											"end": 275,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 261,
											"end": 270,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 252,
											"end": 259,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 248,
											"end": 271,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 244,
											"end": 276,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 241,
											"end": 293,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 241,
											"end": 293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 241,
											"end": 293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 289,
											"end": 290,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 286,
											"end": 287,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 279,
											"end": 291,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 241,
											"end": 293,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 241,
											"end": 293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 321,
											"end": 330,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 315,
											"end": 331,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 340,
											"end": 371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 365,
											"end": 370,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 340,
											"end": 371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 340,
											"end": 371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 340,
											"end": 371,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 340,
											"end": 371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 390,
											"end": 395,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 150,
											"end": 401,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 150,
											"end": 401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 1043,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 796,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 855,
											"end": 861,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 908,
											"end": 910,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 896,
											"end": 905,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 887,
											"end": 894,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 883,
											"end": 906,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 879,
											"end": 911,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 876,
											"end": 928,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 876,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 876,
											"end": 928,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 921,
											"end": 922,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 914,
											"end": 926,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 876,
											"end": 928,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 876,
											"end": 928,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 963,
											"end": 972,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 950,
											"end": 973,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 982,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1007,
											"end": 1012,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 982,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 982,
											"end": 1013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1273,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1048,
											"end": 1273,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 1124,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 1124,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 1124,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1136,
											"end": 1147,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1136,
											"end": 1147,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1136,
											"end": 1147,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1133,
											"end": 1267,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1133,
											"end": 1267,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1133,
											"end": 1267,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1189,
											"end": 1199,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 1184,
											"end": 1187,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1180,
											"end": 1200,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1178,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1170,
											"end": 1201,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 1221,
											"end": 1222,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1214,
											"end": 1229,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1252,
											"end": 1256,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1249,
											"end": 1250,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1257,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1133,
											"end": 1267,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1133,
											"end": 1267,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1273,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1273,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1273,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1273,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1273,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									],
									".data": {
										"84A68099D90273A356D72F7F1AC67971932136236B8A743AFB53FFAD2BCDB03D": "c5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7"
									}
								},
								"84A68099D90273A356D72F7F1AC67971932136236B8A743AFB53FFAD2BCDB03D": "c5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7"
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"erc3643/erc3643/factory/Ifactory.sol",
								"erc3643/erc3643/proxy/AbstractProxy.sol",
								"erc3643/erc3643/proxy/IProxy.sol",
								"erc3643/erc3643/proxy/TokenProxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"get()": "6d4ce63c",
							"getImplementationAuthority()": "2d5f1187",
							"getslot()": "24173669",
							"setImplementationAuthority(address)": "92dd9d65"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementationAuthority\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_identityRegistry\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_compliance\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"maxsupply\",\"type\":\"uint16\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_implementationAuthority\",\"type\":\"address\"}],\"name\":\"ImplementationAuthoritySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"get\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getImplementationAuthority\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getslot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newImplementationAuthority\",\"type\":\"address\"}],\"name\":\"setImplementationAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"ImplementationAuthoritySet(address)\":{\"notice\":\"events\"}},\"kind\":\"user\",\"methods\":{\"setImplementationAuthority(address)\":{\"notice\":\"functions\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc3643/erc3643/proxy/TokenProxy.sol\":\"TokenProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"erc3643/erc3643/factory/Ifactory.sol\":{\"keccak256\":\"0x3e67d4c86a65ff2e93eb27a5e31ba24c9f14a597fa91f06069c91e3585c2de74\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3100bde0bae1e70eaa034298af2005e5c7944ea46ae287c68f8400e36987730c\",\"dweb:/ipfs/QmZgXTqKRdxJyG7C4sX5cuY9TPKfSrBwMTeFRwXnojFJ7p\"]},\"erc3643/erc3643/proxy/AbstractProxy.sol\":{\"keccak256\":\"0xbf32caa0e3838e074d57d5c4f3f9174fcf55952e993edb3a9aeb3cf09c7b9a6c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://4327b215eeacb0172cafb37386e10c435b640ff58042a38b84b8c7503c4203bb\",\"dweb:/ipfs/QmdjhVn77jpAyTbXvNXEh1SqXAxfV43kWEpXaHAdUv15DS\"]},\"erc3643/erc3643/proxy/IProxy.sol\":{\"keccak256\":\"0x6493d0ec313502af3a02f83a3fbb5480d39db3a835019e6d63758ed092ce261e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3341cfa96e3672e9f7f831844731dcd93bc68526f0dd6c130f07547c7ca49538\",\"dweb:/ipfs/QmV7FZqjcUvi4tmhuQrFG744jPqRP3SqqM7U6dWNEVHFJw\"]},\"erc3643/erc3643/proxy/TokenProxy.sol\":{\"keccak256\":\"0x4fce6ec5c47a360026c1cc03f9d249500ef228210c9fe411705739dda3561e8f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f6980ce7ba69ca4428379f782528c359411c4cb1c92771b3c5797bc7fea384b6\",\"dweb:/ipfs/QmSAAz3n6tK1vx1aAdodV4pcq7NFV5WBSTp4GMgQgEWHW7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 6,
								"contract": "erc3643/erc3643/proxy/TokenProxy.sol:TokenProxy",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 9,
								"contract": "erc3643/erc3643/proxy/TokenProxy.sol:TokenProxy",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"events": {
							"ImplementationAuthoritySet(address)": {
								"notice": "events"
							}
						},
						"kind": "user",
						"methods": {
							"setImplementationAuthority(address)": {
								"notice": "functions"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							498
						],
						"Initializable": [
							168
						]
					},
					"id": 169,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../../utils/AddressUpgradeable.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 169,
							"sourceUnit": 499,
							"src": "138:44:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "184:2209:0",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 168,
							"linearizedBaseContracts": [
								168
							],
							"name": "Initializable",
							"nameLocation": "2412:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 4,
										"nodeType": "StructuredDocumentation",
										"src": "2432:109:0",
										"text": " @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"
									},
									"id": 6,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "2560:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 168,
									"src": "2546:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 5,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2546:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 7,
										"nodeType": "StructuredDocumentation",
										"src": "2579:91:0",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 9,
									"mutability": "mutable",
									"name": "_initializing",
									"nameLocation": "2688:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 168,
									"src": "2675:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 8,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2675:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 10,
										"nodeType": "StructuredDocumentation",
										"src": "2708:90:0",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498",
									"id": 14,
									"name": "Initialized",
									"nameLocation": "2809:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "2827:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "2821:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 11,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2821:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2820:15:0"
									},
									"src": "2803:33:0"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "3269:483:0",
										"statements": [
											{
												"assignments": [
													18
												],
												"declarations": [
													{
														"constant": false,
														"id": 18,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "3284:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 69,
														"src": "3279:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 17,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3279:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 21,
												"initialValue": {
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3301:14:0",
													"subExpression": {
														"id": 19,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "3302:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3279:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 27,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 23,
																			"name": "isTopLevelCall",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 18,
																			"src": "3347:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 26,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 24,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 6,
																				"src": "3365:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 25,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3380:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3365:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3347:34:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 28,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3346:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 36,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "3387:45:0",
																			"subExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 33,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "3426:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_Initializable_$168",
																									"typeString": "contract Initializable"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_Initializable_$168",
																									"typeString": "contract Initializable"
																								}
																							],
																							"id": 32,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3418:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 31,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "3418:7:0",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 34,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3418:13:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"id": 29,
																						"name": "AddressUpgradeable",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 498,
																						"src": "3388:18:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$498_$",
																							"typeString": "type(library AddressUpgradeable)"
																						}
																					},
																					"id": 30,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3407:10:0",
																					"memberName": "isContract",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 186,
																					"src": "3388:29:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																						"typeString": "function (address) view returns (bool)"
																					}
																				},
																				"id": 35,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3388:44:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 39,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 37,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 6,
																				"src": "3436:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 38,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3452:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3436:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3387:66:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 41,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3386:68:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3346:108:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 43,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3468:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 22,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3325:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3325:201:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 45,
												"nodeType": "ExpressionStatement",
												"src": "3325:201:0"
											},
											{
												"expression": {
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 46,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "3536:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 47,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3551:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3536:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "3536:16:0"
											},
											{
												"condition": {
													"id": 50,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 18,
													"src": "3566:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 56,
												"nodeType": "IfStatement",
												"src": "3562:65:0",
												"trueBody": {
													"id": 55,
													"nodeType": "Block",
													"src": "3582:45:0",
													"statements": [
														{
															"expression": {
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 51,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "3596:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 52,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3612:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3596:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 54,
															"nodeType": "ExpressionStatement",
															"src": "3596:20:0"
														}
													]
												}
											},
											{
												"id": 57,
												"nodeType": "PlaceholderStatement",
												"src": "3636:1:0"
											},
											{
												"condition": {
													"id": 58,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 18,
													"src": "3651:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 68,
												"nodeType": "IfStatement",
												"src": "3647:99:0",
												"trueBody": {
													"id": 67,
													"nodeType": "Block",
													"src": "3667:79:0",
													"statements": [
														{
															"expression": {
																"id": 61,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 59,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "3681:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 60,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3697:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3681:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 62,
															"nodeType": "ExpressionStatement",
															"src": "3681:21:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 64,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3733:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 63,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "3721:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 65,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3721:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 66,
															"nodeType": "EmitStatement",
															"src": "3716:19:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "2842:399:0",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."
									},
									"id": 70,
									"name": "initializer",
									"nameLocation": "3255:11:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3266:2:0"
									},
									"src": "3246:506:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "4863:255:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "4881:14:0",
																"subExpression": {
																	"id": 76,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "4882:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 80,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 78,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "4899:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 79,
																	"name": "version",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 73,
																	"src": "4914:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "4899:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4881:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4923:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 75,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4873:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:99:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "4873:99:0"
											},
											{
												"expression": {
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 85,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "4982:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 86,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "4997:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4982:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 88,
												"nodeType": "ExpressionStatement",
												"src": "4982:22:0"
											},
											{
												"expression": {
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 89,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "5014:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 90,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5030:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5014:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "5014:20:0"
											},
											{
												"id": 93,
												"nodeType": "PlaceholderStatement",
												"src": "5044:1:0"
											},
											{
												"expression": {
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 94,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "5055:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 95,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5071:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "5055:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 97,
												"nodeType": "ExpressionStatement",
												"src": "5055:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 99,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "5103:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 98,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "5091:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
															"typeString": "function (uint8)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5091:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "5086:25:0"
											}
										]
									},
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "3758:1062:0",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 103,
									"name": "reinitializer",
									"nameLocation": "4834:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "4854:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "4848:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 72,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4848:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4847:15:0"
									},
									"src": "4825:293:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 112,
										"nodeType": "Block",
										"src": "5356:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 107,
															"name": "_initializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "5374:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67",
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5389:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															},
															"value": "Initializable: contract is not initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															}
														],
														"id": 106,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5366:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5366:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 110,
												"nodeType": "ExpressionStatement",
												"src": "5366:69:0"
											},
											{
												"id": 111,
												"nodeType": "PlaceholderStatement",
												"src": "5445:1:0"
											}
										]
									},
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "5124:199:0",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 113,
									"name": "onlyInitializing",
									"nameLocation": "5337:16:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5353:2:0"
									},
									"src": "5328:125:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "5988:231:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "6006:14:0",
															"subExpression": {
																"id": 118,
																"name": "_initializing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 9,
																"src": "6007:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67",
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6022:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															},
															"value": "Initializable: contract is initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															}
														],
														"id": 117,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5998:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 122,
												"nodeType": "ExpressionStatement",
												"src": "5998:66:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 123,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "6078:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6099:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 125,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "6099:5:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 124,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6094:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6094:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 128,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6106:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6094:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "6078:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 147,
												"nodeType": "IfStatement",
												"src": "6074:139:0",
												"trueBody": {
													"id": 146,
													"nodeType": "Block",
													"src": "6111:102:0",
													"statements": [
														{
															"expression": {
																"id": 136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 130,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "6125:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 133,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6145:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 132,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "6145:5:0",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				}
																			],
																			"id": 131,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "6140:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6140:11:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint8",
																			"typeString": "type(uint8)"
																		}
																	},
																	"id": 135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "6152:3:0",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "6140:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "6125:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 137,
															"nodeType": "ExpressionStatement",
															"src": "6125:30:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 141,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "6191:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					},
																					"typeName": {
																						"id": 140,
																						"name": "uint8",
																						"nodeType": "ElementaryTypeName",
																						"src": "6191:5:0",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					}
																				],
																				"id": 139,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "6186:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 142,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6186:11:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint8",
																				"typeString": "type(uint8)"
																			}
																		},
																		"id": 143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6198:3:0",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "6186:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 138,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "6174:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6174:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 145,
															"nodeType": "EmitStatement",
															"src": "6169:33:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "5459:475:0",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "5948:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5968:2:0"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5988:0:0"
									},
									"scope": 168,
									"src": "5939:280:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 157,
										"nodeType": "Block",
										"src": "6393:36:0",
										"statements": [
											{
												"expression": {
													"id": 155,
													"name": "_initialized",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 6,
													"src": "6410:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 154,
												"id": 156,
												"nodeType": "Return",
												"src": "6403:19:0"
											}
										]
									},
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "6225:99:0",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "6338:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6360:2:0"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "6386:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 152,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6386:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6385:7:0"
									},
									"scope": 168,
									"src": "6329:100:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "6601:37:0",
										"statements": [
											{
												"expression": {
													"id": 164,
													"name": "_initializing",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 9,
													"src": "6618:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 163,
												"id": 165,
												"nodeType": "Return",
												"src": "6611:20:0"
											}
										]
									},
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "6435:105:0",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "6554:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6569:2:0"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "6595:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 161,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6595:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6594:6:0"
									},
									"scope": 168,
									"src": "6545:93:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 169,
							"src": "2394:4246:0",
							"usedErrors": []
						}
					],
					"src": "113:6528:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							498
						]
					},
					"id": 499,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 170,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AddressUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 171,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:1",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 498,
							"linearizedBaseContracts": [
								498
							],
							"name": "AddressUpgradeable",
							"nameLocation": "202:18:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 185,
										"nodeType": "Block",
										"src": "1489:254:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 179,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 174,
																"src": "1713:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1721:4:1",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1713:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 181,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1726:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1713:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 182,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1735:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1713:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 178,
												"id": 184,
												"nodeType": "Return",
												"src": "1706:30:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "227:1191:1",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1432:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1451:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "1443:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1443:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1442:17:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "1483:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1483:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1482:6:1"
									},
									"scope": 498,
									"src": "1423:320:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "2729:241:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 197,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2755:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$498",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$498",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2747:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 195,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2747:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2747:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2761:7:1",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2747:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 200,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 191,
																"src": "2772:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2747:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 202,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2780:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 194,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2739:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2739:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 204,
												"nodeType": "ExpressionStatement",
												"src": "2739:73:1"
											},
											{
												"assignments": [
													206,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 206,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2829:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 219,
														"src": "2824:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 205,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2824:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 213,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2872:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 207,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 189,
																"src": "2842:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2852:4:1",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2842:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 210,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 209,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 191,
																"src": "2864:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2842:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2842:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2823:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 215,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 206,
															"src": "2893:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2902:60:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 214,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2885:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2885:78:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 218,
												"nodeType": "ExpressionStatement",
												"src": "2885:78:1"
											}
										]
									},
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "1749:904:1",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2667:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2693:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "2677:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2712:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "2704:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2676:43:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2729:0:1"
									},
									"scope": 498,
									"src": "2658:312:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "3801:96:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 231,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "3840:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 232,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "3848:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3854:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 234,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3857:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 230,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															278,
															322
														],
														"referencedDeclaration": 322,
														"src": "3818:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3818:72:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 229,
												"id": 236,
												"nodeType": "Return",
												"src": "3811:79:1"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "2976:731:1",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3721:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3742:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "3734:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3734:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3763:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "3750:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 224,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3750:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3733:35:1"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "3787:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 227,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3787:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3786:14:1"
									},
									"scope": 498,
									"src": "3712:185:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "4266:76:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 251,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "4305:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 252,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "4313:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4319:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 254,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "4322:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 250,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															278,
															322
														],
														"referencedDeclaration": 322,
														"src": "4283:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4283:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 249,
												"id": 256,
												"nodeType": "Return",
												"src": "4276:59:1"
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "3903:211:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4128:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4158:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "4150:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4150:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4187:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "4174:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 242,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4174:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4215:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "4201:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 244,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4201:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4140:93:1"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "4252:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 247,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4252:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4251:14:1"
									},
									"scope": 498,
									"src": "4119:223:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "4817:111:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 271,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "4856:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 272,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "4864:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 273,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "4870:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4877:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 270,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															278,
															322
														],
														"referencedDeclaration": 322,
														"src": "4834:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4834:87:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 269,
												"id": 276,
												"nodeType": "Return",
												"src": "4827:94:1"
											}
										]
									},
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "4348:351:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4713:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4743:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "4735:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4735:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4764:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "4751:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 262,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4751:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4778:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "4770:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4770:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4734:50:1"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "4803:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 267,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4803:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4802:14:1"
									},
									"scope": 498,
									"src": "4704:224:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 321,
										"nodeType": "Block",
										"src": "5355:267:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 299,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 295,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5381:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$498",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$498",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5373:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 293,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5373:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5373:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5387:7:1",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5373:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 298,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "5398:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5373:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 300,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5405:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 292,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5365:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5365:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "5365:81:1"
											},
											{
												"assignments": [
													304,
													306
												],
												"declarations": [
													{
														"constant": false,
														"id": 304,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5462:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 321,
														"src": "5457:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 303,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5457:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 306,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5484:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 321,
														"src": "5471:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 305,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5471:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 313,
												"initialValue": {
													"arguments": [
														{
															"id": 311,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "5524:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 307,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 281,
																"src": "5498:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5505:4:1",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5498:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 310,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 309,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "5517:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5498:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5498:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5456:73:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 315,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "5573:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 316,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "5581:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 317,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 306,
															"src": "5590:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 318,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "5602:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 314,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "5546:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5546:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 291,
												"id": 320,
												"nodeType": "Return",
												"src": "5539:76:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "4934:237:1",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 322,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5185:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5224:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "5216:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5216:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5253:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "5240:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 282,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5240:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5275:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "5267:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5267:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5304:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "5290:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 286,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5290:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5206:116:1"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "5341:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 289,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5341:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5340:14:1"
									},
									"scope": 498,
									"src": "5176:446:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 338,
										"nodeType": "Block",
										"src": "5899:97:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 333,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 325,
															"src": "5935:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 334,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "5943:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5949:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 332,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															339,
															368
														],
														"referencedDeclaration": 368,
														"src": "5916:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5916:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 331,
												"id": 337,
												"nodeType": "Return",
												"src": "5909:80:1"
											}
										]
									},
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "5628:166:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5808:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5835:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "5827:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5827:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5856:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "5843:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 326,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5843:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5826:35:1"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "5885:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 329,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5885:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5884:14:1"
									},
									"scope": 498,
									"src": "5799:197:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 367,
										"nodeType": "Block",
										"src": "6338:168:1",
										"statements": [
											{
												"assignments": [
													352,
													354
												],
												"declarations": [
													{
														"constant": false,
														"id": 352,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6354:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 367,
														"src": "6349:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 351,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6349:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 354,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6376:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 367,
														"src": "6363:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 353,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6363:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 359,
												"initialValue": {
													"arguments": [
														{
															"id": 357,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "6408:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 355,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "6390:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 356,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6397:10:1",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6390:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6348:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 361,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "6457:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 362,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "6465:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 363,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 354,
															"src": "6474:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 364,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "6486:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 360,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "6430:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6430:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 350,
												"id": 366,
												"nodeType": "Return",
												"src": "6423:76:1"
											}
										]
									},
									"documentation": {
										"id": 340,
										"nodeType": "StructuredDocumentation",
										"src": "6002:173:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6189:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6225:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "6217:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6217:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6254:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "6241:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 343,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6241:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6282:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "6268:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 345,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6268:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6207:93:1"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "6324:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 348,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6324:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6323:14:1"
									},
									"scope": 498,
									"src": "6180:326:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "6782:101:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 379,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 371,
															"src": "6820:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 380,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "6828:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6834:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 378,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															385,
															414
														],
														"referencedDeclaration": 414,
														"src": "6799:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6799:77:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 377,
												"id": 383,
												"nodeType": "Return",
												"src": "6792:84:1"
											}
										]
									},
									"documentation": {
										"id": 369,
										"nodeType": "StructuredDocumentation",
										"src": "6512:168:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6694:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6723:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "6715:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6715:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6744:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "6731:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 372,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6731:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6714:35:1"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "6768:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 375,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6768:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6767:14:1"
									},
									"scope": 498,
									"src": "6685:198:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 413,
										"nodeType": "Block",
										"src": "7224:170:1",
										"statements": [
											{
												"assignments": [
													398,
													400
												],
												"declarations": [
													{
														"constant": false,
														"id": 398,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7240:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 413,
														"src": "7235:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 397,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7235:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 400,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7262:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 413,
														"src": "7249:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 399,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7249:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 405,
												"initialValue": {
													"arguments": [
														{
															"id": 403,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "7296:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 401,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7276:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 402,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7283:12:1",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7276:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7276:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7234:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 407,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7345:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 408,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "7353:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 409,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "7362:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 410,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "7374:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 406,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "7318:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7318:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 396,
												"id": 412,
												"nodeType": "Return",
												"src": "7311:76:1"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "6889:175:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7078:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7116:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "7108:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7145:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "7132:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 389,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7132:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7173:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "7159:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 391,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7159:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7098:93:1"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "7210:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 394,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7210:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7209:14:1"
									},
									"scope": 498,
									"src": "7069:325:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "7876:434:1",
										"statements": [
											{
												"condition": {
													"id": 428,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 419,
													"src": "7890:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 450,
													"nodeType": "Block",
													"src": "8246:58:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 446,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 421,
																		"src": "8268:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 447,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 423,
																		"src": "8280:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 445,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 497,
																	"src": "8260:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8260:33:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 449,
															"nodeType": "ExpressionStatement",
															"src": "8260:33:1"
														}
													]
												},
												"id": 451,
												"nodeType": "IfStatement",
												"src": "7886:418:1",
												"trueBody": {
													"id": 444,
													"nodeType": "Block",
													"src": "7899:341:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 429,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 421,
																		"src": "7917:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7928:6:1",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7917:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7938:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7917:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 441,
															"nodeType": "IfStatement",
															"src": "7913:286:1",
															"trueBody": {
																"id": 440,
																"nodeType": "Block",
																"src": "7941:258:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 435,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 417,
																							"src": "8143:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 434,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 186,
																						"src": "8132:10:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 436,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8132:18:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 437,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8152:31:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 433,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8124:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 438,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8124:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 439,
																		"nodeType": "ExpressionStatement",
																		"src": "8124:60:1"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 442,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "8219:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 427,
															"id": 443,
															"nodeType": "Return",
															"src": "8212:17:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "7400:277:1",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7691:26:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7735:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "7727:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7727:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7756:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "7751:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 418,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7751:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7786:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "7773:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 420,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7773:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7820:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "7806:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 422,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7806:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7717:121:1"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "7862:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 425,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7862:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7861:14:1"
									},
									"scope": 498,
									"src": "7682:628:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "8691:135:1",
										"statements": [
											{
												"condition": {
													"id": 465,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 456,
													"src": "8705:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 474,
													"nodeType": "Block",
													"src": "8762:58:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 470,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 458,
																		"src": "8784:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 471,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 460,
																		"src": "8796:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 469,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 497,
																	"src": "8776:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8776:33:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 473,
															"nodeType": "ExpressionStatement",
															"src": "8776:33:1"
														}
													]
												},
												"id": 475,
												"nodeType": "IfStatement",
												"src": "8701:119:1",
												"trueBody": {
													"id": 468,
													"nodeType": "Block",
													"src": "8714:42:1",
													"statements": [
														{
															"expression": {
																"id": 466,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "8735:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 464,
															"id": 467,
															"nodeType": "Return",
															"src": "8728:17:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 454,
										"nodeType": "StructuredDocumentation",
										"src": "8316:210:1",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8540:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8571:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "8566:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 455,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8566:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8601:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "8588:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 457,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8588:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8635:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "8621:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 459,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8621:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8556:97:1"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "8677:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 462,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8677:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8676:14:1"
									},
									"scope": 498,
									"src": "8531:295:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 496,
										"nodeType": "Block",
										"src": "8915:457:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 484,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "8991:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 485,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9002:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8991:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 486,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9011:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8991:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 494,
													"nodeType": "Block",
													"src": "9321:45:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 491,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 481,
																		"src": "9342:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 490,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9335:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9335:20:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 493,
															"nodeType": "ExpressionStatement",
															"src": "9335:20:1"
														}
													]
												},
												"id": 495,
												"nodeType": "IfStatement",
												"src": "8987:379:1",
												"trueBody": {
													"id": 489,
													"nodeType": "Block",
													"src": "9014:301:1",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "9172:133:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9190:40:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9219:10:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9213:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9213:17:1"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "9194:15:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9258:2:1",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9262:10:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9254:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9254:19:1"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9275:15:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9247:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9247:44:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9247:44:1"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 479,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9219:10:1",
																	"valueSize": 1
																},
																{
																	"declaration": 479,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9262:10:1",
																	"valueSize": 1
																}
															],
															"id": 488,
															"nodeType": "InlineAssembly",
															"src": "9163:142:1"
														}
													]
												}
											}
										]
									},
									"id": 497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8841:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8862:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "8849:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 478,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8849:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8888:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "8874:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 480,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8874:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8848:53:1"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8915:0:1"
									},
									"scope": 498,
									"src": "8832:540:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 499,
							"src": "194:9180:1",
							"usedErrors": []
						}
					],
					"src": "101:9274:1"
				},
				"id": 1
			},
			"erc3643/erc3643/factory/Ifactory.sol": {
				"ast": {
					"absolutePath": "erc3643/erc3643/factory/Ifactory.sol",
					"exportedSymbols": {
						"Ifactory": [
							531
						]
					},
					"id": 532,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 500,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Ifactory",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 531,
							"linearizedBaseContracts": [
								531
							],
							"name": "Ifactory",
							"nameLocation": "72:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "709bc7f3",
									"id": 505,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenImplementation",
									"nameLocation": "96:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "118:2:2"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "144:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "144:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "143:9:2"
									},
									"scope": 531,
									"src": "87:66:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6ff6e83f",
									"id": 510,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCTRImplementation",
									"nameLocation": "168:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "188:2:2"
									},
									"returnParameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "214:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "214:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "213:9:2"
									},
									"scope": 531,
									"src": "159:64:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1ee9ce8b",
									"id": 515,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getIRImplementation",
									"nameLocation": "238:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "257:2:2"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "283:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "283:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "282:9:2"
									},
									"scope": 531,
									"src": "229:63:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9e3e7bb9",
									"id": 520,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getIRSImplementation",
									"nameLocation": "307:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "327:2:2"
									},
									"returnParameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "353:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "353:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "352:9:2"
									},
									"scope": 531,
									"src": "298:64:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fedcc052",
									"id": 525,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTIRImplementation",
									"nameLocation": "377:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "397:2:2"
									},
									"returnParameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "423:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "423:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "422:9:2"
									},
									"scope": 531,
									"src": "368:64:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "61f89825",
									"id": 530,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getMCImplementation",
									"nameLocation": "447:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "466:2:2"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "492:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "492:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "491:9:2"
									},
									"scope": 531,
									"src": "438:63:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 532,
							"src": "62:441:2",
							"usedErrors": []
						}
					],
					"src": "37:467:2"
				},
				"id": 2
			},
			"erc3643/erc3643/proxy/AbstractProxy.sol": {
				"ast": {
					"absolutePath": "erc3643/erc3643/proxy/AbstractProxy.sol",
					"exportedSymbols": {
						"AbstractProxy": [
							613
						],
						"AddressUpgradeable": [
							498
						],
						"IProxy": [
							632
						],
						"Ifactory": [
							531
						],
						"Initializable": [
							168
						]
					},
					"id": 614,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 533,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:3"
						},
						{
							"absolutePath": "erc3643/erc3643/proxy/IProxy.sol",
							"file": "./IProxy.sol",
							"id": 534,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 614,
							"sourceUnit": 633,
							"src": "62:22:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "erc3643/erc3643/factory/Ifactory.sol",
							"file": "../factory/Ifactory.sol",
							"id": 535,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 614,
							"sourceUnit": 532,
							"src": "85:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 536,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 614,
							"sourceUnit": 169,
							"src": "119:75:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 537,
										"name": "IProxy",
										"nameLocations": [
											"231:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 632,
										"src": "231:6:3"
									},
									"id": 538,
									"nodeType": "InheritanceSpecifier",
									"src": "231:6:3"
								},
								{
									"baseName": {
										"id": 539,
										"name": "Initializable",
										"nameLocations": [
											"239:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 168,
										"src": "239:13:3"
									},
									"id": 540,
									"nodeType": "InheritanceSpecifier",
									"src": "239:13:3"
								}
							],
							"canonicalName": "AbstractProxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 613,
							"linearizedBaseContracts": [
								613,
								168,
								632
							],
							"name": "AbstractProxy",
							"nameLocation": "214:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										626
									],
									"body": {
										"id": 573,
										"nodeType": "Block",
										"src": "414:450:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 547,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "445:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "449:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "445:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 549,
																	"name": "getImplementationAuthority",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "459:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "459:28:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "445:42:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6f6e6c792063757272656e7420696d706c656d656e746174696f6e417574686f726974792063616e2063616c6c",
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "501:47:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9b0411664657bdf301d39de4dc1d8c8916476c6a591c7fcd5f6e535fa22de2ca",
																"typeString": "literal_string \"only current implementationAuthority can call\""
															},
															"value": "only current implementationAuthority can call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9b0411664657bdf301d39de4dc1d8c8916476c6a591c7fcd5f6e535fa22de2ca",
																"typeString": "literal_string \"only current implementationAuthority can call\""
															}
														],
														"id": 546,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "424:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "424:134:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "424:134:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 556,
																"name": "_newImplementationAuthority",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 542,
																"src": "589:27:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 559,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "628:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "620:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 557,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "620:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "620:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "589:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "644:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															},
															"value": "invalid argument - zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															}
														],
														"id": 555,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "568:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "568:119:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 564,
												"nodeType": "ExpressionStatement",
												"src": "568:119:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 566,
															"name": "_newImplementationAuthority",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "728:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 565,
														"name": "_storeImplementationAuthority",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "698:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "698:58:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 568,
												"nodeType": "ExpressionStatement",
												"src": "698:58:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 570,
															"name": "_newImplementationAuthority",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "828:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 569,
														"name": "ImplementationAuthoritySet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 620,
														"src": "801:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "801:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 572,
												"nodeType": "EmitStatement",
												"src": "796:60:3"
											}
										]
									},
									"functionSelector": "92dd9d65",
									"id": 574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setImplementationAuthority",
									"nameLocation": "312:26:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 544,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "401:8:3"
									},
									"parameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "_newImplementationAuthority",
												"nameLocation": "347:27:3",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "339:35:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "339:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "338:37:3"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "414:0:3"
									},
									"scope": 613,
									"src": "303:561:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										631
									],
									"body": {
										"id": 586,
										"nodeType": "Block",
										"src": "983:222:3",
										"statements": [
											{
												"assignments": [
													581
												],
												"declarations": [
													{
														"constant": false,
														"id": 581,
														"mutability": "mutable",
														"name": "implemAuth",
														"nameLocation": "1001:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 586,
														"src": "993:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 580,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "993:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 582,
												"nodeType": "VariableDeclarationStatement",
												"src": "993:18:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1031:141:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1045:117:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1082:66:3",
																		"type": "",
																		"value": "0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "1059:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1059:103:3"
															},
															"variableNames": [
																{
																	"name": "implemAuth",
																	"nodeType": "YulIdentifier",
																	"src": "1045:10:3"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 581,
														"isOffset": false,
														"isSlot": false,
														"src": "1045:10:3",
														"valueSize": 1
													}
												],
												"id": 583,
												"nodeType": "InlineAssembly",
												"src": "1022:150:3"
											},
											{
												"expression": {
													"id": 584,
													"name": "implemAuth",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 581,
													"src": "1188:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 579,
												"id": 585,
												"nodeType": "Return",
												"src": "1181:17:3"
											}
										]
									},
									"functionSelector": "2d5f1187",
									"id": 587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementationAuthority",
									"nameLocation": "879:26:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 576,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "944:8:3"
									},
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "905:2:3"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 613,
									"src": "870:335:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "1304:194:3",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1323:169:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1361:66:3",
																		"type": "",
																		"value": "0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7"
																	},
																	{
																		"name": "implementationAuthority",
																		"nodeType": "YulIdentifier",
																		"src": "1445:23:3"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "1337:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1337:145:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1337:145:3"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 589,
														"isOffset": false,
														"isSlot": false,
														"src": "1445:23:3",
														"valueSize": 1
													}
												],
												"id": 592,
												"nodeType": "InlineAssembly",
												"src": "1314:178:3"
											}
										]
									},
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_storeImplementationAuthority",
									"nameLocation": "1220:29:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "implementationAuthority",
												"nameLocation": "1258:23:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "1250:31:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1250:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1249:33:3"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1304:0:3"
									},
									"scope": 613,
									"src": "1211:287:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 611,
										"nodeType": "Block",
										"src": "1553:77:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "656970313936372e70726f78792e6e616d65",
																				"id": 604,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1596:20:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_4cd9b827ca535ceb0880425d70eff88561ecdf04dc32fcf7ff3b15c587f8a871",
																					"typeString": "literal_string \"eip1967.proxy.name\""
																				},
																				"value": "eip1967.proxy.name"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_4cd9b827ca535ceb0880425d70eff88561ecdf04dc32fcf7ff3b15c587f8a871",
																					"typeString": "literal_string \"eip1967.proxy.name\""
																				}
																			],
																			"id": 603,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967288,
																			"src": "1586:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 605,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1586:31:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1578:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 601,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1578:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 606,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1578:40:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 607,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1621:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1578:44:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 600,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1570:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes32_$",
															"typeString": "type(bytes32)"
														},
														"typeName": {
															"id": 599,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1570:7:3",
															"typeDescriptions": {}
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1570:53:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 598,
												"id": 610,
												"nodeType": "Return",
												"src": "1563:60:3"
											}
										]
									},
									"functionSelector": "24173669",
									"id": 612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getslot",
									"nameLocation": "1513:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1520:2:3"
									},
									"returnParameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "1544:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 596,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1544:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:9:3"
									},
									"scope": 613,
									"src": "1504:126:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 614,
							"src": "196:1436:3",
							"usedErrors": []
						}
					],
					"src": "37:1596:3"
				},
				"id": 3
			},
			"erc3643/erc3643/proxy/IProxy.sol": {
				"ast": {
					"absolutePath": "erc3643/erc3643/proxy/IProxy.sol",
					"exportedSymbols": {
						"IProxy": [
							632
						]
					},
					"id": 633,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 615,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IProxy",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 632,
							"linearizedBaseContracts": [
								632
							],
							"name": "IProxy",
							"nameLocation": "72:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "85:11:4",
										"text": "events"
									},
									"eventSelector": "3b1074392ed8e8424715d0dda2197eede67080b377fc8370e26f3e882207f6b8",
									"id": 620,
									"name": "ImplementationAuthoritySet",
									"nameLocation": "107:26:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"indexed": true,
												"mutability": "mutable",
												"name": "_implementationAuthority",
												"nameLocation": "150:24:4",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "134:40:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "134:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "133:42:4"
									},
									"src": "101:75:4"
								},
								{
									"documentation": {
										"id": 621,
										"nodeType": "StructuredDocumentation",
										"src": "182:14:4",
										"text": "functions"
									},
									"functionSelector": "92dd9d65",
									"id": 626,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setImplementationAuthority",
									"nameLocation": "210:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "_newImplementationAuthority",
												"nameLocation": "245:27:4",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "237:35:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "237:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "236:37:4"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "290:0:4"
									},
									"scope": 632,
									"src": "201:90:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2d5f1187",
									"id": 631,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementationAuthority",
									"nameLocation": "306:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "332:2:4"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "358:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 628,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:9:4"
									},
									"scope": 632,
									"src": "297:70:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 633,
							"src": "62:307:4",
							"usedErrors": []
						}
					],
					"src": "37:333:4"
				},
				"id": 4
			},
			"erc3643/erc3643/proxy/TokenProxy.sol": {
				"ast": {
					"absolutePath": "erc3643/erc3643/proxy/TokenProxy.sol",
					"exportedSymbols": {
						"AbstractProxy": [
							613
						],
						"AddressUpgradeable": [
							498
						],
						"IProxy": [
							632
						],
						"Ifactory": [
							531
						],
						"Initializable": [
							168
						],
						"TokenProxy": [
							787
						]
					},
					"id": 788,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 634,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:5"
						},
						{
							"absolutePath": "erc3643/erc3643/proxy/AbstractProxy.sol",
							"file": "./AbstractProxy.sol",
							"id": 635,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 788,
							"sourceUnit": 614,
							"src": "62:29:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 636,
										"name": "AbstractProxy",
										"nameLocations": [
											"116:13:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 613,
										"src": "116:13:5"
									},
									"id": 637,
									"nodeType": "InheritanceSpecifier",
									"src": "116:13:5"
								}
							],
							"canonicalName": "TokenProxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 787,
							"linearizedBaseContracts": [
								787,
								613,
								168,
								632
							],
							"name": "TokenProxy",
							"nameLocation": "102:10:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 758,
										"nodeType": "Block",
										"src": "370:1303:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 667,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 655,
																		"name": "implementationAuthority",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 639,
																		"src": "401:23:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 658,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "436:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 657,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "428:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 656,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "428:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "428:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "401:37:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 661,
																		"name": "_identityRegistry",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 641,
																		"src": "458:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 664,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "487:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 663,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "479:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 662,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "479:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 665,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "479:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "458:31:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "401:88:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 673,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 668,
																	"name": "_compliance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 643,
																	"src": "509:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "532:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "524:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 669,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "524:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "524:10:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "509:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "401:133:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
															"id": 675,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "548:33:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															},
															"value": "invalid argument - zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															}
														],
														"id": 654,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "380:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "380:211:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "380:211:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 682,
																					"name": "_name",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 645,
																					"src": "643:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"expression": {
																					"id": 680,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "632:3:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 681,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "636:6:5",
																				"memberName": "encode",
																				"nodeType": "MemberAccess",
																				"src": "632:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 683,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "632:17:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 679,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "622:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 684,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "622:28:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"hexValue": "",
																					"id": 688,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "675:2:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																						"typeString": "literal_string \"\""
																					},
																					"value": ""
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																						"typeString": "literal_string \"\""
																					}
																				],
																				"expression": {
																					"id": 686,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "664:3:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 687,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "668:6:5",
																				"memberName": "encode",
																				"nodeType": "MemberAccess",
																				"src": "664:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "664:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 685,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "654:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "654:25:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "622:57:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 695,
																					"name": "_symbol",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 647,
																					"src": "720:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"expression": {
																					"id": 693,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "709:3:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 694,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "713:6:5",
																				"memberName": "encode",
																				"nodeType": "MemberAccess",
																				"src": "709:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 696,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "709:19:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 692,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "699:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "699:30:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"hexValue": "",
																					"id": 701,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "754:2:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																						"typeString": "literal_string \"\""
																					},
																					"value": ""
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																						"typeString": "literal_string \"\""
																					}
																				],
																				"expression": {
																					"id": 699,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "743:3:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 700,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "747:6:5",
																				"memberName": "encode",
																				"nodeType": "MemberAccess",
																				"src": "743:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 702,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "743:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 698,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "733:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "733:25:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "699:59:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "622:136:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420617267756d656e74202d20656d70747920737472696e67",
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "772:33:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dc9856d8b4713539728c52fe152810735e90f1ce90842036c15fecf2b16c2a36",
																"typeString": "literal_string \"invalid argument - empty string\""
															},
															"value": "invalid argument - empty string"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dc9856d8b4713539728c52fe152810735e90f1ce90842036c15fecf2b16c2a36",
																"typeString": "literal_string \"invalid argument - empty string\""
															}
														],
														"id": 678,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "601:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "601:214:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 708,
												"nodeType": "ExpressionStatement",
												"src": "601:214:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 712,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "30",
																	"id": 710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "833:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 711,
																	"name": "_decimals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 649,
																	"src": "838:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "833:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 715,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 713,
																	"name": "_decimals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 649,
																	"src": "851:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "3138",
																	"id": 714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "864:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_18_by_1",
																		"typeString": "int_const 18"
																	},
																	"value": "18"
																},
																"src": "851:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "833:33:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "646563696d616c73206265747765656e203020616e64203138",
															"id": 717,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "868:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b90f43756a4f782856c713cd01f80842eeab7c1edc08be84635b711bcde2baf8",
																"typeString": "literal_string \"decimals between 0 and 18\""
															},
															"value": "decimals between 0 and 18"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b90f43756a4f782856c713cd01f80842eeab7c1edc08be84635b711bcde2baf8",
																"typeString": "literal_string \"decimals between 0 and 18\""
															}
														],
														"id": 709,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "825:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "825:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 719,
												"nodeType": "ExpressionStatement",
												"src": "825:71:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 721,
															"name": "implementationAuthority",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "936:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 720,
														"name": "_storeImplementationAuthority",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "906:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "906:54:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 723,
												"nodeType": "ExpressionStatement",
												"src": "906:54:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 725,
															"name": "implementationAuthority",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "1002:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 724,
														"name": "ImplementationAuthoritySet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 620,
														"src": "975:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "975:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 727,
												"nodeType": "EmitStatement",
												"src": "970:56:5"
											},
											{
												"assignments": [
													729
												],
												"declarations": [
													{
														"constant": false,
														"id": 729,
														"mutability": "mutable",
														"name": "logic",
														"nameLocation": "1045:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 758,
														"src": "1037:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 728,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1037:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 736,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 731,
																		"name": "getImplementationAuthority",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 587,
																		"src": "1062:26:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 732,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1062:28:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 730,
																"name": "Ifactory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 531,
																"src": "1053:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Ifactory_$531_$",
																	"typeString": "type(contract Ifactory)"
																}
															},
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1053:38:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Ifactory_$531",
																"typeString": "contract Ifactory"
															}
														},
														"id": 734,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1105:22:5",
														"memberName": "getTokenImplementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 505,
														"src": "1053:74:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1053:76:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1037:92:5"
											},
											{
												"assignments": [
													738,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 738,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1288:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 758,
														"src": "1283:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 737,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1283:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 752,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "696e697428616464726573732c616464726573732c737472696e672c737472696e672c75696e74382c75696e74313629",
																	"id": 743,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1374:50:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_41aef413eaea60c4e3bb1f09e49d4fb47632c44c98d46cab24cb8844783eff39",
																		"typeString": "literal_string \"init(address,address,string,string,uint8,uint16)\""
																	},
																	"value": "init(address,address,string,string,uint8,uint16)"
																},
																{
																	"id": 744,
																	"name": "_identityRegistry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 641,
																	"src": "1442:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 745,
																	"name": "_compliance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 643,
																	"src": "1477:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 746,
																	"name": "_name",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 645,
																	"src": "1506:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"id": 747,
																	"name": "_symbol",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 647,
																	"src": "1529:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"id": 748,
																	"name": "_decimals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 649,
																	"src": "1554:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																{
																	"id": 749,
																	"name": "maxsupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 651,
																	"src": "1581:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_41aef413eaea60c4e3bb1f09e49d4fb47632c44c98d46cab24cb8844783eff39",
																		"typeString": "literal_string \"init(address,address,string,string,uint8,uint16)\""
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	{
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																],
																"expression": {
																	"id": 741,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1333:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 742,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1337:19:5",
																"memberName": "encodeWithSignature",
																"nodeType": "MemberAccess",
																"src": "1333:23:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (string memory) pure returns (bytes memory)"
																}
															},
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1333:271:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 739,
															"name": "logic",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "1301:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 740,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1307:12:5",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "1301:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:313:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1282:332:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 754,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "1632:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a6174696f6e206661696c65642e",
															"id": 755,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1641:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_84817bd958e2e6d9a7351828ba5fd352a3aaf3cf97a67f6d55271e39a5b3e2ad",
																"typeString": "literal_string \"Initialization failed.\""
															},
															"value": "Initialization failed."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_84817bd958e2e6d9a7351828ba5fd352a3aaf3cf97a67f6d55271e39a5b3e2ad",
																"typeString": "literal_string \"Initialization failed.\""
															}
														],
														"id": 753,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1624:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1624:42:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 757,
												"nodeType": "ExpressionStatement",
												"src": "1624:42:5"
											}
										]
									},
									"id": 759,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "implementationAuthority",
												"nameLocation": "165:23:5",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "157:31:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "157:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "_identityRegistry",
												"nameLocation": "206:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "198:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "198:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "_compliance",
												"nameLocation": "241:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "233:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "233:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "276:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "262:19:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 644,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "262:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "305:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "291:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 646,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "291:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "_decimals",
												"nameLocation": "328:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "322:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 648,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "322:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "maxsupply",
												"nameLocation": "354:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "347:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 650,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "347:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "147:222:5"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "370:0:5"
									},
									"scope": 787,
									"src": "136:1537:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 772,
										"nodeType": "Block",
										"src": "1752:695:5",
										"statements": [
											{
												"assignments": [
													763
												],
												"declarations": [
													{
														"constant": false,
														"id": 763,
														"mutability": "mutable",
														"name": "logic",
														"nameLocation": "1770:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 772,
														"src": "1762:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 762,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1762:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 770,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 765,
																		"name": "getImplementationAuthority",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 587,
																		"src": "1787:26:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 766,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1787:28:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 764,
																"name": "Ifactory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 531,
																"src": "1778:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Ifactory_$531_$",
																	"typeString": "type(contract Ifactory)"
																}
															},
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1778:38:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Ifactory_$531",
																"typeString": "contract Ifactory"
															}
														},
														"id": 768,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1830:22:5",
														"memberName": "getTokenImplementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 505,
														"src": "1778:74:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1778:76:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1762:92:5"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1930:511:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1957:3:5",
																		"type": "",
																		"value": "0x0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1962:3:5",
																		"type": "",
																		"value": "0x0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1967:12:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1967:14:5"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1944:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1944:38:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1944:38:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1995:190:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "gas",
																					"nodeType": "YulIdentifier",
																					"src": "2044:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2044:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2051:5:5",
																				"type": "",
																				"value": "10000"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2040:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2040:17:5"
																	},
																	{
																		"name": "logic",
																		"nodeType": "YulIdentifier",
																		"src": "2075:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2098:3:5",
																		"type": "",
																		"value": "0x0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "2119:12:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2119:14:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2151:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2170:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "delegatecall",
																	"nodeType": "YulIdentifier",
																	"src": "2010:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2010:175:5"
															},
															"variables": [
																{
																	"name": "success",
																	"nodeType": "YulTypedName",
																	"src": "1999:7:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2198:29:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "2211:14:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2211:16:5"
															},
															"variables": [
																{
																	"name": "retSz",
																	"nodeType": "YulTypedName",
																	"src": "2202:5:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2255:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2258:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "retSz",
																		"nodeType": "YulIdentifier",
																		"src": "2261:5:5"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "2240:14:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2240:27:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2240:27:5"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2314:48:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2339:1:5",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "retSz",
																							"nodeType": "YulIdentifier",
																							"src": "2342:5:5"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "2332:6:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2332:16:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2332:16:5"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2307:55:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2312:1:5",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2383:48:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2408:1:5",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "retSz",
																							"nodeType": "YulIdentifier",
																							"src": "2411:5:5"
																						}
																					],
																					"functionName": {
																						"name": "return",
																						"nodeType": "YulIdentifier",
																						"src": "2401:6:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2401:16:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2401:16:5"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2375:56:5",
																	"value": "default"
																}
															],
															"expression": {
																"name": "success",
																"nodeType": "YulIdentifier",
																"src": "2287:7:5"
															},
															"nodeType": "YulSwitch",
															"src": "2280:151:5"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 763,
														"isOffset": false,
														"isSlot": false,
														"src": "2075:5:5",
														"valueSize": 1
													}
												],
												"id": 771,
												"nodeType": "InlineAssembly",
												"src": "1921:520:5"
											}
										]
									},
									"id": 773,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1740:2:5"
									},
									"returnParameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1752:0:5"
									},
									"scope": 787,
									"src": "1732:715:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 785,
										"nodeType": "Block",
										"src": "2498:87:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 779,
																		"name": "getImplementationAuthority",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 587,
																		"src": "2524:26:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 780,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2524:28:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 778,
																"name": "Ifactory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 531,
																"src": "2515:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Ifactory_$531_$",
																	"typeString": "type(contract Ifactory)"
																}
															},
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2515:38:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Ifactory_$531",
																"typeString": "contract Ifactory"
															}
														},
														"id": 782,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2554:22:5",
														"memberName": "getTokenImplementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 505,
														"src": "2515:61:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2515:63:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 777,
												"id": 784,
												"nodeType": "Return",
												"src": "2508:70:5"
											}
										]
									},
									"functionSelector": "6d4ce63c",
									"id": 786,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "2462:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2465:2:5"
									},
									"returnParameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "2489:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2489:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2488:9:5"
									},
									"scope": 787,
									"src": "2453:132:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 788,
							"src": "93:2494:5",
							"usedErrors": []
						}
					],
					"src": "37:2551:5"
				},
				"id": 5
			}
		}
	}
}