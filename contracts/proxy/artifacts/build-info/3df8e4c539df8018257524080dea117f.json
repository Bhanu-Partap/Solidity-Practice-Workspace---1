{
	"id": "3df8e4c539df8018257524080dea117f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\n\npragma solidity 0.8.17;\n\nimport \"./AbstractProxy.sol\";\n\ncontract ClaimTopicsRegistryProxy is AbstractProxy {\n    constructor(address implementationAuthority) {\n        require(\n            implementationAuthority != address(0),\n            \"invalid argument - zero address\"\n        );\n        _storeImplementationAuthority(implementationAuthority);\n        emit ImplementationAuthoritySet(implementationAuthority);\n\n        address logic = Ifactory(getImplementationAuthority())\n            .getCTRImplementation();\n\n       \n        (bool success, ) = logic.delegatecall(\n            abi.encodeWithSignature(\"init()\")\n        );\n        require(success, \"Initialization failed.\");\n    }\n\n    \n    fallback() external  {\n        address logic = Ifactory(getImplementationAuthority())\n            .getCTRImplementation();\n\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            calldatacopy(0x0, 0x0, calldatasize())\n            let success := delegatecall(\n                sub(gas(), 10000),\n                logic,\n                0x0,\n                calldatasize(),\n                0,\n                0\n            )\n            let retSz := returndatasize()\n            returndatacopy(0, 0, retSz)\n            switch success\n            case 0 {\n                revert(0, retSz)\n            }\n            default {\n                return(0, retSz)\n            }\n        }\n    }\n}\n"
			},
			"erc3643/erc3643/proxy/AbstractProxy.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity 0.8.17;\n\nimport \"./IProxy.sol\";\nimport \"../factory/Ifactory.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\n\nabstract contract AbstractProxy is IProxy, Initializable {\n     //event ram(address _contractaddress);\n    function setImplementationAuthority(address _newImplementationAuthority)\n        external\n        override\n    {\n        require(\n            msg.sender == getImplementationAuthority(),\n            \"only current implementationAuthority can call\"\n        );\n        require(\n            _newImplementationAuthority != address(0),\n            \"invalid argument - zero address\"\n        );\n\n        _storeImplementationAuthority(_newImplementationAuthority);\n           //emit ram(logic);\n        emit ImplementationAuthoritySet(_newImplementationAuthority);\n\n    }\n\n    function getImplementationAuthority()\n        public\n        view\n        override\n        returns (address)\n    {\n        address implemAuth;\n\n        assembly {\n            implemAuth := sload(\n                0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7\n            )\n        }\n        return implemAuth;\n    }\n\n    function _storeImplementationAuthority(address implementationAuthority)\n        internal\n    {\n        assembly {\n            sstore(\n                0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7,\n                implementationAuthority\n            )\n        }\n    }\n\n    function getslot() public pure returns (bytes32) {\n        return bytes32(uint256(keccak256(\"eip1967.proxy.name\")) - 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized != type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"
			},
			"erc3643/erc3643/factory/Ifactory.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity 0.8.17;\n\ninterface Ifactory {\n    function getTokenImplementation() external view returns (address);\n\n    function getCTRImplementation() external view returns (address);\n\n    function getIRImplementation() external view returns (address);\n\n    function getIRSImplementation() external view returns (address);\n\n    function getTIRImplementation() external view returns (address);\n\n    function getMCImplementation() external view returns (address);\n}\n"
			},
			"erc3643/erc3643/proxy/IProxy.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity 0.8.17;\n\ninterface IProxy {\n    /// events\n\n    event ImplementationAuthoritySet(address indexed _implementationAuthority);\n\n    /// functions\n\n    function setImplementationAuthority(address _newImplementationAuthority)\n        external;\n\n    function getImplementationAuthority() external view returns (address);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"custom:oz-retyped-from": "bool",
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 6,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 9,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"AddressUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:9374  library AddressUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:9374  library AddressUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220406c02da6ea54c727fe88902c530e9f5f7806f0ab57e7f2579e3fced1b9ea07264736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220406c02da6ea54c727fe88902c530e9f5f7806f0ab57e7f2579e3fced1b9ea07264736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH PUSH13 0x2DA6EA54C727FE88902C530E9 CREATE2 0xF7 DUP1 PUSH16 0xAB57E7F2579E3FCED1B9EA07264736F PUSH13 0x63430008110033000000000000 ",
							"sourceMap": "194:9180:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220406c02da6ea54c727fe88902c530e9f5f7806f0ab57e7f2579e3fced1b9ea07264736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH PUSH13 0x2DA6EA54C727FE88902C530E9 CREATE2 0xF7 DUP1 PUSH16 0xAB57E7F2579E3FCED1B9EA07264736F PUSH13 0x63430008110033000000000000 ",
							"sourceMap": "194:9180:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220406c02da6ea54c727fe88902c530e9f5f7806f0ab57e7f2579e3fced1b9ea07264736f6c63430008110033",
									".code": [
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"erc3643/erc3643/factory/Ifactory.sol",
								"erc3643/erc3643/proxy/AbstractProxy.sol",
								"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol",
								"erc3643/erc3643/proxy/IProxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"erc3643/erc3643/factory/Ifactory.sol": {
				"Ifactory": {
					"abi": [
						{
							"inputs": [],
							"name": "getCTRImplementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getIRImplementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getIRSImplementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMCImplementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTIRImplementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTokenImplementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getCTRImplementation()": "6ff6e83f",
							"getIRImplementation()": "1ee9ce8b",
							"getIRSImplementation()": "9e3e7bb9",
							"getMCImplementation()": "61f89825",
							"getTIRImplementation()": "fedcc052",
							"getTokenImplementation()": "709bc7f3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getCTRImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getIRImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getIRSImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMCImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTIRImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc3643/erc3643/factory/Ifactory.sol\":\"Ifactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc3643/erc3643/factory/Ifactory.sol\":{\"keccak256\":\"0x3e67d4c86a65ff2e93eb27a5e31ba24c9f14a597fa91f06069c91e3585c2de74\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3100bde0bae1e70eaa034298af2005e5c7944ea46ae287c68f8400e36987730c\",\"dweb:/ipfs/QmZgXTqKRdxJyG7C4sX5cuY9TPKfSrBwMTeFRwXnojFJ7p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"erc3643/erc3643/proxy/AbstractProxy.sol": {
				"AbstractProxy": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_implementationAuthority",
									"type": "address"
								}
							],
							"name": "ImplementationAuthoritySet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "getImplementationAuthority",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getslot",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newImplementationAuthority",
									"type": "address"
								}
							],
							"name": "setImplementationAuthority",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getImplementationAuthority()": "2d5f1187",
							"getslot()": "24173669",
							"setImplementationAuthority(address)": "92dd9d65"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_implementationAuthority\",\"type\":\"address\"}],\"name\":\"ImplementationAuthoritySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getImplementationAuthority\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getslot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newImplementationAuthority\",\"type\":\"address\"}],\"name\":\"setImplementationAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"ImplementationAuthoritySet(address)\":{\"notice\":\"events\"}},\"kind\":\"user\",\"methods\":{\"setImplementationAuthority(address)\":{\"notice\":\"functions\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc3643/erc3643/proxy/AbstractProxy.sol\":\"AbstractProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"erc3643/erc3643/factory/Ifactory.sol\":{\"keccak256\":\"0x3e67d4c86a65ff2e93eb27a5e31ba24c9f14a597fa91f06069c91e3585c2de74\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3100bde0bae1e70eaa034298af2005e5c7944ea46ae287c68f8400e36987730c\",\"dweb:/ipfs/QmZgXTqKRdxJyG7C4sX5cuY9TPKfSrBwMTeFRwXnojFJ7p\"]},\"erc3643/erc3643/proxy/AbstractProxy.sol\":{\"keccak256\":\"0xbf32caa0e3838e074d57d5c4f3f9174fcf55952e993edb3a9aeb3cf09c7b9a6c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://4327b215eeacb0172cafb37386e10c435b640ff58042a38b84b8c7503c4203bb\",\"dweb:/ipfs/QmdjhVn77jpAyTbXvNXEh1SqXAxfV43kWEpXaHAdUv15DS\"]},\"erc3643/erc3643/proxy/IProxy.sol\":{\"keccak256\":\"0x6493d0ec313502af3a02f83a3fbb5480d39db3a835019e6d63758ed092ce261e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3341cfa96e3672e9f7f831844731dcd93bc68526f0dd6c130f07547c7ca49538\",\"dweb:/ipfs/QmV7FZqjcUvi4tmhuQrFG744jPqRP3SqqM7U6dWNEVHFJw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 6,
								"contract": "erc3643/erc3643/proxy/AbstractProxy.sol:AbstractProxy",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 9,
								"contract": "erc3643/erc3643/proxy/AbstractProxy.sol:AbstractProxy",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"events": {
							"ImplementationAuthoritySet(address)": {
								"notice": "events"
							}
						},
						"kind": "user",
						"methods": {
							"setImplementationAuthority(address)": {
								"notice": "functions"
							}
						},
						"version": 1
					}
				}
			},
			"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol": {
				"ClaimTopicsRegistryProxy": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementationAuthority",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_implementationAuthority",
									"type": "address"
								}
							],
							"name": "ImplementationAuthoritySet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"stateMutability": "nonpayable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "getImplementationAuthority",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getslot",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newImplementationAuthority",
									"type": "address"
								}
							],
							"name": "setImplementationAuthority",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":94:1451  contract ClaimTopicsRegistryProxy is AbstractProxy {... */\n  mstore(0x40, 0x80)\n    /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":151:724  constructor(address implementationAuthority) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":262:263  0 */\n  0x00\n    /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":227:264  implementationAuthority != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":227:250  implementationAuthority */\n  dup2\n    /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":227:264  implementationAuthority != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":206:321  require(... */\n  tag_6\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_7\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_6:\n    /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":331:385  _storeImplementationAuthority(implementationAuthority) */\n  tag_9\n    /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":361:384  implementationAuthority */\n  dup2\n    /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":331:360  _storeImplementationAuthority */\n  shl(0x20, tag_10)\n    /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":331:385  _storeImplementationAuthority(implementationAuthority) */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":427:450  implementationAuthority */\n  dup1\n    /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":400:451  ImplementationAuthoritySet(implementationAuthority) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x3b1074392ed8e8424715d0dda2197eede67080b377fc8370e26f3e882207f6b8\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log2\n    /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":462:475  address logic */\n  0x00\n    /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":487:515  getImplementationAuthority() */\n  tag_11\n    /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":487:513  getImplementationAuthority */\n  shl(0x20, tag_12)\n    /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":487:515  getImplementationAuthority() */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":478:550  Ifactory(getImplementationAuthority())... */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x6ff6e83f\n    /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":478:552  Ifactory(getImplementationAuthority())... */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_14\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_14:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_15\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_15:\n    /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":462:552  address logic = Ifactory(getImplementationAuthority())... */\n  swap1\n  pop\n    /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":572:584  bool success */\n  0x00\n    /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":590:595  logic */\n  dup2\n    /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":590:608  logic.delegatecall */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":622:655  abi.encodeWithSignature(\"init()\") */\n  add(0x24, mload(0x40))\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n  and(not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff), 0xe1c7392a00000000000000000000000000000000000000000000000000000000)\n  0x20\n  dup3\n  add\n  dup1\n  mload\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n  dup4\n  dup2\n  dup4\n  and\n  or\n  dup4\n  mstore\n  pop\n  pop\n  pop\n  pop\n    /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":590:665  logic.delegatecall(... */\n  mload(0x40)\n  tag_16\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup6\n  gas\n  delegatecall\n  swap2\n  pop\n  pop\n  returndatasize\n  dup1\n  0x00\n  dup2\n  eq\n  tag_20\n  jumpi\n  mload(0x40)\n  swap2\n  pop\n  and(add(returndatasize, 0x3f), not(0x1f))\n  dup3\n  add\n  0x40\n  mstore\n  returndatasize\n  dup3\n  mstore\n  returndatasize\n  0x00\n  0x20\n  dup5\n  add\n  returndatacopy\n  jump(tag_19)\ntag_20:\n  0x60\n  swap2\n  pop\ntag_19:\n  pop\n    /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":571:665  (bool success, ) = logic.delegatecall(... */\n  pop\n  swap1\n  pop\n    /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":683:690  success */\n  dup1\n    /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":675:717  require(success, \"Initialization failed.\") */\n  tag_21\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_22\n  swap1\n  tag_23\n  jump\t// in\ntag_22:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_21:\n    /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":196:724  {... */\n  pop\n  pop\n    /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":151:724  constructor(address implementationAuthority) {... */\n  pop\n    /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":94:1451  contract ClaimTopicsRegistryProxy is AbstractProxy {... */\n  jump(tag_24)\n    /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":1211:1498  function _storeImplementationAuthority(address implementationAuthority)... */\ntag_10:\n    /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":1445:1468  implementationAuthority */\n  dup1\n    /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":1361:1427  0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7 */\n  0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7\n    /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":1337:1482  sstore(... */\n  sstore\n    /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":1211:1498  function _storeImplementationAuthority(address implementationAuthority)... */\n  pop\n  jump\t// out\n    /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":870:1205  function getImplementationAuthority()... */\ntag_12:\n    /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":970:977  address */\n  0x00\n    /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":993:1011  address implemAuth */\n  dup1\n    /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":1082:1148  0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7 */\n  0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7\n    /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":1059:1162  sload(... */\n  sload\n    /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":1045:1162  implemAuth := sload(... */\n  swap1\n  pop\n    /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":1188:1198  implemAuth */\n  dup1\n    /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":1181:1198  return implemAuth */\n  swap2\n  pop\n  pop\n    /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":870:1205  function getImplementationAuthority()... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_28:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_30:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_31:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_49\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_30\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_32:\n    /* \"#utility.yul\":641:665   */\n  tag_51\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_31\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_52\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_52:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_33:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_54\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_32\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_57\n  tag_28\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":932:1051   */\ntag_56:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_58\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_33\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1371   */\ntag_34:\n    /* \"#utility.yul\":1286:1297   */\n  0x00\n    /* \"#utility.yul\":1320:1326   */\n  dup3\n    /* \"#utility.yul\":1315:1318   */\n  dup3\n    /* \"#utility.yul\":1308:1327   */\n  mstore\n    /* \"#utility.yul\":1360:1364   */\n  0x20\n    /* \"#utility.yul\":1355:1358   */\n  dup3\n    /* \"#utility.yul\":1351:1365   */\n  add\n    /* \"#utility.yul\":1336:1365   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1371   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1377:1558   */\ntag_35:\n    /* \"#utility.yul\":1517:1550   */\n  0x696e76616c696420617267756d656e74202d207a65726f206164647265737300\n    /* \"#utility.yul\":1513:1514   */\n  0x00\n    /* \"#utility.yul\":1505:1511   */\n  dup3\n    /* \"#utility.yul\":1501:1515   */\n  add\n    /* \"#utility.yul\":1494:1551   */\n  mstore\n    /* \"#utility.yul\":1377:1558   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1564:1930   */\ntag_36:\n    /* \"#utility.yul\":1706:1709   */\n  0x00\n    /* \"#utility.yul\":1727:1794   */\n  tag_62\n    /* \"#utility.yul\":1791:1793   */\n  0x1f\n    /* \"#utility.yul\":1786:1789   */\n  dup4\n    /* \"#utility.yul\":1727:1794   */\n  tag_34\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1720:1794   */\n  swap2\n  pop\n    /* \"#utility.yul\":1803:1896   */\n  tag_63\n    /* \"#utility.yul\":1892:1895   */\n  dup3\n    /* \"#utility.yul\":1803:1896   */\n  tag_35\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":1921:1923   */\n  0x20\n    /* \"#utility.yul\":1916:1919   */\n  dup3\n    /* \"#utility.yul\":1912:1924   */\n  add\n    /* \"#utility.yul\":1905:1924   */\n  swap1\n  pop\n    /* \"#utility.yul\":1564:1930   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1936:2355   */\ntag_8:\n    /* \"#utility.yul\":2102:2106   */\n  0x00\n    /* \"#utility.yul\":2140:2142   */\n  0x20\n    /* \"#utility.yul\":2129:2138   */\n  dup3\n    /* \"#utility.yul\":2125:2143   */\n  add\n    /* \"#utility.yul\":2117:2143   */\n  swap1\n  pop\n    /* \"#utility.yul\":2189:2198   */\n  dup2\n    /* \"#utility.yul\":2183:2187   */\n  dup2\n    /* \"#utility.yul\":2179:2199   */\n  sub\n    /* \"#utility.yul\":2175:2176   */\n  0x00\n    /* \"#utility.yul\":2164:2173   */\n  dup4\n    /* \"#utility.yul\":2160:2177   */\n  add\n    /* \"#utility.yul\":2153:2200   */\n  mstore\n    /* \"#utility.yul\":2217:2348   */\n  tag_65\n    /* \"#utility.yul\":2343:2347   */\n  dup2\n    /* \"#utility.yul\":2217:2348   */\n  tag_36\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2209:2348   */\n  swap1\n  pop\n    /* \"#utility.yul\":1936:2355   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2361:2459   */\ntag_37:\n    /* \"#utility.yul\":2412:2418   */\n  0x00\n    /* \"#utility.yul\":2446:2451   */\n  dup2\n    /* \"#utility.yul\":2440:2452   */\n  mload\n    /* \"#utility.yul\":2430:2452   */\n  swap1\n  pop\n    /* \"#utility.yul\":2361:2459   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2465:2612   */\ntag_38:\n    /* \"#utility.yul\":2566:2577   */\n  0x00\n    /* \"#utility.yul\":2603:2606   */\n  dup2\n    /* \"#utility.yul\":2588:2606   */\n  swap1\n  pop\n    /* \"#utility.yul\":2465:2612   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2618:2864   */\ntag_39:\n    /* \"#utility.yul\":2699:2700   */\n  0x00\n    /* \"#utility.yul\":2709:2822   */\ntag_69:\n    /* \"#utility.yul\":2723:2729   */\n  dup4\n    /* \"#utility.yul\":2720:2721   */\n  dup2\n    /* \"#utility.yul\":2717:2730   */\n  lt\n    /* \"#utility.yul\":2709:2822   */\n  iszero\n  tag_71\n  jumpi\n    /* \"#utility.yul\":2808:2809   */\n  dup1\n    /* \"#utility.yul\":2803:2806   */\n  dup3\n    /* \"#utility.yul\":2799:2810   */\n  add\n    /* \"#utility.yul\":2793:2811   */\n  mload\n    /* \"#utility.yul\":2789:2790   */\n  dup2\n    /* \"#utility.yul\":2784:2787   */\n  dup5\n    /* \"#utility.yul\":2780:2791   */\n  add\n    /* \"#utility.yul\":2773:2812   */\n  mstore\n    /* \"#utility.yul\":2745:2747   */\n  0x20\n    /* \"#utility.yul\":2742:2743   */\n  dup2\n    /* \"#utility.yul\":2738:2748   */\n  add\n    /* \"#utility.yul\":2733:2748   */\n  swap1\n  pop\n    /* \"#utility.yul\":2709:2822   */\n  jump(tag_69)\ntag_71:\n    /* \"#utility.yul\":2856:2857   */\n  0x00\n    /* \"#utility.yul\":2847:2853   */\n  dup5\n    /* \"#utility.yul\":2842:2845   */\n  dup5\n    /* \"#utility.yul\":2838:2854   */\n  add\n    /* \"#utility.yul\":2831:2858   */\n  mstore\n    /* \"#utility.yul\":2680:2864   */\n  pop\n    /* \"#utility.yul\":2618:2864   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2870:3256   */\ntag_40:\n    /* \"#utility.yul\":2974:2977   */\n  0x00\n    /* \"#utility.yul\":3002:3040   */\n  tag_73\n    /* \"#utility.yul\":3034:3039   */\n  dup3\n    /* \"#utility.yul\":3002:3040   */\n  tag_37\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3056:3144   */\n  tag_74\n    /* \"#utility.yul\":3137:3143   */\n  dup2\n    /* \"#utility.yul\":3132:3135   */\n  dup6\n    /* \"#utility.yul\":3056:3144   */\n  tag_38\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":3049:3144   */\n  swap4\n  pop\n    /* \"#utility.yul\":3153:3218   */\n  tag_75\n    /* \"#utility.yul\":3211:3217   */\n  dup2\n    /* \"#utility.yul\":3206:3209   */\n  dup6\n    /* \"#utility.yul\":3199:3203   */\n  0x20\n    /* \"#utility.yul\":3192:3197   */\n  dup7\n    /* \"#utility.yul\":3188:3204   */\n  add\n    /* \"#utility.yul\":3153:3218   */\n  tag_39\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":3243:3249   */\n  dup1\n    /* \"#utility.yul\":3238:3241   */\n  dup5\n    /* \"#utility.yul\":3234:3250   */\n  add\n    /* \"#utility.yul\":3227:3250   */\n  swap2\n  pop\n    /* \"#utility.yul\":2978:3256   */\n  pop\n    /* \"#utility.yul\":2870:3256   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3262:3533   */\ntag_17:\n    /* \"#utility.yul\":3392:3395   */\n  0x00\n    /* \"#utility.yul\":3414:3507   */\n  tag_77\n    /* \"#utility.yul\":3503:3506   */\n  dup3\n    /* \"#utility.yul\":3494:3500   */\n  dup5\n    /* \"#utility.yul\":3414:3507   */\n  tag_40\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":3407:3507   */\n  swap2\n  pop\n    /* \"#utility.yul\":3524:3527   */\n  dup2\n    /* \"#utility.yul\":3517:3527   */\n  swap1\n  pop\n    /* \"#utility.yul\":3262:3533   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3539:3711   */\ntag_41:\n    /* \"#utility.yul\":3679:3703   */\n  0x496e697469616c697a6174696f6e206661696c65642e00000000000000000000\n    /* \"#utility.yul\":3675:3676   */\n  0x00\n    /* \"#utility.yul\":3667:3673   */\n  dup3\n    /* \"#utility.yul\":3663:3677   */\n  add\n    /* \"#utility.yul\":3656:3704   */\n  mstore\n    /* \"#utility.yul\":3539:3711   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3717:4083   */\ntag_42:\n    /* \"#utility.yul\":3859:3862   */\n  0x00\n    /* \"#utility.yul\":3880:3947   */\n  tag_80\n    /* \"#utility.yul\":3944:3946   */\n  0x16\n    /* \"#utility.yul\":3939:3942   */\n  dup4\n    /* \"#utility.yul\":3880:3947   */\n  tag_34\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":3873:3947   */\n  swap2\n  pop\n    /* \"#utility.yul\":3956:4049   */\n  tag_81\n    /* \"#utility.yul\":4045:4048   */\n  dup3\n    /* \"#utility.yul\":3956:4049   */\n  tag_41\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":4074:4076   */\n  0x20\n    /* \"#utility.yul\":4069:4072   */\n  dup3\n    /* \"#utility.yul\":4065:4077   */\n  add\n    /* \"#utility.yul\":4058:4077   */\n  swap1\n  pop\n    /* \"#utility.yul\":3717:4083   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4089:4508   */\ntag_23:\n    /* \"#utility.yul\":4255:4259   */\n  0x00\n    /* \"#utility.yul\":4293:4295   */\n  0x20\n    /* \"#utility.yul\":4282:4291   */\n  dup3\n    /* \"#utility.yul\":4278:4296   */\n  add\n    /* \"#utility.yul\":4270:4296   */\n  swap1\n  pop\n    /* \"#utility.yul\":4342:4351   */\n  dup2\n    /* \"#utility.yul\":4336:4340   */\n  dup2\n    /* \"#utility.yul\":4332:4352   */\n  sub\n    /* \"#utility.yul\":4328:4329   */\n  0x00\n    /* \"#utility.yul\":4317:4326   */\n  dup4\n    /* \"#utility.yul\":4313:4330   */\n  add\n    /* \"#utility.yul\":4306:4353   */\n  mstore\n    /* \"#utility.yul\":4370:4501   */\n  tag_83\n    /* \"#utility.yul\":4496:4500   */\n  dup2\n    /* \"#utility.yul\":4370:4501   */\n  tag_42\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":4362:4501   */\n  swap1\n  pop\n    /* \"#utility.yul\":4089:4508   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":94:1451  contract ClaimTopicsRegistryProxy is AbstractProxy {... */\ntag_24:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":94:1451  contract ClaimTopicsRegistryProxy is AbstractProxy {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x24173669\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2d5f1187\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x92dd9d65\n      eq\n      tag_6\n      jumpi\n      jump(tag_3)\n    tag_2:\n    tag_3:\n        /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":766:779  address logic */\n      0x00\n        /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":791:819  getImplementationAuthority() */\n      tag_9\n        /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":791:817  getImplementationAuthority */\n      tag_10\n        /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":791:819  getImplementationAuthority() */\n      jump\t// in\n    tag_9:\n        /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":782:854  Ifactory(getImplementationAuthority())... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6ff6e83f\n        /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":782:856  Ifactory(getImplementationAuthority())... */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_12\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_12:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n        /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":766:856  address logic = Ifactory(getImplementationAuthority())... */\n      swap1\n      pop\n        /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":969:983  calldatasize() */\n      calldatasize\n        /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":964:967  0x0 */\n      0x00\n        /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":959:962  0x0 */\n      dup1\n        /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":946:984  calldatacopy(0x0, 0x0, calldatasize()) */\n      calldatacopy\n        /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":1172:1173  0 */\n      0x00\n        /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":1153:1154  0 */\n      dup1\n        /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":1121:1135  calldatasize() */\n      calldatasize\n        /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":1100:1103  0x0 */\n      0x00\n        /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":1077:1082  logic */\n      dup5\n        /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":1053:1058  10000 */\n      0x2710\n        /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":1046:1051  gas() */\n      gas\n        /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":1042:1059  sub(gas(), 10000) */\n      sub\n        /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":1012:1187  delegatecall(... */\n      delegatecall\n        /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":1213:1229  returndatasize() */\n      returndatasize\n        /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":1263:1268  retSz */\n      dup1\n        /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":1260:1261  0 */\n      0x00\n        /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":1257:1258  0 */\n      dup1\n        /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":1242:1269  returndatacopy(0, 0, retSz) */\n      returndatacopy\n        /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":1289:1296  success */\n      dup2\n        /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":1314:1315  0 */\n      0x00\n        /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":1309:1364  case 0 {... */\n      dup2\n      eq\n      tag_16\n      jumpi\n        /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":1413:1418  retSz */\n      dup2\n        /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":1410:1411  0 */\n      0x00\n        /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":1403:1419  return(0, retSz) */\n      return\n        /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":1309:1364  case 0 {... */\n    tag_16:\n        /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":1344:1349  retSz */\n      dup2\n        /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":1341:1342  0 */\n      0x00\n        /* \"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":1334:1350  revert(0, retSz) */\n      revert\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":1504:1630  function getslot() public pure returns (bytes32) {... */\n    tag_4:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":870:1205  function getImplementationAuthority()... */\n    tag_5:\n      tag_21\n      tag_10\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":303:864  function setImplementationAuthority(address _newImplementationAuthority)... */\n    tag_6:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      stop\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":870:1205  function getImplementationAuthority()... */\n    tag_10:\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":970:977  address */\n      0x00\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":993:1011  address implemAuth */\n      dup1\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":1082:1148  0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7 */\n      0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":1059:1162  sload(... */\n      sload\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":1045:1162  implemAuth := sload(... */\n      swap1\n      pop\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":1188:1198  implemAuth */\n      dup1\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":1181:1198  return implemAuth */\n      swap2\n      pop\n      pop\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":870:1205  function getImplementationAuthority()... */\n      swap1\n      jump\t// out\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":1504:1630  function getslot() public pure returns (bytes32) {... */\n    tag_18:\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":1544:1551  bytes32 */\n      0x00\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":1621:1622  1 */\n      0x01\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":1586:1617  keccak256(\"eip1967.proxy.name\") */\n      0x4cd9b827ca535ceb0880425d70eff88561ecdf04dc32fcf7ff3b15c587f8a871\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":1578:1618  uint256(keccak256(\"eip1967.proxy.name\")) */\n      0x00\n      shr\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":1578:1622  uint256(keccak256(\"eip1967.proxy.name\")) - 1 */\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":1570:1623  bytes32(uint256(keccak256(\"eip1967.proxy.name\")) - 1) */\n      0x00\n      shl\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":1563:1623  return bytes32(uint256(keccak256(\"eip1967.proxy.name\")) - 1) */\n      swap1\n      pop\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":1504:1630  function getslot() public pure returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":303:864  function setImplementationAuthority(address _newImplementationAuthority)... */\n    tag_27:\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":459:487  getImplementationAuthority() */\n      tag_33\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":459:485  getImplementationAuthority */\n      tag_10\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":459:487  getImplementationAuthority() */\n      jump\t// in\n    tag_33:\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":445:487  msg.sender == getImplementationAuthority() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":445:455  msg.sender */\n      caller\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":445:487  msg.sender == getImplementationAuthority() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":424:558  require(... */\n      tag_34\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_35\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_34:\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":628:629  0 */\n      0x00\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":589:630  _newImplementationAuthority != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":589:616  _newImplementationAuthority */\n      dup2\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":589:630  _newImplementationAuthority != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":568:687  require(... */\n      tag_37\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_38\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_37:\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":698:756  _storeImplementationAuthority(_newImplementationAuthority) */\n      tag_40\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":728:755  _newImplementationAuthority */\n      dup2\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":698:727  _storeImplementationAuthority */\n      tag_41\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":698:756  _storeImplementationAuthority(_newImplementationAuthority) */\n      jump\t// in\n    tag_40:\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":828:855  _newImplementationAuthority */\n      dup1\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":801:856  ImplementationAuthoritySet(_newImplementationAuthority) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3b1074392ed8e8424715d0dda2197eede67080b377fc8370e26f3e882207f6b8\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":303:864  function setImplementationAuthority(address _newImplementationAuthority)... */\n      pop\n      jump\t// out\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":1211:1498  function _storeImplementationAuthority(address implementationAuthority)... */\n    tag_41:\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":1445:1468  implementationAuthority */\n      dup1\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":1361:1427  0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7 */\n      0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":1337:1482  sstore(... */\n      sstore\n        /* \"erc3643/erc3643/proxy/AbstractProxy.sol\":1211:1498  function _storeImplementationAuthority(address implementationAuthority)... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_44:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_46:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_47:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_67\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_46\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_48:\n        /* \"#utility.yul\":641:665   */\n      tag_69\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_47\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_70\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_70:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:839   */\n    tag_49:\n        /* \"#utility.yul\":753:758   */\n      0x00\n        /* \"#utility.yul\":784:790   */\n      dup2\n        /* \"#utility.yul\":778:791   */\n      mload\n        /* \"#utility.yul\":769:791   */\n      swap1\n      pop\n        /* \"#utility.yul\":800:833   */\n      tag_72\n        /* \"#utility.yul\":827:832   */\n      dup2\n        /* \"#utility.yul\":800:833   */\n      tag_48\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":696:839   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":845:1196   */\n    tag_14:\n        /* \"#utility.yul\":915:921   */\n      0x00\n        /* \"#utility.yul\":964:966   */\n      0x20\n        /* \"#utility.yul\":952:961   */\n      dup3\n        /* \"#utility.yul\":943:950   */\n      dup5\n        /* \"#utility.yul\":939:962   */\n      sub\n        /* \"#utility.yul\":935:967   */\n      slt\n        /* \"#utility.yul\":932:1051   */\n      iszero\n      tag_74\n      jumpi\n        /* \"#utility.yul\":970:1049   */\n      tag_75\n      tag_44\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":932:1051   */\n    tag_74:\n        /* \"#utility.yul\":1090:1091   */\n      0x00\n        /* \"#utility.yul\":1115:1179   */\n      tag_76\n        /* \"#utility.yul\":1171:1178   */\n      dup5\n        /* \"#utility.yul\":1162:1168   */\n      dup3\n        /* \"#utility.yul\":1151:1160   */\n      dup6\n        /* \"#utility.yul\":1147:1169   */\n      add\n        /* \"#utility.yul\":1115:1179   */\n      tag_49\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":1105:1179   */\n      swap2\n      pop\n        /* \"#utility.yul\":1061:1189   */\n      pop\n        /* \"#utility.yul\":845:1196   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1202:1279   */\n    tag_50:\n        /* \"#utility.yul\":1239:1246   */\n      0x00\n        /* \"#utility.yul\":1268:1273   */\n      dup2\n        /* \"#utility.yul\":1257:1273   */\n      swap1\n      pop\n        /* \"#utility.yul\":1202:1279   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1285:1403   */\n    tag_51:\n        /* \"#utility.yul\":1372:1396   */\n      tag_79\n        /* \"#utility.yul\":1390:1395   */\n      dup2\n        /* \"#utility.yul\":1372:1396   */\n      tag_50\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":1367:1370   */\n      dup3\n        /* \"#utility.yul\":1360:1397   */\n      mstore\n        /* \"#utility.yul\":1285:1403   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1409:1631   */\n    tag_20:\n        /* \"#utility.yul\":1502:1506   */\n      0x00\n        /* \"#utility.yul\":1540:1542   */\n      0x20\n        /* \"#utility.yul\":1529:1538   */\n      dup3\n        /* \"#utility.yul\":1525:1543   */\n      add\n        /* \"#utility.yul\":1517:1543   */\n      swap1\n      pop\n        /* \"#utility.yul\":1553:1624   */\n      tag_81\n        /* \"#utility.yul\":1621:1622   */\n      0x00\n        /* \"#utility.yul\":1610:1619   */\n      dup4\n        /* \"#utility.yul\":1606:1623   */\n      add\n        /* \"#utility.yul\":1597:1603   */\n      dup5\n        /* \"#utility.yul\":1553:1624   */\n      tag_51\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":1409:1631   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1637:1755   */\n    tag_52:\n        /* \"#utility.yul\":1724:1748   */\n      tag_83\n        /* \"#utility.yul\":1742:1747   */\n      dup2\n        /* \"#utility.yul\":1724:1748   */\n      tag_47\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":1719:1722   */\n      dup3\n        /* \"#utility.yul\":1712:1749   */\n      mstore\n        /* \"#utility.yul\":1637:1755   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1761:1983   */\n    tag_23:\n        /* \"#utility.yul\":1854:1858   */\n      0x00\n        /* \"#utility.yul\":1892:1894   */\n      0x20\n        /* \"#utility.yul\":1881:1890   */\n      dup3\n        /* \"#utility.yul\":1877:1895   */\n      add\n        /* \"#utility.yul\":1869:1895   */\n      swap1\n      pop\n        /* \"#utility.yul\":1905:1976   */\n      tag_85\n        /* \"#utility.yul\":1973:1974   */\n      0x00\n        /* \"#utility.yul\":1962:1971   */\n      dup4\n        /* \"#utility.yul\":1958:1975   */\n      add\n        /* \"#utility.yul\":1949:1955   */\n      dup5\n        /* \"#utility.yul\":1905:1976   */\n      tag_52\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":1761:1983   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1989:2128   */\n    tag_53:\n        /* \"#utility.yul\":2035:2040   */\n      0x00\n        /* \"#utility.yul\":2073:2079   */\n      dup2\n        /* \"#utility.yul\":2060:2080   */\n      calldataload\n        /* \"#utility.yul\":2051:2080   */\n      swap1\n      pop\n        /* \"#utility.yul\":2089:2122   */\n      tag_87\n        /* \"#utility.yul\":2116:2121   */\n      dup2\n        /* \"#utility.yul\":2089:2122   */\n      tag_48\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":1989:2128   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2134:2463   */\n    tag_26:\n        /* \"#utility.yul\":2193:2199   */\n      0x00\n        /* \"#utility.yul\":2242:2244   */\n      0x20\n        /* \"#utility.yul\":2230:2239   */\n      dup3\n        /* \"#utility.yul\":2221:2228   */\n      dup5\n        /* \"#utility.yul\":2217:2240   */\n      sub\n        /* \"#utility.yul\":2213:2245   */\n      slt\n        /* \"#utility.yul\":2210:2329   */\n      iszero\n      tag_89\n      jumpi\n        /* \"#utility.yul\":2248:2327   */\n      tag_90\n      tag_44\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":2210:2329   */\n    tag_89:\n        /* \"#utility.yul\":2368:2369   */\n      0x00\n        /* \"#utility.yul\":2393:2446   */\n      tag_91\n        /* \"#utility.yul\":2438:2445   */\n      dup5\n        /* \"#utility.yul\":2429:2435   */\n      dup3\n        /* \"#utility.yul\":2418:2427   */\n      dup6\n        /* \"#utility.yul\":2414:2436   */\n      add\n        /* \"#utility.yul\":2393:2446   */\n      tag_53\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":2383:2446   */\n      swap2\n      pop\n        /* \"#utility.yul\":2339:2456   */\n      pop\n        /* \"#utility.yul\":2134:2463   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2469:2546   */\n    tag_54:\n        /* \"#utility.yul\":2506:2513   */\n      0x00\n        /* \"#utility.yul\":2535:2540   */\n      dup2\n        /* \"#utility.yul\":2524:2540   */\n      swap1\n      pop\n        /* \"#utility.yul\":2469:2546   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2552:2732   */\n    tag_55:\n        /* \"#utility.yul\":2600:2677   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2597:2598   */\n      0x00\n        /* \"#utility.yul\":2590:2678   */\n      mstore\n        /* \"#utility.yul\":2697:2701   */\n      0x11\n        /* \"#utility.yul\":2694:2695   */\n      0x04\n        /* \"#utility.yul\":2687:2702   */\n      mstore\n        /* \"#utility.yul\":2721:2725   */\n      0x24\n        /* \"#utility.yul\":2718:2719   */\n      0x00\n        /* \"#utility.yul\":2711:2726   */\n      revert\n        /* \"#utility.yul\":2738:2932   */\n    tag_31:\n        /* \"#utility.yul\":2778:2782   */\n      0x00\n        /* \"#utility.yul\":2798:2818   */\n      tag_95\n        /* \"#utility.yul\":2816:2817   */\n      dup3\n        /* \"#utility.yul\":2798:2818   */\n      tag_54\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":2793:2818   */\n      swap2\n      pop\n        /* \"#utility.yul\":2832:2852   */\n      tag_96\n        /* \"#utility.yul\":2850:2851   */\n      dup4\n        /* \"#utility.yul\":2832:2852   */\n      tag_54\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":2827:2852   */\n      swap3\n      pop\n        /* \"#utility.yul\":2876:2877   */\n      dup3\n        /* \"#utility.yul\":2873:2874   */\n      dup3\n        /* \"#utility.yul\":2869:2878   */\n      sub\n        /* \"#utility.yul\":2861:2878   */\n      swap1\n      pop\n        /* \"#utility.yul\":2900:2901   */\n      dup2\n        /* \"#utility.yul\":2894:2898   */\n      dup2\n        /* \"#utility.yul\":2891:2902   */\n      gt\n        /* \"#utility.yul\":2888:2925   */\n      iszero\n      tag_97\n      jumpi\n        /* \"#utility.yul\":2905:2923   */\n      tag_98\n      tag_55\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":2888:2925   */\n    tag_97:\n        /* \"#utility.yul\":2738:2932   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2938:3107   */\n    tag_56:\n        /* \"#utility.yul\":3022:3033   */\n      0x00\n        /* \"#utility.yul\":3056:3062   */\n      dup3\n        /* \"#utility.yul\":3051:3054   */\n      dup3\n        /* \"#utility.yul\":3044:3063   */\n      mstore\n        /* \"#utility.yul\":3096:3100   */\n      0x20\n        /* \"#utility.yul\":3091:3094   */\n      dup3\n        /* \"#utility.yul\":3087:3101   */\n      add\n        /* \"#utility.yul\":3072:3101   */\n      swap1\n      pop\n        /* \"#utility.yul\":2938:3107   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3113:3345   */\n    tag_57:\n        /* \"#utility.yul\":3253:3287   */\n      0x6f6e6c792063757272656e7420696d706c656d656e746174696f6e417574686f\n        /* \"#utility.yul\":3249:3250   */\n      0x00\n        /* \"#utility.yul\":3241:3247   */\n      dup3\n        /* \"#utility.yul\":3237:3251   */\n      add\n        /* \"#utility.yul\":3230:3288   */\n      mstore\n        /* \"#utility.yul\":3322:3337   */\n      0x726974792063616e2063616c6c00000000000000000000000000000000000000\n        /* \"#utility.yul\":3317:3319   */\n      0x20\n        /* \"#utility.yul\":3309:3315   */\n      dup3\n        /* \"#utility.yul\":3305:3320   */\n      add\n        /* \"#utility.yul\":3298:3338   */\n      mstore\n        /* \"#utility.yul\":3113:3345   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3351:3717   */\n    tag_58:\n        /* \"#utility.yul\":3493:3496   */\n      0x00\n        /* \"#utility.yul\":3514:3581   */\n      tag_102\n        /* \"#utility.yul\":3578:3580   */\n      0x2d\n        /* \"#utility.yul\":3573:3576   */\n      dup4\n        /* \"#utility.yul\":3514:3581   */\n      tag_56\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":3507:3581   */\n      swap2\n      pop\n        /* \"#utility.yul\":3590:3683   */\n      tag_103\n        /* \"#utility.yul\":3679:3682   */\n      dup3\n        /* \"#utility.yul\":3590:3683   */\n      tag_57\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":3708:3710   */\n      0x40\n        /* \"#utility.yul\":3703:3706   */\n      dup3\n        /* \"#utility.yul\":3699:3711   */\n      add\n        /* \"#utility.yul\":3692:3711   */\n      swap1\n      pop\n        /* \"#utility.yul\":3351:3717   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3723:4142   */\n    tag_36:\n        /* \"#utility.yul\":3889:3893   */\n      0x00\n        /* \"#utility.yul\":3927:3929   */\n      0x20\n        /* \"#utility.yul\":3916:3925   */\n      dup3\n        /* \"#utility.yul\":3912:3930   */\n      add\n        /* \"#utility.yul\":3904:3930   */\n      swap1\n      pop\n        /* \"#utility.yul\":3976:3985   */\n      dup2\n        /* \"#utility.yul\":3970:3974   */\n      dup2\n        /* \"#utility.yul\":3966:3986   */\n      sub\n        /* \"#utility.yul\":3962:3963   */\n      0x00\n        /* \"#utility.yul\":3951:3960   */\n      dup4\n        /* \"#utility.yul\":3947:3964   */\n      add\n        /* \"#utility.yul\":3940:3987   */\n      mstore\n        /* \"#utility.yul\":4004:4135   */\n      tag_105\n        /* \"#utility.yul\":4130:4134   */\n      dup2\n        /* \"#utility.yul\":4004:4135   */\n      tag_58\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":3996:4135   */\n      swap1\n      pop\n        /* \"#utility.yul\":3723:4142   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4148:4329   */\n    tag_59:\n        /* \"#utility.yul\":4288:4321   */\n      0x696e76616c696420617267756d656e74202d207a65726f206164647265737300\n        /* \"#utility.yul\":4284:4285   */\n      0x00\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4272:4286   */\n      add\n        /* \"#utility.yul\":4265:4322   */\n      mstore\n        /* \"#utility.yul\":4148:4329   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4335:4701   */\n    tag_60:\n        /* \"#utility.yul\":4477:4480   */\n      0x00\n        /* \"#utility.yul\":4498:4565   */\n      tag_108\n        /* \"#utility.yul\":4562:4564   */\n      0x1f\n        /* \"#utility.yul\":4557:4560   */\n      dup4\n        /* \"#utility.yul\":4498:4565   */\n      tag_56\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":4491:4565   */\n      swap2\n      pop\n        /* \"#utility.yul\":4574:4667   */\n      tag_109\n        /* \"#utility.yul\":4663:4666   */\n      dup3\n        /* \"#utility.yul\":4574:4667   */\n      tag_59\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":4692:4694   */\n      0x20\n        /* \"#utility.yul\":4687:4690   */\n      dup3\n        /* \"#utility.yul\":4683:4695   */\n      add\n        /* \"#utility.yul\":4676:4695   */\n      swap1\n      pop\n        /* \"#utility.yul\":4335:4701   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4707:5126   */\n    tag_39:\n        /* \"#utility.yul\":4873:4877   */\n      0x00\n        /* \"#utility.yul\":4911:4913   */\n      0x20\n        /* \"#utility.yul\":4900:4909   */\n      dup3\n        /* \"#utility.yul\":4896:4914   */\n      add\n        /* \"#utility.yul\":4888:4914   */\n      swap1\n      pop\n        /* \"#utility.yul\":4960:4969   */\n      dup2\n        /* \"#utility.yul\":4954:4958   */\n      dup2\n        /* \"#utility.yul\":4950:4970   */\n      sub\n        /* \"#utility.yul\":4946:4947   */\n      0x00\n        /* \"#utility.yul\":4935:4944   */\n      dup4\n        /* \"#utility.yul\":4931:4948   */\n      add\n        /* \"#utility.yul\":4924:4971   */\n      mstore\n        /* \"#utility.yul\":4988:5119   */\n      tag_111\n        /* \"#utility.yul\":5114:5118   */\n      dup2\n        /* \"#utility.yul\":4988:5119   */\n      tag_60\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":4980:5119   */\n      swap1\n      pop\n        /* \"#utility.yul\":4707:5126   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220905a39c97150649af751b6c9b10d9280db37b25f060b0da1ea68a6d7258313a664736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_666": {
									"entryPoint": null,
									"id": 666,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_storeImplementationAuthority_594": {
									"entryPoint": 703,
									"id": 594,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getImplementationAuthority_587": {
									"entryPoint": 741,
									"id": 587,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 870,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 893,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 1140,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_84817bd958e2e6d9a7351828ba5fd352a3aaf3cf97a67f6d55271e39a5b3e2ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1261,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1001,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1195,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_84817bd958e2e6d9a7351828ba5fd352a3aaf3cf97a67f6d55271e39a5b3e2ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1300,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1040,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 1074,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 1085,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 943,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 824,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 792,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1096,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 787,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_84817bd958e2e6d9a7351828ba5fd352a3aaf3cf97a67f6d55271e39a5b3e2ad": {
									"entryPoint": 1220,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543": {
									"entryPoint": 960,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 844,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4511:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:6",
														"type": ""
													}
												],
												"src": "696:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:6"
															},
															"nodeType": "YulIf",
															"src": "932:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:6",
														"type": ""
													}
												],
												"src": "845:351:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1298:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1315:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1320:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1308:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1308:19:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1308:19:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1336:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1355:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1360:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1351:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1351:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1336:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1270:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1275:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1286:11:6",
														"type": ""
													}
												],
												"src": "1202:169:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1483:75:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1505:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1513:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1501:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1501:14:6"
																	},
																	{
																		"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1517:33:6",
																		"type": "",
																		"value": "invalid argument - zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1494:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1494:57:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1494:57:6"
														}
													]
												},
												"name": "store_literal_in_memory_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1475:6:6",
														"type": ""
													}
												],
												"src": "1377:181:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1710:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1720:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1786:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1791:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1727:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1727:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1720:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1892:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																	"nodeType": "YulIdentifier",
																	"src": "1803:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1803:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1803:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1905:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1916:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1921:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1912:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1912:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1905:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1698:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1706:3:6",
														"type": ""
													}
												],
												"src": "1564:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2107:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2117:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2129:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2140:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2125:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2125:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2117:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2164:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2175:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2160:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2160:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2183:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2189:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2179:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2179:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2153:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2153:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2153:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2209:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2343:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2217:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2217:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2209:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2087:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2102:4:6",
														"type": ""
													}
												],
												"src": "1936:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2419:40:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2430:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2446:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2440:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2440:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2430:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2402:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2412:6:6",
														"type": ""
													}
												],
												"src": "2361:98:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2578:34:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2588:18:6",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "2603:3:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2588:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2550:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2555:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2566:11:6",
														"type": ""
													}
												],
												"src": "2465:147:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2680:184:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2690:10:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2699:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2694:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2759:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2784:3:6"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "2789:1:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2780:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2780:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "2803:3:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2808:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2799:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2799:11:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2793:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2793:18:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2773:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2773:39:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2773:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2720:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2723:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2717:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2717:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2731:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2733:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2742:1:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2745:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2738:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2738:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2733:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2713:3:6",
																"statements": []
															},
															"src": "2709:113:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2842:3:6"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2847:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2838:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2838:16:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2856:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2831:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2831:27:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2831:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2662:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "2667:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2672:6:6",
														"type": ""
													}
												],
												"src": "2618:246:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2978:278:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2988:52:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3034:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3002:31:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3002:38:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2992:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3049:95:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3132:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3137:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3056:75:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3056:88:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3049:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3192:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3199:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3188:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3188:16:6"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3206:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3211:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "3153:34:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3153:65:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3153:65:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3227:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3238:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3243:6:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3234:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3234:16:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3227:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2959:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2966:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2974:3:6",
														"type": ""
													}
												],
												"src": "2870:386:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3396:137:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3407:100:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3494:6:6"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3503:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3414:79:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3414:93:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3407:3:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3517:10:6",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "3524:3:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3517:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3375:3:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3381:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3392:3:6",
														"type": ""
													}
												],
												"src": "3262:271:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3645:66:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3667:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3663:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3663:14:6"
																	},
																	{
																		"hexValue": "496e697469616c697a6174696f6e206661696c65642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3679:24:6",
																		"type": "",
																		"value": "Initialization failed."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3656:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3656:48:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3656:48:6"
														}
													]
												},
												"name": "store_literal_in_memory_84817bd958e2e6d9a7351828ba5fd352a3aaf3cf97a67f6d55271e39a5b3e2ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3637:6:6",
														"type": ""
													}
												],
												"src": "3539:172:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3863:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3873:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3939:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3944:2:6",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3880:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3880:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3873:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4045:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_84817bd958e2e6d9a7351828ba5fd352a3aaf3cf97a67f6d55271e39a5b3e2ad",
																	"nodeType": "YulIdentifier",
																	"src": "3956:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3956:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3956:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4058:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4069:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4074:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4065:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4065:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4058:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_84817bd958e2e6d9a7351828ba5fd352a3aaf3cf97a67f6d55271e39a5b3e2ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3851:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3859:3:6",
														"type": ""
													}
												],
												"src": "3717:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4260:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4270:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4282:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4293:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4278:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4278:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4270:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4317:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4328:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4313:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4313:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4336:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4342:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4332:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4332:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4306:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4306:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4306:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4362:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4496:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_84817bd958e2e6d9a7351828ba5fd352a3aaf3cf97a67f6d55271e39a5b3e2ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4370:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4370:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4362:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_84817bd958e2e6d9a7351828ba5fd352a3aaf3cf97a67f6d55271e39a5b3e2ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4240:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4255:4:6",
														"type": ""
													}
												],
												"src": "4089:419:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543(memPtr) {\n\n        mstore(add(memPtr, 0), \"invalid argument - zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_84817bd958e2e6d9a7351828ba5fd352a3aaf3cf97a67f6d55271e39a5b3e2ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initialization failed.\")\n\n    }\n\n    function abi_encode_t_stringliteral_84817bd958e2e6d9a7351828ba5fd352a3aaf3cf97a67f6d55271e39a5b3e2ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_84817bd958e2e6d9a7351828ba5fd352a3aaf3cf97a67f6d55271e39a5b3e2ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_84817bd958e2e6d9a7351828ba5fd352a3aaf3cf97a67f6d55271e39a5b3e2ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_84817bd958e2e6d9a7351828ba5fd352a3aaf3cf97a67f6d55271e39a5b3e2ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000b2c38038062000b2c83398181016040528101906200003791906200037d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000a9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000a09062000410565b60405180910390fd5b620000ba81620002bf60201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff167f3b1074392ed8e8424715d0dda2197eede67080b377fc8370e26f3e882207f6b860405160405180910390a260006200010f620002e560201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16636ff6e83f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200015a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200018091906200037d565b905060008173ffffffffffffffffffffffffffffffffffffffff166040516024016040516020818303038152906040527fe1c7392a000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516200022d9190620004ab565b600060405180830381855af49150503d80600081146200026a576040519150601f19603f3d011682016040523d82523d6000602084013e6200026f565b606091505b5050905080620002b6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002ad9062000514565b60405180910390fd5b50505062000536565b807fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf75550565b6000807fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf75490508091505090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003458262000318565b9050919050565b620003578162000338565b81146200036357600080fd5b50565b60008151905062000377816200034c565b92915050565b60006020828403121562000396576200039562000313565b5b6000620003a68482850162000366565b91505092915050565b600082825260208201905092915050565b7f696e76616c696420617267756d656e74202d207a65726f206164647265737300600082015250565b6000620003f8601f83620003af565b91506200040582620003c0565b602082019050919050565b600060208201905081810360008301526200042b81620003e9565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015620004685780820151818401526020810190506200044b565b60008484015250505050565b6000620004818262000432565b6200048d81856200043d565b93506200049f81856020860162000448565b80840191505092915050565b6000620004b9828462000474565b915081905092915050565b7f496e697469616c697a6174696f6e206661696c65642e00000000000000000000600082015250565b6000620004fc601683620003af565b91506200050982620004c4565b602082019050919050565b600060208201905081810360008301526200052f81620004ed565b9050919050565b6105e680620005466000396000f3fe608060405234801561001057600080fd5b50600436106100455760003560e01c806324173669146100eb5780632d5f11871461010957806392dd9d651461012757610046565b5b6000610050610143565b73ffffffffffffffffffffffffffffffffffffffff16636ff6e83f6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561009a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100be9190610367565b90503660008037600080366000846127105a03f43d806000803e81600081146100e657816000f35b816000fd5b6100f3610171565b60405161010091906103ad565b60405180910390f35b610111610143565b60405161011e91906103d7565b60405180910390f35b610141600480360381019061013c9190610407565b6101ab565b005b6000807fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf75490508091505090565b600060017f4cd9b827ca535ceb0880425d70eff88561ecdf04dc32fcf7ff3b15c587f8a87160001c6101a3919061046d565b60001b905090565b6101b3610143565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610220576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021790610524565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361028f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028690610590565b60405180910390fd5b610298816102de565b8073ffffffffffffffffffffffffffffffffffffffff167f3b1074392ed8e8424715d0dda2197eede67080b377fc8370e26f3e882207f6b860405160405180910390a250565b807fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf75550565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061033482610309565b9050919050565b61034481610329565b811461034f57600080fd5b50565b6000815190506103618161033b565b92915050565b60006020828403121561037d5761037c610304565b5b600061038b84828501610352565b91505092915050565b6000819050919050565b6103a781610394565b82525050565b60006020820190506103c2600083018461039e565b92915050565b6103d181610329565b82525050565b60006020820190506103ec60008301846103c8565b92915050565b6000813590506104018161033b565b92915050565b60006020828403121561041d5761041c610304565b5b600061042b848285016103f2565b91505092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061047882610434565b915061048383610434565b925082820390508181111561049b5761049a61043e565b5b92915050565b600082825260208201905092915050565b7f6f6e6c792063757272656e7420696d706c656d656e746174696f6e417574686f60008201527f726974792063616e2063616c6c00000000000000000000000000000000000000602082015250565b600061050e602d836104a1565b9150610519826104b2565b604082019050919050565b6000602082019050818103600083015261053d81610501565b9050919050565b7f696e76616c696420617267756d656e74202d207a65726f206164647265737300600082015250565b600061057a601f836104a1565b915061058582610544565b602082019050919050565b600060208201905081810360008301526105a98161056d565b905091905056fea2646970667358221220905a39c97150649af751b6c9b10d9280db37b25f060b0da1ea68a6d7258313a664736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB2C CODESIZE SUB DUP1 PUSH3 0xB2C DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x37D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xA9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA0 SWAP1 PUSH3 0x410 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xBA DUP2 PUSH3 0x2BF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3B1074392ED8E8424715D0DDA2197EEDE67080B377FC8370E26F3E882207F6B8 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 PUSH3 0x10F PUSH3 0x2E5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6FF6E83F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x15A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x180 SWAP2 SWAP1 PUSH3 0x37D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0xE1C7392A00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH3 0x22D SWAP2 SWAP1 PUSH3 0x4AB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH3 0x26A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH3 0x26F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH3 0x2B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x2AD SWAP1 PUSH3 0x514 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP PUSH3 0x536 JUMP JUMPDEST DUP1 PUSH32 0xC5F16F0FCC639FA48A6947836D9850F504798523BF8C9A3A87D5876CF622BCF7 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xC5F16F0FCC639FA48A6947836D9850F504798523BF8C9A3A87D5876CF622BCF7 SLOAD SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x345 DUP3 PUSH3 0x318 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x357 DUP2 PUSH3 0x338 JUMP JUMPDEST DUP2 EQ PUSH3 0x363 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x377 DUP2 PUSH3 0x34C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x396 JUMPI PUSH3 0x395 PUSH3 0x313 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x3A6 DUP5 DUP3 DUP6 ADD PUSH3 0x366 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x696E76616C696420617267756D656E74202D207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3F8 PUSH1 0x1F DUP4 PUSH3 0x3AF JUMP JUMPDEST SWAP2 POP PUSH3 0x405 DUP3 PUSH3 0x3C0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x42B DUP2 PUSH3 0x3E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x468 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x44B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x481 DUP3 PUSH3 0x432 JUMP JUMPDEST PUSH3 0x48D DUP2 DUP6 PUSH3 0x43D JUMP JUMPDEST SWAP4 POP PUSH3 0x49F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x448 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4B9 DUP3 DUP5 PUSH3 0x474 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E697469616C697A6174696F6E206661696C65642E00000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4FC PUSH1 0x16 DUP4 PUSH3 0x3AF JUMP JUMPDEST SWAP2 POP PUSH3 0x509 DUP3 PUSH3 0x4C4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x52F DUP2 PUSH3 0x4ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5E6 DUP1 PUSH3 0x546 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x45 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x24173669 EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x2D5F1187 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x92DD9D65 EQ PUSH2 0x127 JUMPI PUSH2 0x46 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x50 PUSH2 0x143 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6FF6E83F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x367 JUMP JUMPDEST SWAP1 POP CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 PUSH2 0x2710 GAS SUB DELEGATECALL RETURNDATASIZE DUP1 PUSH1 0x0 DUP1 RETURNDATACOPY DUP2 PUSH1 0x0 DUP2 EQ PUSH2 0xE6 JUMPI DUP2 PUSH1 0x0 RETURN JUMPDEST DUP2 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xF3 PUSH2 0x171 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x100 SWAP2 SWAP1 PUSH2 0x3AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x111 PUSH2 0x143 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x3D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x141 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x407 JUMP JUMPDEST PUSH2 0x1AB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xC5F16F0FCC639FA48A6947836D9850F504798523BF8C9A3A87D5876CF622BCF7 SLOAD SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH32 0x4CD9B827CA535CEB0880425D70EFF88561ECDF04DC32FCF7FF3B15C587F8A871 PUSH1 0x0 SHR PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x46D JUMP JUMPDEST PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1B3 PUSH2 0x143 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x220 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x217 SWAP1 PUSH2 0x524 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x28F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x286 SWAP1 PUSH2 0x590 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x298 DUP2 PUSH2 0x2DE JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3B1074392ED8E8424715D0DDA2197EEDE67080B377FC8370E26F3E882207F6B8 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST DUP1 PUSH32 0xC5F16F0FCC639FA48A6947836D9850F504798523BF8C9A3A87D5876CF622BCF7 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x334 DUP3 PUSH2 0x309 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x344 DUP2 PUSH2 0x329 JUMP JUMPDEST DUP2 EQ PUSH2 0x34F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x361 DUP2 PUSH2 0x33B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37D JUMPI PUSH2 0x37C PUSH2 0x304 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x38B DUP5 DUP3 DUP6 ADD PUSH2 0x352 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A7 DUP2 PUSH2 0x394 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3C2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x39E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3D1 DUP2 PUSH2 0x329 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3EC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x401 DUP2 PUSH2 0x33B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x41D JUMPI PUSH2 0x41C PUSH2 0x304 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x42B DUP5 DUP3 DUP6 ADD PUSH2 0x3F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x478 DUP3 PUSH2 0x434 JUMP JUMPDEST SWAP2 POP PUSH2 0x483 DUP4 PUSH2 0x434 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x49B JUMPI PUSH2 0x49A PUSH2 0x43E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6F6E6C792063757272656E7420696D706C656D656E746174696F6E417574686F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x726974792063616E2063616C6C00000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50E PUSH1 0x2D DUP4 PUSH2 0x4A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x519 DUP3 PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x53D DUP2 PUSH2 0x501 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E76616C696420617267756D656E74202D207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57A PUSH1 0x1F DUP4 PUSH2 0x4A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x585 DUP3 PUSH2 0x544 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5A9 DUP2 PUSH2 0x56D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 GAS CODECOPY 0xC9 PUSH18 0x50649AF751B6C9B10D9280DB37B25F060B0D LOG1 0xEA PUSH9 0xA6D7258313A664736F PUSH13 0x63430008110033000000000000 ",
							"sourceMap": "94:1357:4:-:0;;;151:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;262:1;227:37;;:23;:37;;;206:115;;;;;;;;;;;;:::i;:::-;;;;;;;;;331:54;361:23;331:29;;;:54;;:::i;:::-;427:23;400:51;;;;;;;;;;;;462:13;487:28;:26;;;:28;;:::i;:::-;478:72;;;:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;462:90;;572:12;590:5;:18;;622:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;590:75;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;571:94;;;683:7;675:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;196:528;;151:573;94:1357;;1211:287:3;1445:23;1361:66;1337:145;1211:287;:::o;870:335::-;970:7;993:18;1082:66;1059:103;1045:117;;1188:10;1181:17;;;870:335;:::o;88:117:6:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:169::-;1286:11;1320:6;1315:3;1308:19;1360:4;1355:3;1351:14;1336:29;;1202:169;;;;:::o;1377:181::-;1517:33;1513:1;1505:6;1501:14;1494:57;1377:181;:::o;1564:366::-;1706:3;1727:67;1791:2;1786:3;1727:67;:::i;:::-;1720:74;;1803:93;1892:3;1803:93;:::i;:::-;1921:2;1916:3;1912:12;1905:19;;1564:366;;;:::o;1936:419::-;2102:4;2140:2;2129:9;2125:18;2117:26;;2189:9;2183:4;2179:20;2175:1;2164:9;2160:17;2153:47;2217:131;2343:4;2217:131;:::i;:::-;2209:139;;1936:419;;;:::o;2361:98::-;2412:6;2446:5;2440:12;2430:22;;2361:98;;;:::o;2465:147::-;2566:11;2603:3;2588:18;;2465:147;;;;:::o;2618:246::-;2699:1;2709:113;2723:6;2720:1;2717:13;2709:113;;;2808:1;2803:3;2799:11;2793:18;2789:1;2784:3;2780:11;2773:39;2745:2;2742:1;2738:10;2733:15;;2709:113;;;2856:1;2847:6;2842:3;2838:16;2831:27;2680:184;2618:246;;;:::o;2870:386::-;2974:3;3002:38;3034:5;3002:38;:::i;:::-;3056:88;3137:6;3132:3;3056:88;:::i;:::-;3049:95;;3153:65;3211:6;3206:3;3199:4;3192:5;3188:16;3153:65;:::i;:::-;3243:6;3238:3;3234:16;3227:23;;2978:278;2870:386;;;;:::o;3262:271::-;3392:3;3414:93;3503:3;3494:6;3414:93;:::i;:::-;3407:100;;3524:3;3517:10;;3262:271;;;;:::o;3539:172::-;3679:24;3675:1;3667:6;3663:14;3656:48;3539:172;:::o;3717:366::-;3859:3;3880:67;3944:2;3939:3;3880:67;:::i;:::-;3873:74;;3956:93;4045:3;3956:93;:::i;:::-;4074:2;4069:3;4065:12;4058:19;;3717:366;;;:::o;4089:419::-;4255:4;4293:2;4282:9;4278:18;4270:26;;4342:9;4336:4;4332:20;4328:1;4317:9;4313:17;4306:47;4370:131;4496:4;4370:131;:::i;:::-;4362:139;;4089:419;;;:::o;94:1357:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_680": {
									"entryPoint": null,
									"id": 680,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_storeImplementationAuthority_594": {
									"entryPoint": 734,
									"id": 594,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getImplementationAuthority_587": {
									"entryPoint": 323,
									"id": 587,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getslot_612": {
									"entryPoint": 369,
									"id": 612,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@setImplementationAuthority_574": {
									"entryPoint": 427,
									"id": 574,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 850,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1031,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 871,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 968,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 926,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1389,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9b0411664657bdf301d39de4dc1d8c8916476c6a591c7fcd5f6e535fa22de2ca_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1281,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 983,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 941,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1424,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9b0411664657bdf301d39de4dc1d8c8916476c6a591c7fcd5f6e535fa22de2ca__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1316,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1185,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 809,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 916,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 777,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1076,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1086,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 772,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543": {
									"entryPoint": 1348,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9b0411664657bdf301d39de4dc1d8c8916476c6a591c7fcd5f6e535fa22de2ca": {
									"entryPoint": 1202,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 827,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5129:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:6",
														"type": ""
													}
												],
												"src": "696:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:6"
															},
															"nodeType": "YulIf",
															"src": "932:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:6",
														"type": ""
													}
												],
												"src": "845:351:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1247:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1257:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1268:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1257:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1229:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1239:7:6",
														"type": ""
													}
												],
												"src": "1202:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1350:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1367:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1390:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "1372:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1372:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1360:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1360:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1360:37:6"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1338:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1345:3:6",
														"type": ""
													}
												],
												"src": "1285:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1507:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1517:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1529:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1540:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1525:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1525:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1517:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1597:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1610:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1621:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1606:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1606:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1553:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1553:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1553:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1479:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1491:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1502:4:6",
														"type": ""
													}
												],
												"src": "1409:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1702:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1719:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1742:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1724:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1724:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1712:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1712:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1712:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1690:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1697:3:6",
														"type": ""
													}
												],
												"src": "1637:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1859:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1869:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1881:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1892:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1877:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1877:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1869:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1949:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1962:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1973:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1958:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1958:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1905:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1905:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1905:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1831:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1843:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1854:4:6",
														"type": ""
													}
												],
												"src": "1761:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2041:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2051:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2073:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2060:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2060:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2051:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2116:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2089:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2089:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2089:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2019:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2027:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2035:5:6",
														"type": ""
													}
												],
												"src": "1989:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2200:263:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2246:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2248:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2248:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2248:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2221:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2230:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2217:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2217:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2242:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2213:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2213:32:6"
															},
															"nodeType": "YulIf",
															"src": "2210:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "2339:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2354:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2368:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2358:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2383:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2418:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2429:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2414:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2414:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2438:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2393:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2393:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2383:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2170:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2181:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2193:6:6",
														"type": ""
													}
												],
												"src": "2134:329:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2514:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2524:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2535:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2524:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2496:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2506:7:6",
														"type": ""
													}
												],
												"src": "2469:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2580:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2597:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2600:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2590:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2590:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2590:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2694:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2697:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2687:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2687:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2687:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2718:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2721:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2711:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2711:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2711:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2552:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2783:149:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2793:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2816:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2798:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2798:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2793:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2827:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2850:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2832:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2832:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2827:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2861:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2873:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2876:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2869:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2869:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "2861:4:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2903:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2905:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2905:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2905:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "2894:4:6"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2900:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2891:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2891:11:6"
															},
															"nodeType": "YulIf",
															"src": "2888:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2769:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2772:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "2778:4:6",
														"type": ""
													}
												],
												"src": "2738:194:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3034:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3051:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3056:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3044:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3044:19:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3044:19:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3072:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3091:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3096:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3087:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3087:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3072:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3006:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3011:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3022:11:6",
														"type": ""
													}
												],
												"src": "2938:169:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3219:126:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3241:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3249:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3237:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3237:14:6"
																	},
																	{
																		"hexValue": "6f6e6c792063757272656e7420696d706c656d656e746174696f6e417574686f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3253:34:6",
																		"type": "",
																		"value": "only current implementationAutho"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3230:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3230:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3230:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3309:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3317:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3305:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3305:15:6"
																	},
																	{
																		"hexValue": "726974792063616e2063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3322:15:6",
																		"type": "",
																		"value": "rity can call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3298:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3298:40:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3298:40:6"
														}
													]
												},
												"name": "store_literal_in_memory_9b0411664657bdf301d39de4dc1d8c8916476c6a591c7fcd5f6e535fa22de2ca",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3211:6:6",
														"type": ""
													}
												],
												"src": "3113:232:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3497:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3507:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3573:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3578:2:6",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3514:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3514:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3679:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9b0411664657bdf301d39de4dc1d8c8916476c6a591c7fcd5f6e535fa22de2ca",
																	"nodeType": "YulIdentifier",
																	"src": "3590:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3590:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3590:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3692:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3703:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3708:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3699:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3699:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3692:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9b0411664657bdf301d39de4dc1d8c8916476c6a591c7fcd5f6e535fa22de2ca_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3485:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3493:3:6",
														"type": ""
													}
												],
												"src": "3351:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3894:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3904:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3916:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3927:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3912:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3912:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3904:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3951:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3962:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3947:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3947:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3970:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3976:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3966:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3966:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3940:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3940:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3940:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3996:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4130:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9b0411664657bdf301d39de4dc1d8c8916476c6a591c7fcd5f6e535fa22de2ca_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4004:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4004:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3996:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9b0411664657bdf301d39de4dc1d8c8916476c6a591c7fcd5f6e535fa22de2ca__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3874:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3889:4:6",
														"type": ""
													}
												],
												"src": "3723:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4254:75:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4276:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4284:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4272:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4272:14:6"
																	},
																	{
																		"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4288:33:6",
																		"type": "",
																		"value": "invalid argument - zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4265:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4265:57:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4265:57:6"
														}
													]
												},
												"name": "store_literal_in_memory_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4246:6:6",
														"type": ""
													}
												],
												"src": "4148:181:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4481:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4491:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4557:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4562:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4498:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4498:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4491:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4663:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																	"nodeType": "YulIdentifier",
																	"src": "4574:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4574:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4574:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4676:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4687:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4692:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4683:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4683:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4676:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4469:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4477:3:6",
														"type": ""
													}
												],
												"src": "4335:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4878:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4888:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4900:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4911:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4896:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4896:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4888:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4935:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4946:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4931:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4931:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4954:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4960:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4950:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4950:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4924:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4924:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4924:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4980:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5114:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4988:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4988:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4980:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4858:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4873:4:6",
														"type": ""
													}
												],
												"src": "4707:419:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9b0411664657bdf301d39de4dc1d8c8916476c6a591c7fcd5f6e535fa22de2ca(memPtr) {\n\n        mstore(add(memPtr, 0), \"only current implementationAutho\")\n\n        mstore(add(memPtr, 32), \"rity can call\")\n\n    }\n\n    function abi_encode_t_stringliteral_9b0411664657bdf301d39de4dc1d8c8916476c6a591c7fcd5f6e535fa22de2ca_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_9b0411664657bdf301d39de4dc1d8c8916476c6a591c7fcd5f6e535fa22de2ca(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9b0411664657bdf301d39de4dc1d8c8916476c6a591c7fcd5f6e535fa22de2ca__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9b0411664657bdf301d39de4dc1d8c8916476c6a591c7fcd5f6e535fa22de2ca_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543(memPtr) {\n\n        mstore(add(memPtr, 0), \"invalid argument - zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100455760003560e01c806324173669146100eb5780632d5f11871461010957806392dd9d651461012757610046565b5b6000610050610143565b73ffffffffffffffffffffffffffffffffffffffff16636ff6e83f6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561009a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100be9190610367565b90503660008037600080366000846127105a03f43d806000803e81600081146100e657816000f35b816000fd5b6100f3610171565b60405161010091906103ad565b60405180910390f35b610111610143565b60405161011e91906103d7565b60405180910390f35b610141600480360381019061013c9190610407565b6101ab565b005b6000807fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf75490508091505090565b600060017f4cd9b827ca535ceb0880425d70eff88561ecdf04dc32fcf7ff3b15c587f8a87160001c6101a3919061046d565b60001b905090565b6101b3610143565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610220576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021790610524565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361028f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028690610590565b60405180910390fd5b610298816102de565b8073ffffffffffffffffffffffffffffffffffffffff167f3b1074392ed8e8424715d0dda2197eede67080b377fc8370e26f3e882207f6b860405160405180910390a250565b807fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf75550565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061033482610309565b9050919050565b61034481610329565b811461034f57600080fd5b50565b6000815190506103618161033b565b92915050565b60006020828403121561037d5761037c610304565b5b600061038b84828501610352565b91505092915050565b6000819050919050565b6103a781610394565b82525050565b60006020820190506103c2600083018461039e565b92915050565b6103d181610329565b82525050565b60006020820190506103ec60008301846103c8565b92915050565b6000813590506104018161033b565b92915050565b60006020828403121561041d5761041c610304565b5b600061042b848285016103f2565b91505092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061047882610434565b915061048383610434565b925082820390508181111561049b5761049a61043e565b5b92915050565b600082825260208201905092915050565b7f6f6e6c792063757272656e7420696d706c656d656e746174696f6e417574686f60008201527f726974792063616e2063616c6c00000000000000000000000000000000000000602082015250565b600061050e602d836104a1565b9150610519826104b2565b604082019050919050565b6000602082019050818103600083015261053d81610501565b9050919050565b7f696e76616c696420617267756d656e74202d207a65726f206164647265737300600082015250565b600061057a601f836104a1565b915061058582610544565b602082019050919050565b600060208201905081810360008301526105a98161056d565b905091905056fea2646970667358221220905a39c97150649af751b6c9b10d9280db37b25f060b0da1ea68a6d7258313a664736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x45 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x24173669 EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x2D5F1187 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x92DD9D65 EQ PUSH2 0x127 JUMPI PUSH2 0x46 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x50 PUSH2 0x143 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6FF6E83F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x367 JUMP JUMPDEST SWAP1 POP CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 PUSH2 0x2710 GAS SUB DELEGATECALL RETURNDATASIZE DUP1 PUSH1 0x0 DUP1 RETURNDATACOPY DUP2 PUSH1 0x0 DUP2 EQ PUSH2 0xE6 JUMPI DUP2 PUSH1 0x0 RETURN JUMPDEST DUP2 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xF3 PUSH2 0x171 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x100 SWAP2 SWAP1 PUSH2 0x3AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x111 PUSH2 0x143 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x3D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x141 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x407 JUMP JUMPDEST PUSH2 0x1AB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xC5F16F0FCC639FA48A6947836D9850F504798523BF8C9A3A87D5876CF622BCF7 SLOAD SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH32 0x4CD9B827CA535CEB0880425D70EFF88561ECDF04DC32FCF7FF3B15C587F8A871 PUSH1 0x0 SHR PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x46D JUMP JUMPDEST PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1B3 PUSH2 0x143 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x220 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x217 SWAP1 PUSH2 0x524 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x28F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x286 SWAP1 PUSH2 0x590 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x298 DUP2 PUSH2 0x2DE JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3B1074392ED8E8424715D0DDA2197EEDE67080B377FC8370E26F3E882207F6B8 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST DUP1 PUSH32 0xC5F16F0FCC639FA48A6947836D9850F504798523BF8C9A3A87D5876CF622BCF7 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x334 DUP3 PUSH2 0x309 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x344 DUP2 PUSH2 0x329 JUMP JUMPDEST DUP2 EQ PUSH2 0x34F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x361 DUP2 PUSH2 0x33B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37D JUMPI PUSH2 0x37C PUSH2 0x304 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x38B DUP5 DUP3 DUP6 ADD PUSH2 0x352 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A7 DUP2 PUSH2 0x394 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3C2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x39E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3D1 DUP2 PUSH2 0x329 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3EC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x401 DUP2 PUSH2 0x33B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x41D JUMPI PUSH2 0x41C PUSH2 0x304 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x42B DUP5 DUP3 DUP6 ADD PUSH2 0x3F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x478 DUP3 PUSH2 0x434 JUMP JUMPDEST SWAP2 POP PUSH2 0x483 DUP4 PUSH2 0x434 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x49B JUMPI PUSH2 0x49A PUSH2 0x43E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6F6E6C792063757272656E7420696D706C656D656E746174696F6E417574686F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x726974792063616E2063616C6C00000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50E PUSH1 0x2D DUP4 PUSH2 0x4A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x519 DUP3 PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x53D DUP2 PUSH2 0x501 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E76616C696420617267756D656E74202D207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57A PUSH1 0x1F DUP4 PUSH2 0x4A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x585 DUP3 PUSH2 0x544 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5A9 DUP2 PUSH2 0x56D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 GAS CODECOPY 0xC9 PUSH18 0x50649AF751B6C9B10D9280DB37B25F060B0D LOG1 0xEA PUSH9 0xA6D7258313A664736F PUSH13 0x63430008110033000000000000 ",
							"sourceMap": "94:1357:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;766:13;791:28;:26;:28::i;:::-;782:72;;;:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;766:90;;969:14;964:3;959;946:38;1172:1;1153;1121:14;1100:3;1077:5;1053;1046;1042:17;1012:175;1213:16;1263:5;1260:1;1257;1242:27;1289:7;1314:1;1309:55;;;;1413:5;1410:1;1403:16;1309:55;1344:5;1341:1;1334:16;1504:126:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;870:335;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;303:561;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;870:335;970:7;993:18;1082:66;1059:103;1045:117;;1188:10;1181:17;;;870:335;:::o;1504:126::-;1544:7;1621:1;1586:31;1578:40;;:44;;;;:::i;:::-;1570:53;;1563:60;;1504:126;:::o;303:561::-;459:28;:26;:28::i;:::-;445:42;;:10;:42;;;424:134;;;;;;;;;;;;:::i;:::-;;;;;;;;;628:1;589:41;;:27;:41;;;568:119;;;;;;;;;;;;:::i;:::-;;;;;;;;;698:58;728:27;698:29;:58::i;:::-;828:27;801:55;;;;;;;;;;;;303:561;:::o;1211:287::-;1445:23;1361:66;1337:145;1211:287;:::o;88:117:6:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:77::-;1239:7;1268:5;1257:16;;1202:77;;;:::o;1285:118::-;1372:24;1390:5;1372:24;:::i;:::-;1367:3;1360:37;1285:118;;:::o;1409:222::-;1502:4;1540:2;1529:9;1525:18;1517:26;;1553:71;1621:1;1610:9;1606:17;1597:6;1553:71;:::i;:::-;1409:222;;;;:::o;1637:118::-;1724:24;1742:5;1724:24;:::i;:::-;1719:3;1712:37;1637:118;;:::o;1761:222::-;1854:4;1892:2;1881:9;1877:18;1869:26;;1905:71;1973:1;1962:9;1958:17;1949:6;1905:71;:::i;:::-;1761:222;;;;:::o;1989:139::-;2035:5;2073:6;2060:20;2051:29;;2089:33;2116:5;2089:33;:::i;:::-;1989:139;;;;:::o;2134:329::-;2193:6;2242:2;2230:9;2221:7;2217:23;2213:32;2210:119;;;2248:79;;:::i;:::-;2210:119;2368:1;2393:53;2438:7;2429:6;2418:9;2414:22;2393:53;:::i;:::-;2383:63;;2339:117;2134:329;;;;:::o;2469:77::-;2506:7;2535:5;2524:16;;2469:77;;;:::o;2552:180::-;2600:77;2597:1;2590:88;2697:4;2694:1;2687:15;2721:4;2718:1;2711:15;2738:194;2778:4;2798:20;2816:1;2798:20;:::i;:::-;2793:25;;2832:20;2850:1;2832:20;:::i;:::-;2827:25;;2876:1;2873;2869:9;2861:17;;2900:1;2894:4;2891:11;2888:37;;;2905:18;;:::i;:::-;2888:37;2738:194;;;;:::o;2938:169::-;3022:11;3056:6;3051:3;3044:19;3096:4;3091:3;3087:14;3072:29;;2938:169;;;;:::o;3113:232::-;3253:34;3249:1;3241:6;3237:14;3230:58;3322:15;3317:2;3309:6;3305:15;3298:40;3113:232;:::o;3351:366::-;3493:3;3514:67;3578:2;3573:3;3514:67;:::i;:::-;3507:74;;3590:93;3679:3;3590:93;:::i;:::-;3708:2;3703:3;3699:12;3692:19;;3351:366;;;:::o;3723:419::-;3889:4;3927:2;3916:9;3912:18;3904:26;;3976:9;3970:4;3966:20;3962:1;3951:9;3947:17;3940:47;4004:131;4130:4;4004:131;:::i;:::-;3996:139;;3723:419;;;:::o;4148:181::-;4288:33;4284:1;4276:6;4272:14;4265:57;4148:181;:::o;4335:366::-;4477:3;4498:67;4562:2;4557:3;4498:67;:::i;:::-;4491:74;;4574:93;4663:3;4574:93;:::i;:::-;4692:2;4687:3;4683:12;4676:19;;4335:366;;;:::o;4707:419::-;4873:4;4911:2;4900:9;4896:18;4888:26;;4960:9;4954:4;4950:20;4946:1;4935:9;4931:17;4924:47;4988:131;5114:4;4988:131;:::i;:::-;4980:139;;4707:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "302000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite",
								"getImplementationAuthority()": "2499",
								"getslot()": "infinite",
								"setImplementationAuthority(address)": "25990"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 94,
									"end": 1451,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 94,
									"end": 1451,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 94,
									"end": 1451,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 151,
									"end": 724,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 151,
									"end": 724,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 151,
									"end": 724,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 151,
									"end": 724,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 151,
									"end": 724,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 151,
									"end": 724,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 151,
									"end": 724,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 151,
									"end": 724,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 151,
									"end": 724,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 151,
									"end": 724,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 151,
									"end": 724,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 151,
									"end": 724,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 151,
									"end": 724,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 151,
									"end": 724,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 151,
									"end": 724,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 151,
									"end": 724,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 151,
									"end": 724,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 151,
									"end": 724,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 151,
									"end": 724,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 151,
									"end": 724,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 151,
									"end": 724,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 151,
									"end": 724,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 151,
									"end": 724,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 151,
									"end": 724,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 151,
									"end": 724,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 151,
									"end": 724,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 151,
									"end": 724,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 151,
									"end": 724,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 151,
									"end": 724,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 151,
									"end": 724,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 151,
									"end": 724,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 151,
									"end": 724,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 151,
									"end": 724,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 151,
									"end": 724,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 151,
									"end": 724,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 262,
									"end": 263,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 227,
									"end": 264,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 227,
									"end": 264,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 227,
									"end": 250,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 227,
									"end": 264,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 227,
									"end": 264,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 227,
									"end": 264,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 206,
									"end": 321,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 206,
									"end": 321,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 206,
									"end": 321,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 206,
									"end": 321,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 206,
									"end": 321,
									"name": "PUSH",
									"source": 4,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 206,
									"end": 321,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 206,
									"end": 321,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 206,
									"end": 321,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 206,
									"end": 321,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 206,
									"end": 321,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 206,
									"end": 321,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 206,
									"end": 321,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 206,
									"end": 321,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 206,
									"end": 321,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 206,
									"end": 321,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 206,
									"end": 321,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 206,
									"end": 321,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 206,
									"end": 321,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 206,
									"end": 321,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 206,
									"end": 321,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 206,
									"end": 321,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 206,
									"end": 321,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 206,
									"end": 321,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 206,
									"end": 321,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 331,
									"end": 385,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 361,
									"end": 384,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 331,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 331,
									"end": 360,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 331,
									"end": 360,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 331,
									"end": 385,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 331,
									"end": 385,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 331,
									"end": 385,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 331,
									"end": 385,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 331,
									"end": 385,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 427,
									"end": 450,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 400,
									"end": 451,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 400,
									"end": 451,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 400,
									"end": 451,
									"name": "PUSH",
									"source": 4,
									"value": "3B1074392ED8E8424715D0DDA2197EEDE67080B377FC8370E26F3E882207F6B8"
								},
								{
									"begin": 400,
									"end": 451,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 400,
									"end": 451,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 400,
									"end": 451,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 400,
									"end": 451,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 400,
									"end": 451,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 400,
									"end": 451,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 400,
									"end": 451,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 400,
									"end": 451,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 400,
									"end": 451,
									"name": "LOG2",
									"source": 4
								},
								{
									"begin": 462,
									"end": 475,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 487,
									"end": 515,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 487,
									"end": 513,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 487,
									"end": 513,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 487,
									"end": 513,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 487,
									"end": 515,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 487,
									"end": 515,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 487,
									"end": 515,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 487,
									"end": 515,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 487,
									"end": 515,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 478,
									"end": 550,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 478,
									"end": 550,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 478,
									"end": 550,
									"name": "PUSH",
									"source": 4,
									"value": "6FF6E83F"
								},
								{
									"begin": 478,
									"end": 552,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 478,
									"end": 552,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 478,
									"end": 552,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 478,
									"end": 552,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFF"
								},
								{
									"begin": 478,
									"end": 552,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 478,
									"end": 552,
									"name": "PUSH",
									"source": 4,
									"value": "E0"
								},
								{
									"begin": 478,
									"end": 552,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 478,
									"end": 552,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 478,
									"end": 552,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 478,
									"end": 552,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 478,
									"end": 552,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 478,
									"end": 552,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 478,
									"end": 552,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 478,
									"end": 552,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 478,
									"end": 552,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 478,
									"end": 552,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 478,
									"end": 552,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 478,
									"end": 552,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 478,
									"end": 552,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 478,
									"end": 552,
									"name": "GAS",
									"source": 4
								},
								{
									"begin": 478,
									"end": 552,
									"name": "STATICCALL",
									"source": 4
								},
								{
									"begin": 478,
									"end": 552,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 478,
									"end": 552,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 478,
									"end": 552,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 478,
									"end": 552,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 478,
									"end": 552,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 478,
									"end": 552,
									"name": "RETURNDATASIZE",
									"source": 4
								},
								{
									"begin": 478,
									"end": 552,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 478,
									"end": 552,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 478,
									"end": 552,
									"name": "RETURNDATACOPY",
									"source": 4
								},
								{
									"begin": 478,
									"end": 552,
									"name": "RETURNDATASIZE",
									"source": 4
								},
								{
									"begin": 478,
									"end": 552,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 478,
									"end": 552,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 478,
									"end": 552,
									"name": "tag",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 478,
									"end": 552,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 478,
									"end": 552,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 478,
									"end": 552,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 478,
									"end": 552,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 478,
									"end": 552,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 478,
									"end": 552,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 478,
									"end": 552,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 478,
									"end": 552,
									"name": "RETURNDATASIZE",
									"source": 4
								},
								{
									"begin": 478,
									"end": 552,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 478,
									"end": 552,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 478,
									"end": 552,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 478,
									"end": 552,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 478,
									"end": 552,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 478,
									"end": 552,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 478,
									"end": 552,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 478,
									"end": 552,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 478,
									"end": 552,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 478,
									"end": 552,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 478,
									"end": 552,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 478,
									"end": 552,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 478,
									"end": 552,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 478,
									"end": 552,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 478,
									"end": 552,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 478,
									"end": 552,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 478,
									"end": 552,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 478,
									"end": 552,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 478,
									"end": 552,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 478,
									"end": 552,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 478,
									"end": 552,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 478,
									"end": 552,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 462,
									"end": 552,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 462,
									"end": 552,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 572,
									"end": 584,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 590,
									"end": 595,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 590,
									"end": 608,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 590,
									"end": 608,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 622,
									"end": 655,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 622,
									"end": 655,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 622,
									"end": 655,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 622,
									"end": 655,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 622,
									"end": 655,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 622,
									"end": 655,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 622,
									"end": 655,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 622,
									"end": 655,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 622,
									"end": 655,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 622,
									"end": 655,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 622,
									"end": 655,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 622,
									"end": 655,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 622,
									"end": 655,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 622,
									"end": 655,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 622,
									"end": 655,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 622,
									"end": 655,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 622,
									"end": 655,
									"name": "PUSH",
									"source": 4,
									"value": "E1C7392A00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 622,
									"end": 655,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 622,
									"end": 655,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 622,
									"end": 655,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 622,
									"end": 655,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 622,
									"end": 655,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 622,
									"end": 655,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 622,
									"end": 655,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 622,
									"end": 655,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 622,
									"end": 655,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 622,
									"end": 655,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 622,
									"end": 655,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 622,
									"end": 655,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 622,
									"end": 655,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 622,
									"end": 655,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 622,
									"end": 655,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 622,
									"end": 655,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 622,
									"end": 655,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 622,
									"end": 655,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 622,
									"end": 655,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 622,
									"end": 655,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 590,
									"end": 665,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 590,
									"end": 665,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 590,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 590,
									"end": 665,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 590,
									"end": 665,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 590,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 590,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 590,
									"end": 665,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 590,
									"end": 665,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 590,
									"end": 665,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 590,
									"end": 665,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 590,
									"end": 665,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 590,
									"end": 665,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 590,
									"end": 665,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 590,
									"end": 665,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 590,
									"end": 665,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 590,
									"end": 665,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 590,
									"end": 665,
									"name": "GAS",
									"source": 4
								},
								{
									"begin": 590,
									"end": 665,
									"name": "DELEGATECALL",
									"source": 4
								},
								{
									"begin": 590,
									"end": 665,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 590,
									"end": 665,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 590,
									"end": 665,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 590,
									"end": 665,
									"name": "RETURNDATASIZE",
									"source": 4
								},
								{
									"begin": 590,
									"end": 665,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 590,
									"end": 665,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 590,
									"end": 665,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 590,
									"end": 665,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 590,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 590,
									"end": 665,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 590,
									"end": 665,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 590,
									"end": 665,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 590,
									"end": 665,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 590,
									"end": 665,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 590,
									"end": 665,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 590,
									"end": 665,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 590,
									"end": 665,
									"name": "PUSH",
									"source": 4,
									"value": "3F"
								},
								{
									"begin": 590,
									"end": 665,
									"name": "RETURNDATASIZE",
									"source": 4
								},
								{
									"begin": 590,
									"end": 665,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 590,
									"end": 665,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 590,
									"end": 665,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 590,
									"end": 665,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 590,
									"end": 665,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 590,
									"end": 665,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 590,
									"end": 665,
									"name": "RETURNDATASIZE",
									"source": 4
								},
								{
									"begin": 590,
									"end": 665,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 590,
									"end": 665,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 590,
									"end": 665,
									"name": "RETURNDATASIZE",
									"source": 4
								},
								{
									"begin": 590,
									"end": 665,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 590,
									"end": 665,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 590,
									"end": 665,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 590,
									"end": 665,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 590,
									"end": 665,
									"name": "RETURNDATACOPY",
									"source": 4
								},
								{
									"begin": 590,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 590,
									"end": 665,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 590,
									"end": 665,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 590,
									"end": 665,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 590,
									"end": 665,
									"name": "PUSH",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 590,
									"end": 665,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 590,
									"end": 665,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 590,
									"end": 665,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 590,
									"end": 665,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 590,
									"end": 665,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 571,
									"end": 665,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 571,
									"end": 665,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 571,
									"end": 665,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 683,
									"end": 690,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 675,
									"end": 717,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 675,
									"end": 717,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 675,
									"end": 717,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 675,
									"end": 717,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 675,
									"end": 717,
									"name": "PUSH",
									"source": 4,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 675,
									"end": 717,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 675,
									"end": 717,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 675,
									"end": 717,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 675,
									"end": 717,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 675,
									"end": 717,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 675,
									"end": 717,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 675,
									"end": 717,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 675,
									"end": 717,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 675,
									"end": 717,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 675,
									"end": 717,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 675,
									"end": 717,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 675,
									"end": 717,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 675,
									"end": 717,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 675,
									"end": 717,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 675,
									"end": 717,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 675,
									"end": 717,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 675,
									"end": 717,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 675,
									"end": 717,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 675,
									"end": 717,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 196,
									"end": 724,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 196,
									"end": 724,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 151,
									"end": 724,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 94,
									"end": 1451,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 94,
									"end": 1451,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1211,
									"end": 1498,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1211,
									"end": 1498,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1445,
									"end": 1468,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1361,
									"end": 1427,
									"name": "PUSH",
									"source": 3,
									"value": "C5F16F0FCC639FA48A6947836D9850F504798523BF8C9A3A87D5876CF622BCF7"
								},
								{
									"begin": 1337,
									"end": 1482,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1211,
									"end": 1498,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1211,
									"end": 1498,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 870,
									"end": 1205,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 870,
									"end": 1205,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 970,
									"end": 977,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 993,
									"end": 1011,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1082,
									"end": 1148,
									"name": "PUSH",
									"source": 3,
									"value": "C5F16F0FCC639FA48A6947836D9850F504798523BF8C9A3A87D5876CF622BCF7"
								},
								{
									"begin": 1059,
									"end": 1162,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1045,
									"end": 1162,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1045,
									"end": 1162,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1188,
									"end": 1198,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1181,
									"end": 1198,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1181,
									"end": 1198,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1181,
									"end": 1198,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 870,
									"end": 1205,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 870,
									"end": 1205,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1286,
									"end": 1297,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1320,
									"end": 1326,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1315,
									"end": 1318,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1308,
									"end": 1327,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1360,
									"end": 1364,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1355,
									"end": 1358,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1351,
									"end": 1365,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1336,
									"end": 1365,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1336,
									"end": 1365,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1371,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1377,
									"end": 1558,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1377,
									"end": 1558,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1517,
									"end": 1550,
									"name": "PUSH",
									"source": 6,
									"value": "696E76616C696420617267756D656E74202D207A65726F206164647265737300"
								},
								{
									"begin": 1513,
									"end": 1514,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1505,
									"end": 1511,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1501,
									"end": 1515,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1494,
									"end": 1551,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1377,
									"end": 1558,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1377,
									"end": 1558,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1564,
									"end": 1930,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 1564,
									"end": 1930,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1706,
									"end": 1709,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1727,
									"end": 1794,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 1791,
									"end": 1793,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1786,
									"end": 1789,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1727,
									"end": 1794,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1727,
									"end": 1794,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1727,
									"end": 1794,
									"name": "tag",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 1727,
									"end": 1794,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1720,
									"end": 1794,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1720,
									"end": 1794,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1803,
									"end": 1896,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 1892,
									"end": 1895,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1803,
									"end": 1896,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1803,
									"end": 1896,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1803,
									"end": 1896,
									"name": "tag",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 1803,
									"end": 1896,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1921,
									"end": 1923,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1916,
									"end": 1919,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1912,
									"end": 1924,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1905,
									"end": 1924,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1905,
									"end": 1924,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1564,
									"end": 1930,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1564,
									"end": 1930,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1564,
									"end": 1930,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1564,
									"end": 1930,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1936,
									"end": 2355,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1936,
									"end": 2355,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2102,
									"end": 2106,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2140,
									"end": 2142,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2129,
									"end": 2138,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2125,
									"end": 2143,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2117,
									"end": 2143,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2117,
									"end": 2143,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2189,
									"end": 2198,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2183,
									"end": 2187,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2179,
									"end": 2199,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2175,
									"end": 2176,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2164,
									"end": 2173,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2160,
									"end": 2177,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2153,
									"end": 2200,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2217,
									"end": 2348,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 2343,
									"end": 2347,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2217,
									"end": 2348,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 2217,
									"end": 2348,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2217,
									"end": 2348,
									"name": "tag",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 2217,
									"end": 2348,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2348,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2348,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1936,
									"end": 2355,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1936,
									"end": 2355,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1936,
									"end": 2355,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1936,
									"end": 2355,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2361,
									"end": 2459,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 2361,
									"end": 2459,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2412,
									"end": 2418,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2446,
									"end": 2451,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2440,
									"end": 2452,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2430,
									"end": 2452,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2430,
									"end": 2452,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2361,
									"end": 2459,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2361,
									"end": 2459,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2361,
									"end": 2459,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2361,
									"end": 2459,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2465,
									"end": 2612,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 2465,
									"end": 2612,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2566,
									"end": 2577,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2603,
									"end": 2606,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2588,
									"end": 2606,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2588,
									"end": 2606,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2465,
									"end": 2612,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2465,
									"end": 2612,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2465,
									"end": 2612,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2465,
									"end": 2612,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2465,
									"end": 2612,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2618,
									"end": 2864,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 2618,
									"end": 2864,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2699,
									"end": 2700,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2709,
									"end": 2822,
									"name": "tag",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 2709,
									"end": 2822,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2723,
									"end": 2729,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2720,
									"end": 2721,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2717,
									"end": 2730,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2709,
									"end": 2822,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2709,
									"end": 2822,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 2709,
									"end": 2822,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2808,
									"end": 2809,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2803,
									"end": 2806,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2799,
									"end": 2810,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2793,
									"end": 2811,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2789,
									"end": 2790,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2784,
									"end": 2787,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2773,
									"end": 2812,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2745,
									"end": 2747,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2742,
									"end": 2743,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2738,
									"end": 2748,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2733,
									"end": 2748,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2733,
									"end": 2748,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2709,
									"end": 2822,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 2709,
									"end": 2822,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2709,
									"end": 2822,
									"name": "tag",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 2709,
									"end": 2822,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2856,
									"end": 2857,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2847,
									"end": 2853,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2842,
									"end": 2845,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2838,
									"end": 2854,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2831,
									"end": 2858,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2680,
									"end": 2864,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2618,
									"end": 2864,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2618,
									"end": 2864,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2618,
									"end": 2864,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2618,
									"end": 2864,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2870,
									"end": 3256,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2870,
									"end": 3256,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2974,
									"end": 2977,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3002,
									"end": 3040,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 3034,
									"end": 3039,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3002,
									"end": 3040,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 3002,
									"end": 3040,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3002,
									"end": 3040,
									"name": "tag",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 3002,
									"end": 3040,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3056,
									"end": 3144,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 3137,
									"end": 3143,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3132,
									"end": 3135,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3056,
									"end": 3144,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 3056,
									"end": 3144,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3056,
									"end": 3144,
									"name": "tag",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 3056,
									"end": 3144,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3049,
									"end": 3144,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 3049,
									"end": 3144,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3153,
									"end": 3218,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 3211,
									"end": 3217,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3206,
									"end": 3209,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3199,
									"end": 3203,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3192,
									"end": 3197,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3188,
									"end": 3204,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3153,
									"end": 3218,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 3153,
									"end": 3218,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3153,
									"end": 3218,
									"name": "tag",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 3153,
									"end": 3218,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3243,
									"end": 3249,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3238,
									"end": 3241,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3234,
									"end": 3250,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3227,
									"end": 3250,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3227,
									"end": 3250,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2978,
									"end": 3256,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2870,
									"end": 3256,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2870,
									"end": 3256,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2870,
									"end": 3256,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2870,
									"end": 3256,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2870,
									"end": 3256,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3262,
									"end": 3533,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 3262,
									"end": 3533,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3392,
									"end": 3395,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3414,
									"end": 3507,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 3503,
									"end": 3506,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3494,
									"end": 3500,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3414,
									"end": 3507,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3414,
									"end": 3507,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3414,
									"end": 3507,
									"name": "tag",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 3414,
									"end": 3507,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3407,
									"end": 3507,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3407,
									"end": 3507,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3524,
									"end": 3527,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3517,
									"end": 3527,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3517,
									"end": 3527,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3262,
									"end": 3533,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3262,
									"end": 3533,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3262,
									"end": 3533,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3262,
									"end": 3533,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3262,
									"end": 3533,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3539,
									"end": 3711,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 3539,
									"end": 3711,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3679,
									"end": 3703,
									"name": "PUSH",
									"source": 6,
									"value": "496E697469616C697A6174696F6E206661696C65642E00000000000000000000"
								},
								{
									"begin": 3675,
									"end": 3676,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3667,
									"end": 3673,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3663,
									"end": 3677,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3656,
									"end": 3704,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3539,
									"end": 3711,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3539,
									"end": 3711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3717,
									"end": 4083,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 3717,
									"end": 4083,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3859,
									"end": 3862,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3880,
									"end": 3947,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 3944,
									"end": 3946,
									"name": "PUSH",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 3939,
									"end": 3942,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3880,
									"end": 3947,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 3880,
									"end": 3947,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3880,
									"end": 3947,
									"name": "tag",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 3880,
									"end": 3947,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3873,
									"end": 3947,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3873,
									"end": 3947,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3956,
									"end": 4049,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 4045,
									"end": 4048,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3956,
									"end": 4049,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 3956,
									"end": 4049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3956,
									"end": 4049,
									"name": "tag",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 3956,
									"end": 4049,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4074,
									"end": 4076,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4069,
									"end": 4072,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4065,
									"end": 4077,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4058,
									"end": 4077,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4058,
									"end": 4077,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3717,
									"end": 4083,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3717,
									"end": 4083,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3717,
									"end": 4083,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3717,
									"end": 4083,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4089,
									"end": 4508,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 4089,
									"end": 4508,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4255,
									"end": 4259,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4293,
									"end": 4295,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4282,
									"end": 4291,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4278,
									"end": 4296,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4270,
									"end": 4296,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4270,
									"end": 4296,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4342,
									"end": 4351,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4336,
									"end": 4340,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4332,
									"end": 4352,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 4328,
									"end": 4329,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4317,
									"end": 4326,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4313,
									"end": 4330,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4306,
									"end": 4353,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4370,
									"end": 4501,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 4496,
									"end": 4500,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4370,
									"end": 4501,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 4370,
									"end": 4501,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4370,
									"end": 4501,
									"name": "tag",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 4370,
									"end": 4501,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4362,
									"end": 4501,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4362,
									"end": 4501,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4089,
									"end": 4508,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4089,
									"end": 4508,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4089,
									"end": 4508,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4089,
									"end": 4508,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 94,
									"end": 1451,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 94,
									"end": 1451,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 94,
									"end": 1451,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 94,
									"end": 1451,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 94,
									"end": 1451,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 94,
									"end": 1451,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 94,
									"end": 1451,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 94,
									"end": 1451,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 94,
									"end": 1451,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220905a39c97150649af751b6c9b10d9280db37b25f060b0da1ea68a6d7258313a664736f6c63430008110033",
									".code": [
										{
											"begin": 94,
											"end": 1451,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 94,
											"end": 1451,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 94,
											"end": 1451,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 94,
											"end": 1451,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 94,
											"end": 1451,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 94,
											"end": 1451,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 94,
											"end": 1451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 94,
											"end": 1451,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 94,
											"end": 1451,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 94,
											"end": 1451,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 94,
											"end": 1451,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 94,
											"end": 1451,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 94,
											"end": 1451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 94,
											"end": 1451,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 94,
											"end": 1451,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 94,
											"end": 1451,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 94,
											"end": 1451,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 94,
											"end": 1451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 94,
											"end": 1451,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 94,
											"end": 1451,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 94,
											"end": 1451,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 94,
											"end": 1451,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 94,
											"end": 1451,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 94,
											"end": 1451,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 94,
											"end": 1451,
											"name": "PUSH",
											"source": 4,
											"value": "24173669"
										},
										{
											"begin": 94,
											"end": 1451,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 94,
											"end": 1451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 94,
											"end": 1451,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 94,
											"end": 1451,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 94,
											"end": 1451,
											"name": "PUSH",
											"source": 4,
											"value": "2D5F1187"
										},
										{
											"begin": 94,
											"end": 1451,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 94,
											"end": 1451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 94,
											"end": 1451,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 94,
											"end": 1451,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 94,
											"end": 1451,
											"name": "PUSH",
											"source": 4,
											"value": "92DD9D65"
										},
										{
											"begin": 94,
											"end": 1451,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 94,
											"end": 1451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 94,
											"end": 1451,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 94,
											"end": 1451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 94,
											"end": 1451,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 94,
											"end": 1451,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 94,
											"end": 1451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 94,
											"end": 1451,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 94,
											"end": 1451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 766,
											"end": 779,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 791,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 791,
											"end": 819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 791,
											"end": 819,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 791,
											"end": 819,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 782,
											"end": 854,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 782,
											"end": 854,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 782,
											"end": 854,
											"name": "PUSH",
											"source": 4,
											"value": "6FF6E83F"
										},
										{
											"begin": 782,
											"end": 856,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 782,
											"end": 856,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 782,
											"end": 856,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 782,
											"end": 856,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 782,
											"end": 856,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 782,
											"end": 856,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 782,
											"end": 856,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 782,
											"end": 856,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 782,
											"end": 856,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 782,
											"end": 856,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 782,
											"end": 856,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 782,
											"end": 856,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 782,
											"end": 856,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 782,
											"end": 856,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 782,
											"end": 856,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 782,
											"end": 856,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 782,
											"end": 856,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 782,
											"end": 856,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 782,
											"end": 856,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 782,
											"end": 856,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 782,
											"end": 856,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 782,
											"end": 856,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 782,
											"end": 856,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 782,
											"end": 856,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 782,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 782,
											"end": 856,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 782,
											"end": 856,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 782,
											"end": 856,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 782,
											"end": 856,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 782,
											"end": 856,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 782,
											"end": 856,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 782,
											"end": 856,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 782,
											"end": 856,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 782,
											"end": 856,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 782,
											"end": 856,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 782,
											"end": 856,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 782,
											"end": 856,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 782,
											"end": 856,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 782,
											"end": 856,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 782,
											"end": 856,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 782,
											"end": 856,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 782,
											"end": 856,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 782,
											"end": 856,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 782,
											"end": 856,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 782,
											"end": 856,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 782,
											"end": 856,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 782,
											"end": 856,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 782,
											"end": 856,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 782,
											"end": 856,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 782,
											"end": 856,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 782,
											"end": 856,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 782,
											"end": 856,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 782,
											"end": 856,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 782,
											"end": 856,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 782,
											"end": 856,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 782,
											"end": 856,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 782,
											"end": 856,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 782,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 782,
											"end": 856,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 782,
											"end": 856,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 782,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 782,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 782,
											"end": 856,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 782,
											"end": 856,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 766,
											"end": 856,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 766,
											"end": 856,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 969,
											"end": 983,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 964,
											"end": 967,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 959,
											"end": 962,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 946,
											"end": 984,
											"name": "CALLDATACOPY",
											"source": 4
										},
										{
											"begin": 1172,
											"end": 1173,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1153,
											"end": 1154,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1100,
											"end": 1103,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1077,
											"end": 1082,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1053,
											"end": 1058,
											"name": "PUSH",
											"source": 4,
											"value": "2710"
										},
										{
											"begin": 1046,
											"end": 1051,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1059,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1012,
											"end": 1187,
											"name": "DELEGATECALL",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1229,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1263,
											"end": 1268,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1260,
											"end": 1261,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1257,
											"end": 1258,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1242,
											"end": 1269,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1289,
											"end": 1296,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1314,
											"end": 1315,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1309,
											"end": 1364,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1364,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1309,
											"end": 1364,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1418,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1411,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 1419,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1364,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1309,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1344,
											"end": 1349,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1342,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1334,
											"end": 1350,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1504,
											"end": 1630,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1504,
											"end": 1630,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1504,
											"end": 1630,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1504,
											"end": 1630,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1504,
											"end": 1630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1504,
											"end": 1630,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1504,
											"end": 1630,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1504,
											"end": 1630,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1504,
											"end": 1630,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1504,
											"end": 1630,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1504,
											"end": 1630,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1504,
											"end": 1630,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1504,
											"end": 1630,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1504,
											"end": 1630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1504,
											"end": 1630,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1504,
											"end": 1630,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1504,
											"end": 1630,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1504,
											"end": 1630,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1504,
											"end": 1630,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1504,
											"end": 1630,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1504,
											"end": 1630,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1504,
											"end": 1630,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1504,
											"end": 1630,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 870,
											"end": 1205,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 870,
											"end": 1205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 870,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 870,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 870,
											"end": 1205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 870,
											"end": 1205,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 870,
											"end": 1205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 870,
											"end": 1205,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 870,
											"end": 1205,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 870,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 870,
											"end": 1205,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 870,
											"end": 1205,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 870,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 870,
											"end": 1205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 870,
											"end": 1205,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 870,
											"end": 1205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 870,
											"end": 1205,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 870,
											"end": 1205,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 870,
											"end": 1205,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 870,
											"end": 1205,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 870,
											"end": 1205,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 870,
											"end": 1205,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 870,
											"end": 1205,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 303,
											"end": 864,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 303,
											"end": 864,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 303,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 303,
											"end": 864,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 303,
											"end": 864,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 303,
											"end": 864,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 303,
											"end": 864,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 303,
											"end": 864,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 303,
											"end": 864,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 303,
											"end": 864,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 303,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 303,
											"end": 864,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 303,
											"end": 864,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 303,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 303,
											"end": 864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 303,
											"end": 864,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 303,
											"end": 864,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 303,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 303,
											"end": 864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 303,
											"end": 864,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 303,
											"end": 864,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 303,
											"end": 864,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 870,
											"end": 1205,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 870,
											"end": 1205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 970,
											"end": 977,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 993,
											"end": 1011,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1082,
											"end": 1148,
											"name": "PUSH",
											"source": 3,
											"value": "C5F16F0FCC639FA48A6947836D9850F504798523BF8C9A3A87D5876CF622BCF7"
										},
										{
											"begin": 1059,
											"end": 1162,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1045,
											"end": 1162,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1045,
											"end": 1162,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1188,
											"end": 1198,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1181,
											"end": 1198,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1181,
											"end": 1198,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1181,
											"end": 1198,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 870,
											"end": 1205,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 870,
											"end": 1205,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1504,
											"end": 1630,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1504,
											"end": 1630,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1544,
											"end": 1551,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1621,
											"end": 1622,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1586,
											"end": 1617,
											"name": "PUSH",
											"source": 3,
											"value": "4CD9B827CA535CEB0880425D70EFF88561ECDF04DC32FCF7FF3B15C587F8A871"
										},
										{
											"begin": 1578,
											"end": 1618,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1578,
											"end": 1618,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 1578,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1578,
											"end": 1622,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1578,
											"end": 1622,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1578,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1578,
											"end": 1622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1578,
											"end": 1622,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1578,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1570,
											"end": 1623,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1623,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1563,
											"end": 1623,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1563,
											"end": 1623,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1504,
											"end": 1630,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1504,
											"end": 1630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 303,
											"end": 864,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 303,
											"end": 864,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 459,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 459,
											"end": 485,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 459,
											"end": 487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 459,
											"end": 487,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 459,
											"end": 487,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 445,
											"end": 487,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 445,
											"end": 487,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 445,
											"end": 455,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 445,
											"end": 487,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 445,
											"end": 487,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 445,
											"end": 487,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 424,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 424,
											"end": 558,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 424,
											"end": 558,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 558,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 424,
											"end": 558,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 424,
											"end": 558,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 424,
											"end": 558,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 424,
											"end": 558,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 424,
											"end": 558,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 424,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 424,
											"end": 558,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 424,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 424,
											"end": 558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 424,
											"end": 558,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 424,
											"end": 558,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 424,
											"end": 558,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 558,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 424,
											"end": 558,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 424,
											"end": 558,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 424,
											"end": 558,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 424,
											"end": 558,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 424,
											"end": 558,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 424,
											"end": 558,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 424,
											"end": 558,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 628,
											"end": 629,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 630,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 589,
											"end": 630,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 589,
											"end": 616,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 589,
											"end": 630,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 589,
											"end": 630,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 589,
											"end": 630,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 568,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 568,
											"end": 687,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 568,
											"end": 687,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 568,
											"end": 687,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 568,
											"end": 687,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 568,
											"end": 687,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 568,
											"end": 687,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 568,
											"end": 687,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 568,
											"end": 687,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 568,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 568,
											"end": 687,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 568,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 568,
											"end": 687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 687,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 568,
											"end": 687,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 568,
											"end": 687,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 568,
											"end": 687,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 568,
											"end": 687,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 568,
											"end": 687,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 568,
											"end": 687,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 568,
											"end": 687,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 568,
											"end": 687,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 568,
											"end": 687,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 568,
											"end": 687,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 698,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 728,
											"end": 755,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 698,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 698,
											"end": 756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 698,
											"end": 756,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 756,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 828,
											"end": 855,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 801,
											"end": 856,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 801,
											"end": 856,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 801,
											"end": 856,
											"name": "PUSH",
											"source": 3,
											"value": "3B1074392ED8E8424715D0DDA2197EEDE67080B377FC8370E26F3E882207F6B8"
										},
										{
											"begin": 801,
											"end": 856,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 801,
											"end": 856,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 801,
											"end": 856,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 801,
											"end": 856,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 801,
											"end": 856,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 801,
											"end": 856,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 801,
											"end": 856,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 801,
											"end": 856,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 801,
											"end": 856,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 303,
											"end": 864,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 303,
											"end": 864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1211,
											"end": 1498,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1211,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1445,
											"end": 1468,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1361,
											"end": 1427,
											"name": "PUSH",
											"source": 3,
											"value": "C5F16F0FCC639FA48A6947836D9850F504798523BF8C9A3A87D5876CF622BCF7"
										},
										{
											"begin": 1337,
											"end": 1482,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1211,
											"end": 1498,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1211,
											"end": 1498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 839,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 696,
											"end": 839,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 753,
											"end": 758,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 784,
											"end": 790,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 778,
											"end": 791,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 769,
											"end": 791,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 769,
											"end": 791,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 800,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 827,
											"end": 832,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 800,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 800,
											"end": 833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 800,
											"end": 833,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 800,
											"end": 833,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 696,
											"end": 839,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 696,
											"end": 839,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 696,
											"end": 839,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 839,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 845,
											"end": 1196,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 845,
											"end": 1196,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 915,
											"end": 921,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 964,
											"end": 966,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 952,
											"end": 961,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 943,
											"end": 950,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 939,
											"end": 962,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 935,
											"end": 967,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 932,
											"end": 1051,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 932,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 932,
											"end": 1051,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 970,
											"end": 1049,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 970,
											"end": 1049,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 970,
											"end": 1049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 970,
											"end": 1049,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 970,
											"end": 1049,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 932,
											"end": 1051,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 932,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1090,
											"end": 1091,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1115,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 1171,
											"end": 1178,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1162,
											"end": 1168,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1160,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1147,
											"end": 1169,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1115,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 1179,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 1115,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1105,
											"end": 1179,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1105,
											"end": 1179,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1061,
											"end": 1189,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 845,
											"end": 1196,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 845,
											"end": 1196,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 845,
											"end": 1196,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 845,
											"end": 1196,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 845,
											"end": 1196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1279,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1202,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1246,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1268,
											"end": 1273,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1257,
											"end": 1273,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1257,
											"end": 1273,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1279,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1279,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1279,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1285,
											"end": 1403,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1285,
											"end": 1403,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1372,
											"end": 1396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 1390,
											"end": 1395,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1372,
											"end": 1396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1372,
											"end": 1396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1372,
											"end": 1396,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 1372,
											"end": 1396,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1367,
											"end": 1370,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1360,
											"end": 1397,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1285,
											"end": 1403,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1285,
											"end": 1403,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1285,
											"end": 1403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1409,
											"end": 1631,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1409,
											"end": 1631,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1502,
											"end": 1506,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1540,
											"end": 1542,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1529,
											"end": 1538,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1525,
											"end": 1543,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1517,
											"end": 1543,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1517,
											"end": 1543,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1624,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 1621,
											"end": 1622,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1610,
											"end": 1619,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1606,
											"end": 1623,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1597,
											"end": 1603,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1624,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1553,
											"end": 1624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1624,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 1553,
											"end": 1624,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1409,
											"end": 1631,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1409,
											"end": 1631,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1409,
											"end": 1631,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1409,
											"end": 1631,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1409,
											"end": 1631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1637,
											"end": 1755,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1637,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1724,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1742,
											"end": 1747,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1724,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1724,
											"end": 1748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1724,
											"end": 1748,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1724,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1719,
											"end": 1722,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1749,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1637,
											"end": 1755,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1637,
											"end": 1755,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1637,
											"end": 1755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1761,
											"end": 1983,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 1761,
											"end": 1983,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1858,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1892,
											"end": 1894,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1881,
											"end": 1890,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1877,
											"end": 1895,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1895,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1895,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1905,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 1973,
											"end": 1974,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1962,
											"end": 1971,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1958,
											"end": 1975,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1955,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1905,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1905,
											"end": 1976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1905,
											"end": 1976,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 1905,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1761,
											"end": 1983,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1761,
											"end": 1983,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1761,
											"end": 1983,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1761,
											"end": 1983,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1761,
											"end": 1983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1989,
											"end": 2128,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1989,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2040,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2073,
											"end": 2079,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2060,
											"end": 2080,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2089,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 2116,
											"end": 2121,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2089,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 2089,
											"end": 2122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2089,
											"end": 2122,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 2089,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1989,
											"end": 2128,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1989,
											"end": 2128,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1989,
											"end": 2128,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1989,
											"end": 2128,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1989,
											"end": 2128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2134,
											"end": 2463,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 2134,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2193,
											"end": 2199,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2242,
											"end": 2244,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2230,
											"end": 2239,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2221,
											"end": 2228,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2217,
											"end": 2240,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2213,
											"end": 2245,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2210,
											"end": 2329,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2210,
											"end": 2329,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 2210,
											"end": 2329,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2248,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 2248,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2248,
											"end": 2327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2248,
											"end": 2327,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 2248,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2210,
											"end": 2329,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 2210,
											"end": 2329,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2369,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 2438,
											"end": 2445,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2435,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2427,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2414,
											"end": 2436,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 2393,
											"end": 2446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 2393,
											"end": 2446,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2383,
											"end": 2446,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2383,
											"end": 2446,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2456,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2134,
											"end": 2463,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2134,
											"end": 2463,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2134,
											"end": 2463,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2134,
											"end": 2463,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2134,
											"end": 2463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2546,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 2469,
											"end": 2546,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2506,
											"end": 2513,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2535,
											"end": 2540,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2524,
											"end": 2540,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2524,
											"end": 2540,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2546,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2546,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2546,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2552,
											"end": 2732,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 2552,
											"end": 2732,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2600,
											"end": 2677,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2597,
											"end": 2598,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2678,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2701,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2694,
											"end": 2695,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2687,
											"end": 2702,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2725,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2718,
											"end": 2719,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2711,
											"end": 2726,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2738,
											"end": 2932,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 2738,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2778,
											"end": 2782,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2798,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 2816,
											"end": 2817,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 2798,
											"end": 2818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2818,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 2798,
											"end": 2818,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2793,
											"end": 2818,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2793,
											"end": 2818,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2832,
											"end": 2852,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 2850,
											"end": 2851,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2832,
											"end": 2852,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 2832,
											"end": 2852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2832,
											"end": 2852,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 2832,
											"end": 2852,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2827,
											"end": 2852,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2827,
											"end": 2852,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2876,
											"end": 2877,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 2874,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2869,
											"end": 2878,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2861,
											"end": 2878,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2861,
											"end": 2878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2900,
											"end": 2901,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2894,
											"end": 2898,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2891,
											"end": 2902,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 2925,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 2888,
											"end": 2925,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2905,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 2905,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 2905,
											"end": 2923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2905,
											"end": 2923,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 2905,
											"end": 2923,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 2925,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 2888,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2738,
											"end": 2932,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2738,
											"end": 2932,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2738,
											"end": 2932,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2738,
											"end": 2932,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2738,
											"end": 2932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2938,
											"end": 3107,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 2938,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3022,
											"end": 3033,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3056,
											"end": 3062,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3051,
											"end": 3054,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3044,
											"end": 3063,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3096,
											"end": 3100,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3091,
											"end": 3094,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3087,
											"end": 3101,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3101,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3101,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2938,
											"end": 3107,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2938,
											"end": 3107,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2938,
											"end": 3107,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2938,
											"end": 3107,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2938,
											"end": 3107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3345,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 3113,
											"end": 3345,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3253,
											"end": 3287,
											"name": "PUSH",
											"source": 6,
											"value": "6F6E6C792063757272656E7420696D706C656D656E746174696F6E417574686F"
										},
										{
											"begin": 3249,
											"end": 3250,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3241,
											"end": 3247,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3237,
											"end": 3251,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3288,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3322,
											"end": 3337,
											"name": "PUSH",
											"source": 6,
											"value": "726974792063616E2063616C6C00000000000000000000000000000000000000"
										},
										{
											"begin": 3317,
											"end": 3319,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3309,
											"end": 3315,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 3320,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3298,
											"end": 3338,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3345,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3717,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 3351,
											"end": 3717,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3493,
											"end": 3496,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3514,
											"end": 3581,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 3578,
											"end": 3580,
											"name": "PUSH",
											"source": 6,
											"value": "2D"
										},
										{
											"begin": 3573,
											"end": 3576,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3514,
											"end": 3581,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 3514,
											"end": 3581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3514,
											"end": 3581,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 3514,
											"end": 3581,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3507,
											"end": 3581,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3507,
											"end": 3581,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3590,
											"end": 3683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 3679,
											"end": 3682,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3590,
											"end": 3683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 3590,
											"end": 3683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3590,
											"end": 3683,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 3590,
											"end": 3683,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3708,
											"end": 3710,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3703,
											"end": 3706,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3699,
											"end": 3711,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3692,
											"end": 3711,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3692,
											"end": 3711,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3717,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3717,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3717,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3723,
											"end": 4142,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 3723,
											"end": 4142,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3889,
											"end": 3893,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3927,
											"end": 3929,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3916,
											"end": 3925,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3912,
											"end": 3930,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3904,
											"end": 3930,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3904,
											"end": 3930,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3976,
											"end": 3985,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3970,
											"end": 3974,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3966,
											"end": 3986,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3962,
											"end": 3963,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3951,
											"end": 3960,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3947,
											"end": 3964,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3940,
											"end": 3987,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4004,
											"end": 4135,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 4130,
											"end": 4134,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4004,
											"end": 4135,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 4004,
											"end": 4135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4004,
											"end": 4135,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 4004,
											"end": 4135,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3996,
											"end": 4135,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3996,
											"end": 4135,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3723,
											"end": 4142,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3723,
											"end": 4142,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3723,
											"end": 4142,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3723,
											"end": 4142,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4148,
											"end": 4329,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 4148,
											"end": 4329,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4321,
											"name": "PUSH",
											"source": 6,
											"value": "696E76616C696420617267756D656E74202D207A65726F206164647265737300"
										},
										{
											"begin": 4284,
											"end": 4285,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4286,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4265,
											"end": 4322,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4148,
											"end": 4329,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4148,
											"end": 4329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4335,
											"end": 4701,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4335,
											"end": 4701,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4477,
											"end": 4480,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 4562,
											"end": 4564,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4557,
											"end": 4560,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4498,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 4498,
											"end": 4565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4498,
											"end": 4565,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 4498,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4491,
											"end": 4565,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4491,
											"end": 4565,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4574,
											"end": 4667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 4663,
											"end": 4666,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4574,
											"end": 4667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 4574,
											"end": 4667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4574,
											"end": 4667,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 4574,
											"end": 4667,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4692,
											"end": 4694,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4687,
											"end": 4690,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4683,
											"end": 4695,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4676,
											"end": 4695,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4676,
											"end": 4695,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4335,
											"end": 4701,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4335,
											"end": 4701,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4335,
											"end": 4701,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4335,
											"end": 4701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4707,
											"end": 5126,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 4707,
											"end": 5126,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4877,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4911,
											"end": 4913,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4900,
											"end": 4909,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4896,
											"end": 4914,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4888,
											"end": 4914,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4888,
											"end": 4914,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4960,
											"end": 4969,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4954,
											"end": 4958,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4950,
											"end": 4970,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4946,
											"end": 4947,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4935,
											"end": 4944,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4931,
											"end": 4948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4924,
											"end": 4971,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4988,
											"end": 5119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 5114,
											"end": 5118,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4988,
											"end": 5119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4988,
											"end": 5119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4988,
											"end": 5119,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 4988,
											"end": 5119,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 5119,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 5119,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4707,
											"end": 5126,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4707,
											"end": 5126,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4707,
											"end": 5126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4707,
											"end": 5126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"erc3643/erc3643/factory/Ifactory.sol",
								"erc3643/erc3643/proxy/AbstractProxy.sol",
								"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol",
								"erc3643/erc3643/proxy/IProxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getImplementationAuthority()": "2d5f1187",
							"getslot()": "24173669",
							"setImplementationAuthority(address)": "92dd9d65"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementationAuthority\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_implementationAuthority\",\"type\":\"address\"}],\"name\":\"ImplementationAuthoritySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"getImplementationAuthority\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getslot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newImplementationAuthority\",\"type\":\"address\"}],\"name\":\"setImplementationAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"ImplementationAuthoritySet(address)\":{\"notice\":\"events\"}},\"kind\":\"user\",\"methods\":{\"setImplementationAuthority(address)\":{\"notice\":\"functions\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":\"ClaimTopicsRegistryProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"erc3643/erc3643/factory/Ifactory.sol\":{\"keccak256\":\"0x3e67d4c86a65ff2e93eb27a5e31ba24c9f14a597fa91f06069c91e3585c2de74\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3100bde0bae1e70eaa034298af2005e5c7944ea46ae287c68f8400e36987730c\",\"dweb:/ipfs/QmZgXTqKRdxJyG7C4sX5cuY9TPKfSrBwMTeFRwXnojFJ7p\"]},\"erc3643/erc3643/proxy/AbstractProxy.sol\":{\"keccak256\":\"0xbf32caa0e3838e074d57d5c4f3f9174fcf55952e993edb3a9aeb3cf09c7b9a6c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://4327b215eeacb0172cafb37386e10c435b640ff58042a38b84b8c7503c4203bb\",\"dweb:/ipfs/QmdjhVn77jpAyTbXvNXEh1SqXAxfV43kWEpXaHAdUv15DS\"]},\"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol\":{\"keccak256\":\"0x624c0adbc66ae7fb0f8ebe2b441dcdbf879ae084be4ccb61c87981f8c3fefc4f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://0b5df3ac9f8f55ff0a40d2283c8620e129de43bfce5a5f45737a787454b2b4ca\",\"dweb:/ipfs/QmUsZUHGiceyTWkyc6jAdJBrKhAMoRSXc52qvsEA88aS9Q\"]},\"erc3643/erc3643/proxy/IProxy.sol\":{\"keccak256\":\"0x6493d0ec313502af3a02f83a3fbb5480d39db3a835019e6d63758ed092ce261e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3341cfa96e3672e9f7f831844731dcd93bc68526f0dd6c130f07547c7ca49538\",\"dweb:/ipfs/QmV7FZqjcUvi4tmhuQrFG744jPqRP3SqqM7U6dWNEVHFJw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 6,
								"contract": "erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol:ClaimTopicsRegistryProxy",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 9,
								"contract": "erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol:ClaimTopicsRegistryProxy",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"events": {
							"ImplementationAuthoritySet(address)": {
								"notice": "events"
							}
						},
						"kind": "user",
						"methods": {
							"setImplementationAuthority(address)": {
								"notice": "functions"
							}
						},
						"version": 1
					}
				}
			},
			"erc3643/erc3643/proxy/IProxy.sol": {
				"IProxy": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_implementationAuthority",
									"type": "address"
								}
							],
							"name": "ImplementationAuthoritySet",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "getImplementationAuthority",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newImplementationAuthority",
									"type": "address"
								}
							],
							"name": "setImplementationAuthority",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getImplementationAuthority()": "2d5f1187",
							"setImplementationAuthority(address)": "92dd9d65"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_implementationAuthority\",\"type\":\"address\"}],\"name\":\"ImplementationAuthoritySet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getImplementationAuthority\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newImplementationAuthority\",\"type\":\"address\"}],\"name\":\"setImplementationAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"ImplementationAuthoritySet(address)\":{\"notice\":\"events\"}},\"kind\":\"user\",\"methods\":{\"setImplementationAuthority(address)\":{\"notice\":\"functions\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc3643/erc3643/proxy/IProxy.sol\":\"IProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc3643/erc3643/proxy/IProxy.sol\":{\"keccak256\":\"0x6493d0ec313502af3a02f83a3fbb5480d39db3a835019e6d63758ed092ce261e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3341cfa96e3672e9f7f831844731dcd93bc68526f0dd6c130f07547c7ca49538\",\"dweb:/ipfs/QmV7FZqjcUvi4tmhuQrFG744jPqRP3SqqM7U6dWNEVHFJw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"ImplementationAuthoritySet(address)": {
								"notice": "events"
							}
						},
						"kind": "user",
						"methods": {
							"setImplementationAuthority(address)": {
								"notice": "functions"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							498
						],
						"Initializable": [
							168
						]
					},
					"id": 169,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../../utils/AddressUpgradeable.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 169,
							"sourceUnit": 499,
							"src": "138:44:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "184:2209:0",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 168,
							"linearizedBaseContracts": [
								168
							],
							"name": "Initializable",
							"nameLocation": "2412:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 4,
										"nodeType": "StructuredDocumentation",
										"src": "2432:109:0",
										"text": " @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"
									},
									"id": 6,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "2560:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 168,
									"src": "2546:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 5,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2546:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 7,
										"nodeType": "StructuredDocumentation",
										"src": "2579:91:0",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 9,
									"mutability": "mutable",
									"name": "_initializing",
									"nameLocation": "2688:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 168,
									"src": "2675:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 8,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2675:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 10,
										"nodeType": "StructuredDocumentation",
										"src": "2708:90:0",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498",
									"id": 14,
									"name": "Initialized",
									"nameLocation": "2809:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "2827:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "2821:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 11,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2821:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2820:15:0"
									},
									"src": "2803:33:0"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "3269:483:0",
										"statements": [
											{
												"assignments": [
													18
												],
												"declarations": [
													{
														"constant": false,
														"id": 18,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "3284:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 69,
														"src": "3279:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 17,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3279:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 21,
												"initialValue": {
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3301:14:0",
													"subExpression": {
														"id": 19,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "3302:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3279:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 27,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 23,
																			"name": "isTopLevelCall",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 18,
																			"src": "3347:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 26,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 24,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 6,
																				"src": "3365:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 25,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3380:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3365:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3347:34:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 28,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3346:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 36,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "3387:45:0",
																			"subExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 33,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "3426:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_Initializable_$168",
																									"typeString": "contract Initializable"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_Initializable_$168",
																									"typeString": "contract Initializable"
																								}
																							],
																							"id": 32,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3418:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 31,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "3418:7:0",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 34,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3418:13:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"id": 29,
																						"name": "AddressUpgradeable",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 498,
																						"src": "3388:18:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$498_$",
																							"typeString": "type(library AddressUpgradeable)"
																						}
																					},
																					"id": 30,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3407:10:0",
																					"memberName": "isContract",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 186,
																					"src": "3388:29:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																						"typeString": "function (address) view returns (bool)"
																					}
																				},
																				"id": 35,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3388:44:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 39,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 37,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 6,
																				"src": "3436:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 38,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3452:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3436:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3387:66:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 41,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3386:68:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3346:108:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 43,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3468:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 22,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3325:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3325:201:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 45,
												"nodeType": "ExpressionStatement",
												"src": "3325:201:0"
											},
											{
												"expression": {
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 46,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "3536:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 47,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3551:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3536:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "3536:16:0"
											},
											{
												"condition": {
													"id": 50,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 18,
													"src": "3566:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 56,
												"nodeType": "IfStatement",
												"src": "3562:65:0",
												"trueBody": {
													"id": 55,
													"nodeType": "Block",
													"src": "3582:45:0",
													"statements": [
														{
															"expression": {
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 51,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "3596:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 52,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3612:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3596:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 54,
															"nodeType": "ExpressionStatement",
															"src": "3596:20:0"
														}
													]
												}
											},
											{
												"id": 57,
												"nodeType": "PlaceholderStatement",
												"src": "3636:1:0"
											},
											{
												"condition": {
													"id": 58,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 18,
													"src": "3651:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 68,
												"nodeType": "IfStatement",
												"src": "3647:99:0",
												"trueBody": {
													"id": 67,
													"nodeType": "Block",
													"src": "3667:79:0",
													"statements": [
														{
															"expression": {
																"id": 61,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 59,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "3681:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 60,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3697:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3681:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 62,
															"nodeType": "ExpressionStatement",
															"src": "3681:21:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 64,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3733:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 63,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "3721:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 65,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3721:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 66,
															"nodeType": "EmitStatement",
															"src": "3716:19:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "2842:399:0",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."
									},
									"id": 70,
									"name": "initializer",
									"nameLocation": "3255:11:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3266:2:0"
									},
									"src": "3246:506:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "4863:255:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "4881:14:0",
																"subExpression": {
																	"id": 76,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "4882:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 80,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 78,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "4899:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 79,
																	"name": "version",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 73,
																	"src": "4914:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "4899:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4881:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4923:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 75,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4873:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:99:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "4873:99:0"
											},
											{
												"expression": {
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 85,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "4982:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 86,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "4997:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4982:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 88,
												"nodeType": "ExpressionStatement",
												"src": "4982:22:0"
											},
											{
												"expression": {
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 89,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "5014:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 90,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5030:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5014:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "5014:20:0"
											},
											{
												"id": 93,
												"nodeType": "PlaceholderStatement",
												"src": "5044:1:0"
											},
											{
												"expression": {
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 94,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "5055:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 95,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5071:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "5055:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 97,
												"nodeType": "ExpressionStatement",
												"src": "5055:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 99,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "5103:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 98,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "5091:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
															"typeString": "function (uint8)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5091:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "5086:25:0"
											}
										]
									},
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "3758:1062:0",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 103,
									"name": "reinitializer",
									"nameLocation": "4834:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "4854:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "4848:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 72,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4848:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4847:15:0"
									},
									"src": "4825:293:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 112,
										"nodeType": "Block",
										"src": "5356:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 107,
															"name": "_initializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "5374:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67",
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5389:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															},
															"value": "Initializable: contract is not initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															}
														],
														"id": 106,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5366:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5366:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 110,
												"nodeType": "ExpressionStatement",
												"src": "5366:69:0"
											},
											{
												"id": 111,
												"nodeType": "PlaceholderStatement",
												"src": "5445:1:0"
											}
										]
									},
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "5124:199:0",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 113,
									"name": "onlyInitializing",
									"nameLocation": "5337:16:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5353:2:0"
									},
									"src": "5328:125:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "5988:231:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "6006:14:0",
															"subExpression": {
																"id": 118,
																"name": "_initializing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 9,
																"src": "6007:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67",
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6022:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															},
															"value": "Initializable: contract is initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															}
														],
														"id": 117,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5998:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 122,
												"nodeType": "ExpressionStatement",
												"src": "5998:66:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 123,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "6078:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6099:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 125,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "6099:5:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 124,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6094:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6094:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 128,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6106:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6094:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "6078:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 147,
												"nodeType": "IfStatement",
												"src": "6074:139:0",
												"trueBody": {
													"id": 146,
													"nodeType": "Block",
													"src": "6111:102:0",
													"statements": [
														{
															"expression": {
																"id": 136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 130,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "6125:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 133,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6145:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 132,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "6145:5:0",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				}
																			],
																			"id": 131,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "6140:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6140:11:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint8",
																			"typeString": "type(uint8)"
																		}
																	},
																	"id": 135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "6152:3:0",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "6140:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "6125:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 137,
															"nodeType": "ExpressionStatement",
															"src": "6125:30:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 141,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "6191:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					},
																					"typeName": {
																						"id": 140,
																						"name": "uint8",
																						"nodeType": "ElementaryTypeName",
																						"src": "6191:5:0",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					}
																				],
																				"id": 139,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "6186:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 142,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6186:11:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint8",
																				"typeString": "type(uint8)"
																			}
																		},
																		"id": 143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6198:3:0",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "6186:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 138,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "6174:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6174:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 145,
															"nodeType": "EmitStatement",
															"src": "6169:33:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "5459:475:0",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "5948:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5968:2:0"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5988:0:0"
									},
									"scope": 168,
									"src": "5939:280:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 157,
										"nodeType": "Block",
										"src": "6393:36:0",
										"statements": [
											{
												"expression": {
													"id": 155,
													"name": "_initialized",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 6,
													"src": "6410:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 154,
												"id": 156,
												"nodeType": "Return",
												"src": "6403:19:0"
											}
										]
									},
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "6225:99:0",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "6338:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6360:2:0"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "6386:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 152,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6386:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6385:7:0"
									},
									"scope": 168,
									"src": "6329:100:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "6601:37:0",
										"statements": [
											{
												"expression": {
													"id": 164,
													"name": "_initializing",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 9,
													"src": "6618:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 163,
												"id": 165,
												"nodeType": "Return",
												"src": "6611:20:0"
											}
										]
									},
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "6435:105:0",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "6554:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6569:2:0"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "6595:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 161,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6595:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6594:6:0"
									},
									"scope": 168,
									"src": "6545:93:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 169,
							"src": "2394:4246:0",
							"usedErrors": []
						}
					],
					"src": "113:6528:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							498
						]
					},
					"id": 499,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 170,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AddressUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 171,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:1",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 498,
							"linearizedBaseContracts": [
								498
							],
							"name": "AddressUpgradeable",
							"nameLocation": "202:18:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 185,
										"nodeType": "Block",
										"src": "1489:254:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 179,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 174,
																"src": "1713:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1721:4:1",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1713:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 181,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1726:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1713:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 182,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1735:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1713:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 178,
												"id": 184,
												"nodeType": "Return",
												"src": "1706:30:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "227:1191:1",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1432:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1451:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "1443:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1443:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1442:17:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "1483:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1483:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1482:6:1"
									},
									"scope": 498,
									"src": "1423:320:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "2729:241:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 197,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2755:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$498",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$498",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2747:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 195,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2747:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2747:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2761:7:1",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2747:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 200,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 191,
																"src": "2772:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2747:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 202,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2780:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 194,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2739:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2739:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 204,
												"nodeType": "ExpressionStatement",
												"src": "2739:73:1"
											},
											{
												"assignments": [
													206,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 206,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2829:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 219,
														"src": "2824:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 205,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2824:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 213,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2872:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 207,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 189,
																"src": "2842:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2852:4:1",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2842:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 210,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 209,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 191,
																"src": "2864:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2842:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2842:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2823:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 215,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 206,
															"src": "2893:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2902:60:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 214,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2885:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2885:78:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 218,
												"nodeType": "ExpressionStatement",
												"src": "2885:78:1"
											}
										]
									},
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "1749:904:1",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2667:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2693:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "2677:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2712:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "2704:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2676:43:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2729:0:1"
									},
									"scope": 498,
									"src": "2658:312:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "3801:96:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 231,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "3840:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 232,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "3848:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3854:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 234,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3857:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 230,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															278,
															322
														],
														"referencedDeclaration": 322,
														"src": "3818:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3818:72:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 229,
												"id": 236,
												"nodeType": "Return",
												"src": "3811:79:1"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "2976:731:1",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3721:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3742:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "3734:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3734:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3763:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "3750:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 224,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3750:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3733:35:1"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "3787:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 227,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3787:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3786:14:1"
									},
									"scope": 498,
									"src": "3712:185:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "4266:76:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 251,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "4305:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 252,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "4313:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4319:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 254,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "4322:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 250,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															278,
															322
														],
														"referencedDeclaration": 322,
														"src": "4283:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4283:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 249,
												"id": 256,
												"nodeType": "Return",
												"src": "4276:59:1"
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "3903:211:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4128:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4158:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "4150:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4150:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4187:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "4174:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 242,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4174:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4215:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "4201:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 244,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4201:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4140:93:1"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "4252:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 247,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4252:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4251:14:1"
									},
									"scope": 498,
									"src": "4119:223:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "4817:111:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 271,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "4856:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 272,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "4864:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 273,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "4870:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4877:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 270,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															278,
															322
														],
														"referencedDeclaration": 322,
														"src": "4834:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4834:87:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 269,
												"id": 276,
												"nodeType": "Return",
												"src": "4827:94:1"
											}
										]
									},
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "4348:351:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4713:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4743:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "4735:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4735:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4764:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "4751:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 262,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4751:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4778:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "4770:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4770:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4734:50:1"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "4803:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 267,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4803:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4802:14:1"
									},
									"scope": 498,
									"src": "4704:224:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 321,
										"nodeType": "Block",
										"src": "5355:267:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 299,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 295,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5381:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$498",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$498",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5373:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 293,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5373:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5373:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5387:7:1",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5373:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 298,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "5398:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5373:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 300,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5405:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 292,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5365:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5365:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "5365:81:1"
											},
											{
												"assignments": [
													304,
													306
												],
												"declarations": [
													{
														"constant": false,
														"id": 304,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5462:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 321,
														"src": "5457:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 303,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5457:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 306,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5484:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 321,
														"src": "5471:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 305,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5471:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 313,
												"initialValue": {
													"arguments": [
														{
															"id": 311,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "5524:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 307,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 281,
																"src": "5498:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5505:4:1",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5498:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 310,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 309,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "5517:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5498:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5498:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5456:73:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 315,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "5573:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 316,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "5581:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 317,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 306,
															"src": "5590:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 318,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "5602:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 314,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "5546:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5546:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 291,
												"id": 320,
												"nodeType": "Return",
												"src": "5539:76:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "4934:237:1",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 322,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5185:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5224:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "5216:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5216:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5253:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "5240:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 282,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5240:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5275:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "5267:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5267:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5304:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "5290:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 286,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5290:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5206:116:1"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "5341:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 289,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5341:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5340:14:1"
									},
									"scope": 498,
									"src": "5176:446:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 338,
										"nodeType": "Block",
										"src": "5899:97:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 333,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 325,
															"src": "5935:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 334,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "5943:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5949:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 332,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															339,
															368
														],
														"referencedDeclaration": 368,
														"src": "5916:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5916:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 331,
												"id": 337,
												"nodeType": "Return",
												"src": "5909:80:1"
											}
										]
									},
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "5628:166:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5808:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5835:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "5827:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5827:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5856:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "5843:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 326,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5843:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5826:35:1"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "5885:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 329,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5885:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5884:14:1"
									},
									"scope": 498,
									"src": "5799:197:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 367,
										"nodeType": "Block",
										"src": "6338:168:1",
										"statements": [
											{
												"assignments": [
													352,
													354
												],
												"declarations": [
													{
														"constant": false,
														"id": 352,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6354:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 367,
														"src": "6349:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 351,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6349:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 354,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6376:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 367,
														"src": "6363:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 353,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6363:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 359,
												"initialValue": {
													"arguments": [
														{
															"id": 357,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "6408:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 355,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "6390:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 356,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6397:10:1",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6390:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6348:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 361,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "6457:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 362,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "6465:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 363,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 354,
															"src": "6474:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 364,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "6486:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 360,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "6430:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6430:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 350,
												"id": 366,
												"nodeType": "Return",
												"src": "6423:76:1"
											}
										]
									},
									"documentation": {
										"id": 340,
										"nodeType": "StructuredDocumentation",
										"src": "6002:173:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6189:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6225:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "6217:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6217:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6254:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "6241:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 343,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6241:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6282:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "6268:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 345,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6268:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6207:93:1"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "6324:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 348,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6324:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6323:14:1"
									},
									"scope": 498,
									"src": "6180:326:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "6782:101:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 379,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 371,
															"src": "6820:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 380,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "6828:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6834:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 378,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															385,
															414
														],
														"referencedDeclaration": 414,
														"src": "6799:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6799:77:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 377,
												"id": 383,
												"nodeType": "Return",
												"src": "6792:84:1"
											}
										]
									},
									"documentation": {
										"id": 369,
										"nodeType": "StructuredDocumentation",
										"src": "6512:168:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6694:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6723:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "6715:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6715:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6744:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "6731:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 372,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6731:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6714:35:1"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "6768:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 375,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6768:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6767:14:1"
									},
									"scope": 498,
									"src": "6685:198:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 413,
										"nodeType": "Block",
										"src": "7224:170:1",
										"statements": [
											{
												"assignments": [
													398,
													400
												],
												"declarations": [
													{
														"constant": false,
														"id": 398,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7240:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 413,
														"src": "7235:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 397,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7235:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 400,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7262:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 413,
														"src": "7249:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 399,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7249:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 405,
												"initialValue": {
													"arguments": [
														{
															"id": 403,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "7296:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 401,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7276:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 402,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7283:12:1",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7276:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7276:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7234:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 407,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7345:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 408,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "7353:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 409,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "7362:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 410,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "7374:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 406,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "7318:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7318:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 396,
												"id": 412,
												"nodeType": "Return",
												"src": "7311:76:1"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "6889:175:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7078:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7116:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "7108:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7145:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "7132:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 389,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7132:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7173:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "7159:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 391,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7159:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7098:93:1"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "7210:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 394,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7210:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7209:14:1"
									},
									"scope": 498,
									"src": "7069:325:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "7876:434:1",
										"statements": [
											{
												"condition": {
													"id": 428,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 419,
													"src": "7890:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 450,
													"nodeType": "Block",
													"src": "8246:58:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 446,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 421,
																		"src": "8268:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 447,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 423,
																		"src": "8280:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 445,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 497,
																	"src": "8260:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8260:33:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 449,
															"nodeType": "ExpressionStatement",
															"src": "8260:33:1"
														}
													]
												},
												"id": 451,
												"nodeType": "IfStatement",
												"src": "7886:418:1",
												"trueBody": {
													"id": 444,
													"nodeType": "Block",
													"src": "7899:341:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 429,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 421,
																		"src": "7917:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7928:6:1",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7917:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7938:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7917:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 441,
															"nodeType": "IfStatement",
															"src": "7913:286:1",
															"trueBody": {
																"id": 440,
																"nodeType": "Block",
																"src": "7941:258:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 435,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 417,
																							"src": "8143:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 434,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 186,
																						"src": "8132:10:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 436,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8132:18:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 437,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8152:31:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 433,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8124:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 438,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8124:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 439,
																		"nodeType": "ExpressionStatement",
																		"src": "8124:60:1"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 442,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "8219:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 427,
															"id": 443,
															"nodeType": "Return",
															"src": "8212:17:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "7400:277:1",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7691:26:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7735:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "7727:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7727:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7756:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "7751:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 418,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7751:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7786:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "7773:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 420,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7773:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7820:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "7806:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 422,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7806:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7717:121:1"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "7862:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 425,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7862:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7861:14:1"
									},
									"scope": 498,
									"src": "7682:628:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "8691:135:1",
										"statements": [
											{
												"condition": {
													"id": 465,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 456,
													"src": "8705:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 474,
													"nodeType": "Block",
													"src": "8762:58:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 470,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 458,
																		"src": "8784:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 471,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 460,
																		"src": "8796:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 469,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 497,
																	"src": "8776:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8776:33:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 473,
															"nodeType": "ExpressionStatement",
															"src": "8776:33:1"
														}
													]
												},
												"id": 475,
												"nodeType": "IfStatement",
												"src": "8701:119:1",
												"trueBody": {
													"id": 468,
													"nodeType": "Block",
													"src": "8714:42:1",
													"statements": [
														{
															"expression": {
																"id": 466,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "8735:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 464,
															"id": 467,
															"nodeType": "Return",
															"src": "8728:17:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 454,
										"nodeType": "StructuredDocumentation",
										"src": "8316:210:1",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8540:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8571:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "8566:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 455,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8566:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8601:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "8588:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 457,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8588:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8635:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "8621:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 459,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8621:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8556:97:1"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "8677:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 462,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8677:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8676:14:1"
									},
									"scope": 498,
									"src": "8531:295:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 496,
										"nodeType": "Block",
										"src": "8915:457:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 484,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "8991:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 485,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9002:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8991:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 486,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9011:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8991:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 494,
													"nodeType": "Block",
													"src": "9321:45:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 491,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 481,
																		"src": "9342:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 490,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9335:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9335:20:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 493,
															"nodeType": "ExpressionStatement",
															"src": "9335:20:1"
														}
													]
												},
												"id": 495,
												"nodeType": "IfStatement",
												"src": "8987:379:1",
												"trueBody": {
													"id": 489,
													"nodeType": "Block",
													"src": "9014:301:1",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "9172:133:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9190:40:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9219:10:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9213:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9213:17:1"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "9194:15:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9258:2:1",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9262:10:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9254:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9254:19:1"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9275:15:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9247:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9247:44:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9247:44:1"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 479,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9219:10:1",
																	"valueSize": 1
																},
																{
																	"declaration": 479,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9262:10:1",
																	"valueSize": 1
																}
															],
															"id": 488,
															"nodeType": "InlineAssembly",
															"src": "9163:142:1"
														}
													]
												}
											}
										]
									},
									"id": 497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8841:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8862:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "8849:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 478,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8849:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8888:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "8874:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 480,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8874:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8848:53:1"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8915:0:1"
									},
									"scope": 498,
									"src": "8832:540:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 499,
							"src": "194:9180:1",
							"usedErrors": []
						}
					],
					"src": "101:9274:1"
				},
				"id": 1
			},
			"erc3643/erc3643/factory/Ifactory.sol": {
				"ast": {
					"absolutePath": "erc3643/erc3643/factory/Ifactory.sol",
					"exportedSymbols": {
						"Ifactory": [
							531
						]
					},
					"id": 532,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 500,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Ifactory",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 531,
							"linearizedBaseContracts": [
								531
							],
							"name": "Ifactory",
							"nameLocation": "72:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "709bc7f3",
									"id": 505,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenImplementation",
									"nameLocation": "96:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "118:2:2"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "144:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "144:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "143:9:2"
									},
									"scope": 531,
									"src": "87:66:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6ff6e83f",
									"id": 510,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCTRImplementation",
									"nameLocation": "168:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "188:2:2"
									},
									"returnParameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "214:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "214:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "213:9:2"
									},
									"scope": 531,
									"src": "159:64:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1ee9ce8b",
									"id": 515,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getIRImplementation",
									"nameLocation": "238:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "257:2:2"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "283:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "283:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "282:9:2"
									},
									"scope": 531,
									"src": "229:63:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9e3e7bb9",
									"id": 520,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getIRSImplementation",
									"nameLocation": "307:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "327:2:2"
									},
									"returnParameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "353:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "353:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "352:9:2"
									},
									"scope": 531,
									"src": "298:64:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fedcc052",
									"id": 525,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTIRImplementation",
									"nameLocation": "377:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "397:2:2"
									},
									"returnParameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "423:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "423:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "422:9:2"
									},
									"scope": 531,
									"src": "368:64:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "61f89825",
									"id": 530,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getMCImplementation",
									"nameLocation": "447:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "466:2:2"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "492:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "492:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "491:9:2"
									},
									"scope": 531,
									"src": "438:63:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 532,
							"src": "62:441:2",
							"usedErrors": []
						}
					],
					"src": "37:467:2"
				},
				"id": 2
			},
			"erc3643/erc3643/proxy/AbstractProxy.sol": {
				"ast": {
					"absolutePath": "erc3643/erc3643/proxy/AbstractProxy.sol",
					"exportedSymbols": {
						"AbstractProxy": [
							613
						],
						"AddressUpgradeable": [
							498
						],
						"IProxy": [
							700
						],
						"Ifactory": [
							531
						],
						"Initializable": [
							168
						]
					},
					"id": 614,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 533,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:3"
						},
						{
							"absolutePath": "erc3643/erc3643/proxy/IProxy.sol",
							"file": "./IProxy.sol",
							"id": 534,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 614,
							"sourceUnit": 701,
							"src": "62:22:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "erc3643/erc3643/factory/Ifactory.sol",
							"file": "../factory/Ifactory.sol",
							"id": 535,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 614,
							"sourceUnit": 532,
							"src": "85:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 536,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 614,
							"sourceUnit": 169,
							"src": "119:75:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 537,
										"name": "IProxy",
										"nameLocations": [
											"231:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 700,
										"src": "231:6:3"
									},
									"id": 538,
									"nodeType": "InheritanceSpecifier",
									"src": "231:6:3"
								},
								{
									"baseName": {
										"id": 539,
										"name": "Initializable",
										"nameLocations": [
											"239:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 168,
										"src": "239:13:3"
									},
									"id": 540,
									"nodeType": "InheritanceSpecifier",
									"src": "239:13:3"
								}
							],
							"canonicalName": "AbstractProxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 613,
							"linearizedBaseContracts": [
								613,
								168,
								700
							],
							"name": "AbstractProxy",
							"nameLocation": "214:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										694
									],
									"body": {
										"id": 573,
										"nodeType": "Block",
										"src": "414:450:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 547,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "445:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "449:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "445:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 549,
																	"name": "getImplementationAuthority",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "459:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "459:28:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "445:42:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6f6e6c792063757272656e7420696d706c656d656e746174696f6e417574686f726974792063616e2063616c6c",
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "501:47:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9b0411664657bdf301d39de4dc1d8c8916476c6a591c7fcd5f6e535fa22de2ca",
																"typeString": "literal_string \"only current implementationAuthority can call\""
															},
															"value": "only current implementationAuthority can call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9b0411664657bdf301d39de4dc1d8c8916476c6a591c7fcd5f6e535fa22de2ca",
																"typeString": "literal_string \"only current implementationAuthority can call\""
															}
														],
														"id": 546,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "424:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "424:134:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "424:134:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 556,
																"name": "_newImplementationAuthority",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 542,
																"src": "589:27:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 559,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "628:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "620:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 557,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "620:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "620:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "589:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "644:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															},
															"value": "invalid argument - zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															}
														],
														"id": 555,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "568:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "568:119:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 564,
												"nodeType": "ExpressionStatement",
												"src": "568:119:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 566,
															"name": "_newImplementationAuthority",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "728:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 565,
														"name": "_storeImplementationAuthority",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "698:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "698:58:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 568,
												"nodeType": "ExpressionStatement",
												"src": "698:58:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 570,
															"name": "_newImplementationAuthority",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "828:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 569,
														"name": "ImplementationAuthoritySet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "801:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "801:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 572,
												"nodeType": "EmitStatement",
												"src": "796:60:3"
											}
										]
									},
									"functionSelector": "92dd9d65",
									"id": 574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setImplementationAuthority",
									"nameLocation": "312:26:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 544,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "401:8:3"
									},
									"parameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "_newImplementationAuthority",
												"nameLocation": "347:27:3",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "339:35:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "339:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "338:37:3"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "414:0:3"
									},
									"scope": 613,
									"src": "303:561:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										699
									],
									"body": {
										"id": 586,
										"nodeType": "Block",
										"src": "983:222:3",
										"statements": [
											{
												"assignments": [
													581
												],
												"declarations": [
													{
														"constant": false,
														"id": 581,
														"mutability": "mutable",
														"name": "implemAuth",
														"nameLocation": "1001:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 586,
														"src": "993:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 580,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "993:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 582,
												"nodeType": "VariableDeclarationStatement",
												"src": "993:18:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1031:141:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1045:117:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1082:66:3",
																		"type": "",
																		"value": "0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "1059:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1059:103:3"
															},
															"variableNames": [
																{
																	"name": "implemAuth",
																	"nodeType": "YulIdentifier",
																	"src": "1045:10:3"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 581,
														"isOffset": false,
														"isSlot": false,
														"src": "1045:10:3",
														"valueSize": 1
													}
												],
												"id": 583,
												"nodeType": "InlineAssembly",
												"src": "1022:150:3"
											},
											{
												"expression": {
													"id": 584,
													"name": "implemAuth",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 581,
													"src": "1188:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 579,
												"id": 585,
												"nodeType": "Return",
												"src": "1181:17:3"
											}
										]
									},
									"functionSelector": "2d5f1187",
									"id": 587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementationAuthority",
									"nameLocation": "879:26:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 576,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "944:8:3"
									},
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "905:2:3"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 613,
									"src": "870:335:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "1304:194:3",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1323:169:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1361:66:3",
																		"type": "",
																		"value": "0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7"
																	},
																	{
																		"name": "implementationAuthority",
																		"nodeType": "YulIdentifier",
																		"src": "1445:23:3"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "1337:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1337:145:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1337:145:3"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 589,
														"isOffset": false,
														"isSlot": false,
														"src": "1445:23:3",
														"valueSize": 1
													}
												],
												"id": 592,
												"nodeType": "InlineAssembly",
												"src": "1314:178:3"
											}
										]
									},
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_storeImplementationAuthority",
									"nameLocation": "1220:29:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "implementationAuthority",
												"nameLocation": "1258:23:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "1250:31:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1250:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1249:33:3"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1304:0:3"
									},
									"scope": 613,
									"src": "1211:287:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 611,
										"nodeType": "Block",
										"src": "1553:77:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "656970313936372e70726f78792e6e616d65",
																				"id": 604,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1596:20:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_4cd9b827ca535ceb0880425d70eff88561ecdf04dc32fcf7ff3b15c587f8a871",
																					"typeString": "literal_string \"eip1967.proxy.name\""
																				},
																				"value": "eip1967.proxy.name"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_4cd9b827ca535ceb0880425d70eff88561ecdf04dc32fcf7ff3b15c587f8a871",
																					"typeString": "literal_string \"eip1967.proxy.name\""
																				}
																			],
																			"id": 603,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967288,
																			"src": "1586:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 605,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1586:31:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1578:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 601,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1578:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 606,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1578:40:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 607,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1621:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1578:44:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 600,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1570:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes32_$",
															"typeString": "type(bytes32)"
														},
														"typeName": {
															"id": 599,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1570:7:3",
															"typeDescriptions": {}
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1570:53:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 598,
												"id": 610,
												"nodeType": "Return",
												"src": "1563:60:3"
											}
										]
									},
									"functionSelector": "24173669",
									"id": 612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getslot",
									"nameLocation": "1513:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1520:2:3"
									},
									"returnParameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "1544:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 596,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1544:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:9:3"
									},
									"scope": 613,
									"src": "1504:126:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 614,
							"src": "196:1436:3",
							"usedErrors": []
						}
					],
					"src": "37:1596:3"
				},
				"id": 3
			},
			"erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol": {
				"ast": {
					"absolutePath": "erc3643/erc3643/proxy/ClaimTopicsRegistryProxy.sol",
					"exportedSymbols": {
						"AbstractProxy": [
							613
						],
						"AddressUpgradeable": [
							498
						],
						"ClaimTopicsRegistryProxy": [
							681
						],
						"IProxy": [
							700
						],
						"Ifactory": [
							531
						],
						"Initializable": [
							168
						]
					},
					"id": 682,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 615,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "38:23:4"
						},
						{
							"absolutePath": "erc3643/erc3643/proxy/AbstractProxy.sol",
							"file": "./AbstractProxy.sol",
							"id": 616,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 682,
							"sourceUnit": 614,
							"src": "63:29:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 617,
										"name": "AbstractProxy",
										"nameLocations": [
											"131:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 613,
										"src": "131:13:4"
									},
									"id": 618,
									"nodeType": "InheritanceSpecifier",
									"src": "131:13:4"
								}
							],
							"canonicalName": "ClaimTopicsRegistryProxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 681,
							"linearizedBaseContracts": [
								681,
								613,
								168,
								700
							],
							"name": "ClaimTopicsRegistryProxy",
							"nameLocation": "103:24:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 665,
										"nodeType": "Block",
										"src": "196:528:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 624,
																"name": "implementationAuthority",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 620,
																"src": "227:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 627,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "262:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "254:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 625,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "254:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "254:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "227:37:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "278:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															},
															"value": "invalid argument - zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															}
														],
														"id": 623,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "206:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "206:115:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 632,
												"nodeType": "ExpressionStatement",
												"src": "206:115:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 634,
															"name": "implementationAuthority",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "361:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 633,
														"name": "_storeImplementationAuthority",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "331:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "331:54:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "331:54:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 638,
															"name": "implementationAuthority",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "427:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 637,
														"name": "ImplementationAuthoritySet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "400:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "400:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 640,
												"nodeType": "EmitStatement",
												"src": "395:56:4"
											},
											{
												"assignments": [
													642
												],
												"declarations": [
													{
														"constant": false,
														"id": 642,
														"mutability": "mutable",
														"name": "logic",
														"nameLocation": "470:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 665,
														"src": "462:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 641,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "462:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 649,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 644,
																		"name": "getImplementationAuthority",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 587,
																		"src": "487:26:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 645,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "487:28:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 643,
																"name": "Ifactory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 531,
																"src": "478:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Ifactory_$531_$",
																	"typeString": "type(contract Ifactory)"
																}
															},
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "478:38:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Ifactory_$531",
																"typeString": "contract Ifactory"
															}
														},
														"id": 647,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "530:20:4",
														"memberName": "getCTRImplementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 510,
														"src": "478:72:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "478:74:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "462:90:4"
											},
											{
												"assignments": [
													651,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 651,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "577:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 665,
														"src": "572:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 650,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "572:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 659,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "696e69742829",
																	"id": 656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "646:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_e1c7392a7e1e20b8f316709125d8de13579ff9e2058d09d8f588cbffc652a3da",
																		"typeString": "literal_string \"init()\""
																	},
																	"value": "init()"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_e1c7392a7e1e20b8f316709125d8de13579ff9e2058d09d8f588cbffc652a3da",
																		"typeString": "literal_string \"init()\""
																	}
																],
																"expression": {
																	"id": 654,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "622:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 655,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "626:19:4",
																"memberName": "encodeWithSignature",
																"nodeType": "MemberAccess",
																"src": "622:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (string memory) pure returns (bytes memory)"
																}
															},
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "622:33:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 652,
															"name": "logic",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "590:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 653,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "596:12:4",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "590:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "590:75:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "571:94:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 661,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "683:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a6174696f6e206661696c65642e",
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "692:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_84817bd958e2e6d9a7351828ba5fd352a3aaf3cf97a67f6d55271e39a5b3e2ad",
																"typeString": "literal_string \"Initialization failed.\""
															},
															"value": "Initialization failed."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_84817bd958e2e6d9a7351828ba5fd352a3aaf3cf97a67f6d55271e39a5b3e2ad",
																"typeString": "literal_string \"Initialization failed.\""
															}
														],
														"id": 660,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "675:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "675:42:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 664,
												"nodeType": "ExpressionStatement",
												"src": "675:42:4"
											}
										]
									},
									"id": 666,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "implementationAuthority",
												"nameLocation": "171:23:4",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "163:31:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "163:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "162:33:4"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "196:0:4"
									},
									"scope": 681,
									"src": "151:573:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 679,
										"nodeType": "Block",
										"src": "756:693:4",
										"statements": [
											{
												"assignments": [
													670
												],
												"declarations": [
													{
														"constant": false,
														"id": 670,
														"mutability": "mutable",
														"name": "logic",
														"nameLocation": "774:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 679,
														"src": "766:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 669,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "766:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 677,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 672,
																		"name": "getImplementationAuthority",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 587,
																		"src": "791:26:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "791:28:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 671,
																"name": "Ifactory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 531,
																"src": "782:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Ifactory_$531_$",
																	"typeString": "type(contract Ifactory)"
																}
															},
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "782:38:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Ifactory_$531",
																"typeString": "contract Ifactory"
															}
														},
														"id": 675,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "834:20:4",
														"memberName": "getCTRImplementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 510,
														"src": "782:72:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "782:74:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "766:90:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "932:511:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "959:3:4",
																		"type": "",
																		"value": "0x0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:3:4",
																		"type": "",
																		"value": "0x0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "969:12:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "969:14:4"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "946:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "946:38:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "946:38:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "997:190:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "gas",
																					"nodeType": "YulIdentifier",
																					"src": "1046:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1046:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1053:5:4",
																				"type": "",
																				"value": "10000"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1042:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1042:17:4"
																	},
																	{
																		"name": "logic",
																		"nodeType": "YulIdentifier",
																		"src": "1077:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1100:3:4",
																		"type": "",
																		"value": "0x0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1121:12:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1121:14:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1153:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1172:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "delegatecall",
																	"nodeType": "YulIdentifier",
																	"src": "1012:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1012:175:4"
															},
															"variables": [
																{
																	"name": "success",
																	"nodeType": "YulTypedName",
																	"src": "1001:7:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1200:29:4",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "1213:14:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1213:16:4"
															},
															"variables": [
																{
																	"name": "retSz",
																	"nodeType": "YulTypedName",
																	"src": "1204:5:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1257:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1260:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "retSz",
																		"nodeType": "YulIdentifier",
																		"src": "1263:5:4"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1242:14:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1242:27:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1242:27:4"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1316:48:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1341:1:4",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "retSz",
																							"nodeType": "YulIdentifier",
																							"src": "1344:5:4"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "1334:6:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1334:16:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1334:16:4"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1309:55:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1314:1:4",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1385:48:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1410:1:4",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "retSz",
																							"nodeType": "YulIdentifier",
																							"src": "1413:5:4"
																						}
																					],
																					"functionName": {
																						"name": "return",
																						"nodeType": "YulIdentifier",
																						"src": "1403:6:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1403:16:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1403:16:4"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1377:56:4",
																	"value": "default"
																}
															],
															"expression": {
																"name": "success",
																"nodeType": "YulIdentifier",
																"src": "1289:7:4"
															},
															"nodeType": "YulSwitch",
															"src": "1282:151:4"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 670,
														"isOffset": false,
														"isSlot": false,
														"src": "1077:5:4",
														"valueSize": 1
													}
												],
												"id": 678,
												"nodeType": "InlineAssembly",
												"src": "923:520:4"
											}
										]
									},
									"id": 680,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "743:2:4"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "756:0:4"
									},
									"scope": 681,
									"src": "735:714:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 682,
							"src": "94:1357:4",
							"usedErrors": []
						}
					],
					"src": "38:1414:4"
				},
				"id": 4
			},
			"erc3643/erc3643/proxy/IProxy.sol": {
				"ast": {
					"absolutePath": "erc3643/erc3643/proxy/IProxy.sol",
					"exportedSymbols": {
						"IProxy": [
							700
						]
					},
					"id": 701,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 683,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IProxy",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 700,
							"linearizedBaseContracts": [
								700
							],
							"name": "IProxy",
							"nameLocation": "72:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 684,
										"nodeType": "StructuredDocumentation",
										"src": "85:11:5",
										"text": "events"
									},
									"eventSelector": "3b1074392ed8e8424715d0dda2197eede67080b377fc8370e26f3e882207f6b8",
									"id": 688,
									"name": "ImplementationAuthoritySet",
									"nameLocation": "107:26:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"indexed": true,
												"mutability": "mutable",
												"name": "_implementationAuthority",
												"nameLocation": "150:24:5",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "134:40:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "134:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "133:42:5"
									},
									"src": "101:75:5"
								},
								{
									"documentation": {
										"id": 689,
										"nodeType": "StructuredDocumentation",
										"src": "182:14:5",
										"text": "functions"
									},
									"functionSelector": "92dd9d65",
									"id": 694,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setImplementationAuthority",
									"nameLocation": "210:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "_newImplementationAuthority",
												"nameLocation": "245:27:5",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "237:35:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "237:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "236:37:5"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "290:0:5"
									},
									"scope": 700,
									"src": "201:90:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2d5f1187",
									"id": 699,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementationAuthority",
									"nameLocation": "306:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "332:2:5"
									},
									"returnParameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "358:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:9:5"
									},
									"scope": 700,
									"src": "297:70:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 701,
							"src": "62:307:5",
							"usedErrors": []
						}
					],
					"src": "37:333:5"
				},
				"id": 5
			}
		}
	}
}